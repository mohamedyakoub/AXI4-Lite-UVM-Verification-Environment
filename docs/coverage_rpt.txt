Coverage Report by instance with details

=================================================================================
=== Instance: /tb/AXI4_intf
=== Design Unit: work.AXI4_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        244       231        13    94.67%

================================Toggle Details================================

Toggle Coverage for instance /tb/AXI4_intf --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                               rst           1           0       50.00 
                               s_axil_araddr[15-0]           1           1      100.00 
                                  s_axil_arprot[2]           0           0        0.00 
                                s_axil_arprot[1-0]           1           1      100.00 
                                    s_axil_arready           1           1      100.00 
                                    s_axil_arvalid           1           1      100.00 
                               s_axil_awaddr[15-0]           1           1      100.00 
                                  s_axil_awprot[2]           0           0        0.00 
                                s_axil_awprot[1-0]           1           1      100.00 
                                    s_axil_awready           1           1      100.00 
                                    s_axil_awvalid           1           1      100.00 
                                     s_axil_bready           1           1      100.00 
                                 s_axil_bresp[1-0]           0           0        0.00 
                                     s_axil_bvalid           1           1      100.00 
                                s_axil_rdata[31-0]           1           1      100.00 
                                     s_axil_rready           1           1      100.00 
                                 s_axil_rresp[1-0]           0           0        0.00 
                                     s_axil_rvalid           1           1      100.00 
                                s_axil_wdata[31-0]           1           1      100.00 
                                     s_axil_wready           1           1      100.00 
                                 s_axil_wstrb[3-0]           1           1      100.00 
                                     s_axil_wvalid           1           1      100.00 

Total Node Count     =        122 
Toggled Node Count   =        115 
Untoggled Node Count =          7 

Toggle Coverage      =      94.67% (231 of 244 bins)

=================================================================================
=== Instance: /tb/DUT/assertions_inst
=== Design Unit: work.AXI4_Assertions
=================================================================================

Assertion Coverage:
    Assertions                       9         8         1    88.88%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/tb/DUT/assertions_inst/stable_awaddr_assertion
                     ../tb/Env/AXI4_Assertions.sv(30)
                                                        0          1
/tb/DUT/assertions_inst/awvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(37)
                                                        0          1
/tb/DUT/assertions_inst/stable_wdata_assertion
                     ../tb/Env/AXI4_Assertions.sv(44)
                                                        0          1
/tb/DUT/assertions_inst/wvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(51)
                                                        0          1
/tb/DUT/assertions_inst/bvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(58)
                                                        0          1
/tb/DUT/assertions_inst/stable_araddr_assertion
                     ../tb/Env/AXI4_Assertions.sv(65)
                                                        0          1
/tb/DUT/assertions_inst/arvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(72)
                                                        0          1
/tb/DUT/assertions_inst/stable_rdata_assertion
                     ../tb/Env/AXI4_Assertions.sv(79)
                                                      655          1
/tb/DUT/assertions_inst/rvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(86)
                                                        0          1

Directive Coverage:
    Directives                       9         9         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/tb/DUT/assertions_inst/stable_awaddr_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(31)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/awvalid_cover    AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(38)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/stable_wdata_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(45)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/wvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(52)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/bvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(59)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/stable_araddr_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(66)
                                                                              26970 Covered   
/tb/DUT/assertions_inst/arvalid_cover    AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(73)
                                                                              26970 Covered   
/tb/DUT/assertions_inst/stable_rdata_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(80)
                                                                              26314 Covered   
/tb/DUT/assertions_inst/rvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(87)
                                                                              26969 Covered   
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        308       231        77    75.00%

================================Toggle Details================================

Toggle Coverage for instance /tb/DUT/assertions_inst --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                               rst           1           0       50.00 
                               s_axil_araddr[0-15]           1           1      100.00 
                              s_axil_araddr[16-31]           0           0        0.00 
                                s_axil_arprot[0-1]           1           1      100.00 
                                  s_axil_arprot[2]           0           0        0.00 
                                    s_axil_arready           1           1      100.00 
                                    s_axil_arvalid           1           1      100.00 
                               s_axil_awaddr[0-15]           1           1      100.00 
                              s_axil_awaddr[16-31]           0           0        0.00 
                                s_axil_awprot[0-1]           1           1      100.00 
                                  s_axil_awprot[2]           0           0        0.00 
                                    s_axil_awready           1           1      100.00 
                                    s_axil_awvalid           1           1      100.00 
                                     s_axil_bready           1           1      100.00 
                                 s_axil_bresp[0-1]           0           0        0.00 
                                     s_axil_bvalid           1           1      100.00 
                                s_axil_rdata[0-31]           1           1      100.00 
                                     s_axil_rready           1           1      100.00 
                                 s_axil_rresp[0-1]           0           0        0.00 
                                     s_axil_rvalid           1           1      100.00 
                                s_axil_wdata[0-31]           1           1      100.00 
                                     s_axil_wready           1           1      100.00 
                                 s_axil_wstrb[0-3]           1           1      100.00 
                                     s_axil_wvalid           1           1      100.00 

Total Node Count     =        154 
Toggled Node Count   =        115 
Untoggled Node Count =         39 

Toggle Coverage      =      75.00% (231 of 308 bins)

=================================================================================
=== Instance: /tb/DUT
=== Design Unit: work.axil_ram
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        14        14         0   100.00%

================================Branch Details================================

Branch Coverage for instance /tb/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../rtl/axil_ram.v
------------------------------------IF Branch------------------------------------
    120                                   138291     Count coming in to IF
    120             1                      13494         if (s_axil_awvalid && s_axil_wvalid && (!s_axil_bvalid || s_axil_bready) && (!s_axil_awready && !s_axil_wready)) begin
                                          124797     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    135                                   253256     Count coming in to IF
    135             1                      39586             if (mem_wr_en && s_axil_wstrb[i]) begin
                                          213670     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    140                                    63314     Count coming in to IF
    140             1                          1         if (rst) begin
                                           63313     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    153                                   165070     Count coming in to IF
    153             1                      26971         if (s_axil_arvalid && (!s_axil_rvalid || s_axil_rready || (PIPELINE_OUTPUT && !s_axil_rvalid_pipe_reg)) && (!s_axil_arready)) begin
                                          138099     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    165                                   161467     Count coming in to IF
    165             1                      26970         if (mem_rd_en) begin
                                          134497     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    169                                   161467     Count coming in to IF
    169             1                     136693         if (!s_axil_rvalid_pipe_reg || s_axil_rready) begin
                                           24774     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    174                                   161467     Count coming in to IF
    174             1                          1         if (rst) begin
                                          161466     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      14        10         4    71.42%

================================Condition Details================================

Condition Coverage for instance /tb/DUT --

  File ../rtl/axil_ram.v
----------------Focused Condition View-------------------
Line       120 Item    1  (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && (s_axil_awready ~| s_axil_wready))
Condition totals: 3 of 6 input terms covered = 50.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  s_axil_awvalid         Y
   s_axil_wvalid         Y
   s_axil_bvalid         Y
   s_axil_bready         N  '_1' not hit             Hit '_1'
  s_axil_awready         N  '_1' not hit             Hit '_1'
   s_axil_wready         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  s_axil_awvalid_0      -                             
  Row   2:          1  s_axil_awvalid_1      ((s_axil_awready ~| s_axil_wready) && (~s_axil_bvalid || s_axil_bready) && s_axil_wvalid)
  Row   3:          1  s_axil_wvalid_0       s_axil_awvalid                
  Row   4:          1  s_axil_wvalid_1       ((s_axil_awready ~| s_axil_wready) && (~s_axil_bvalid || s_axil_bready) && s_axil_awvalid)
  Row   5:          1  s_axil_bvalid_0       ((s_axil_awready ~| s_axil_wready) && (s_axil_awvalid && s_axil_wvalid))
  Row   6:          1  s_axil_bvalid_1       ((s_axil_awvalid && s_axil_wvalid) && ~s_axil_bready)
  Row   7:          1  s_axil_bready_0       ((s_axil_awvalid && s_axil_wvalid) && s_axil_bvalid)
  Row   8:    ***0***  s_axil_bready_1       ((s_axil_awready ~| s_axil_wready) && (s_axil_awvalid && s_axil_wvalid) && s_axil_bvalid)
  Row   9:          1  s_axil_awready_0      (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && ~s_axil_wready)
 Row   10:    ***0***  s_axil_awready_1      (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && ~s_axil_wready)
 Row   11:          1  s_axil_wready_0       (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && ~s_axil_awready)
 Row   12:    ***0***  s_axil_wready_1       (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && ~s_axil_awready)

----------------Focused Condition View-------------------
Line       135 Item    1  (mem_wr_en && s_axil_wstrb[i])
Condition totals: 2 of 2 input terms covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
        mem_wr_en         Y
  s_axil_wstrb[i]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  mem_wr_en_0           -                             
  Row   2:          1  mem_wr_en_1           s_axil_wstrb[i]               
  Row   3:          1  s_axil_wstrb[i]_0     mem_wr_en                     
  Row   4:          1  s_axil_wstrb[i]_1     mem_wr_en                     

----------------Focused Condition View-------------------
Line       153 Item    1  ((s_axil_arvalid && (~s_axil_rvalid || s_axil_rready)) && ~s_axil_arready)
Condition totals: 3 of 4 input terms covered = 75.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  s_axil_arvalid         Y
   s_axil_rvalid         Y
   s_axil_rready         N  '_1' not hit             Hit '_1'
  s_axil_arready         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  s_axil_arvalid_0      -                             
  Row   2:          1  s_axil_arvalid_1      (~s_axil_arready && (~s_axil_rvalid || s_axil_rready))
  Row   3:          1  s_axil_rvalid_0       (~s_axil_arready && s_axil_arvalid)
  Row   4:          1  s_axil_rvalid_1       (s_axil_arvalid && ~s_axil_rready)
  Row   5:          1  s_axil_rready_0       (s_axil_arvalid && s_axil_rvalid)
  Row   6:    ***0***  s_axil_rready_1       (~s_axil_arready && s_axil_arvalid && s_axil_rvalid)
  Row   7:          1  s_axil_arready_0      (s_axil_arvalid && (~s_axil_rvalid || s_axil_rready))
  Row   8:          1  s_axil_arready_1      (s_axil_arvalid && (~s_axil_rvalid || s_axil_rready))

----------------Focused Condition View-------------------
Line       169 Item    1  (~s_axil_rvalid_pipe_reg || s_axil_rready)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  s_axil_rvalid_pipe_reg         Y
           s_axil_rready         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  s_axil_rvalid_pipe_reg_0  -                             
  Row   2:          1  s_axil_rvalid_pipe_reg_1  ~s_axil_rready                
  Row   3:          1  s_axil_rready_0           s_axil_rvalid_pipe_reg        
  Row   4:          1  s_axil_rready_1           s_axil_rvalid_pipe_reg        


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      4         4         0   100.00%

================================Expression Details================================

Expression Coverage for instance /tb/DUT --

  File ../rtl/axil_ram.v
----------------Focused Expression View-----------------
Line       118 Item    1  (s_axil_bvalid_reg && ~s_axil_bready)
Expression totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  s_axil_bvalid_reg         Y
      s_axil_bready         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  s_axil_bvalid_reg_0   -                             
  Row   2:          1  s_axil_bvalid_reg_1   ~s_axil_bready                
  Row   3:          1  s_axil_bready_0       s_axil_bvalid_reg             
  Row   4:          1  s_axil_bready_1       s_axil_bvalid_reg             

----------------Focused Expression View-----------------
Line       151 Item    1  (s_axil_rvalid_reg && ~s_axil_rready)
Expression totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  s_axil_rvalid_reg         Y
      s_axil_rready         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  s_axil_rvalid_reg_0   -                             
  Row   2:          1  s_axil_rvalid_reg_1   ~s_axil_rready                
  Row   3:          1  s_axil_rready_0       s_axil_rvalid_reg             
  Row   4:          1  s_axil_rready_1       s_axil_rvalid_reg             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      50        50         0   100.00%

================================Statement Details================================

Statement Coverage for instance /tb/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../rtl/axil_ram.v
    34                                               module axil_ram #
    35                                               (
    36                                                   // Width of data bus in bits
    37                                                   parameter DATA_WIDTH = 32,
    38                                                   // Width of address bus in bits
    39                                                   parameter ADDR_WIDTH = 16,
    40                                                   // Width of wstrb (width of data bus in words)
    41                                                   parameter STRB_WIDTH = (DATA_WIDTH/8),
    42                                                   // Extra pipeline register on output
    43                                                   parameter PIPELINE_OUTPUT = 0
    44                                               )
    45                                               (
    46                                                   input  wire                   clk,
    47                                                   input  wire                   rst,
    48                                               
    49                                                   input  wire [ADDR_WIDTH-1:0]  s_axil_awaddr,
    50                                                   input  wire [2:0]             s_axil_awprot,
    51                                                   input  wire                   s_axil_awvalid,
    52                                                   output wire                   s_axil_awready,
    53                                                   input  wire [DATA_WIDTH-1:0]  s_axil_wdata,
    54                                                   input  wire [STRB_WIDTH-1:0]  s_axil_wstrb,
    55                                                   input  wire                   s_axil_wvalid,
    56                                                   output wire                   s_axil_wready,
    57                                                   output wire [1:0]             s_axil_bresp,
    58                                                   output wire                   s_axil_bvalid,
    59                                                   input  wire                   s_axil_bready,
    60                                                   input  wire [ADDR_WIDTH-1:0]  s_axil_araddr,
    61                                                   input  wire [2:0]             s_axil_arprot,
    62                                                   input  wire                   s_axil_arvalid,
    63                                                   output wire                   s_axil_arready,
    64                                                   output wire [DATA_WIDTH-1:0]  s_axil_rdata,
    65                                                   output wire [1:0]             s_axil_rresp,
    66                                                   output wire                   s_axil_rvalid,
    67                                                   input  wire                   s_axil_rready
    68                                               );
    69                                               
    70                                               parameter VALID_ADDR_WIDTH = ADDR_WIDTH - $clog2(STRB_WIDTH);
    71                                               parameter WORD_WIDTH = STRB_WIDTH;
    72                                               parameter WORD_SIZE = DATA_WIDTH/WORD_WIDTH;
    73                                               
    74                                               reg mem_wr_en;
    75                                               reg mem_rd_en;
    76                                               
    77              1                          1     reg s_axil_awready_reg = 1'b0, s_axil_awready_next;
    78              1                          1     reg s_axil_wready_reg = 1'b0, s_axil_wready_next;
    79              1                          1     reg s_axil_bvalid_reg = 1'b0, s_axil_bvalid_next;
    80              1                          1     reg s_axil_arready_reg = 1'b0, s_axil_arready_next;
    81              1                          1     reg [DATA_WIDTH-1:0] s_axil_rdata_reg = {DATA_WIDTH{1'b0}}, s_axil_rdata_next;
    82              1                          1     reg s_axil_rvalid_reg = 1'b0, s_axil_rvalid_next;
    83              1                          1     reg [DATA_WIDTH-1:0] s_axil_rdata_pipe_reg = {DATA_WIDTH{1'b0}};
    84              1                          1     reg s_axil_rvalid_pipe_reg = 1'b0;
    85                                               
    86                                               // (* RAM_STYLE="BLOCK" *)
    87                                               reg [DATA_WIDTH-1:0] mem[(2**VALID_ADDR_WIDTH)-1:0];
    88                                               
    89              1                      14999     wire [VALID_ADDR_WIDTH-1:0] s_axil_awaddr_valid = s_axil_awaddr >> (ADDR_WIDTH - VALID_ADDR_WIDTH);
    90              1                      30001     wire [VALID_ADDR_WIDTH-1:0] s_axil_araddr_valid = s_axil_araddr >> (ADDR_WIDTH - VALID_ADDR_WIDTH);
    91                                               
    92                                               assign s_axil_awready = s_axil_awready_reg;
    93                                               assign s_axil_wready = s_axil_wready_reg;
    94                                               assign s_axil_bresp = 2'b00;
    95                                               assign s_axil_bvalid = s_axil_bvalid_reg;
    96                                               assign s_axil_arready = s_axil_arready_reg;
    97                                               assign s_axil_rdata = PIPELINE_OUTPUT ? s_axil_rdata_pipe_reg : s_axil_rdata_reg;
    98                                               assign s_axil_rresp = 2'b00;
    99                                               assign s_axil_rvalid = PIPELINE_OUTPUT ? s_axil_rvalid_pipe_reg : s_axil_rvalid_reg;
    100                                              
    101                                              integer i, j;
    102                                              
    103                                              initial begin
    104                                                  // two nested loops for smaller number of iterations per loop
    105                                                  // workaround for synthesizer complaints about large loop counts
    106             1                          1         for (i = 0; i < 2**VALID_ADDR_WIDTH; i = i + 2**(VALID_ADDR_WIDTH/2)) begin
    106             2                        128     
    107             1                        128             for (j = i; j < i + 2**(VALID_ADDR_WIDTH/2); j = j + 1) begin
    107             2                      16384     
    108             1                      16384                 mem[j] = 0;
    109                                                      end
    110                                                  end
    111                                              end
    112                                              
    113             1                     138291     always @* begin
    114             1                     138291         mem_wr_en = 1'b0;
    115                                              
    116             1                     138291         s_axil_awready_next = 1'b0;
    117             1                     138291         s_axil_wready_next = 1'b0;
    118             1                     138291         s_axil_bvalid_next = s_axil_bvalid_reg && !s_axil_bready;
    119                                              
    120                                                  if (s_axil_awvalid && s_axil_wvalid && (!s_axil_bvalid || s_axil_bready) && (!s_axil_awready && !s_axil_wready)) begin
    121             1                      13494             s_axil_awready_next = 1'b1;
    122             1                      13494             s_axil_wready_next = 1'b1;
    123             1                      13494             s_axil_bvalid_next = 1'b1;
    124                                              
    125             1                      13494             mem_wr_en = 1'b1;
    126                                                  end
    127                                              end
    128                                              
    129             1                      63314     always @(posedge clk) begin
    130             1                      63314         s_axil_awready_reg <= s_axil_awready_next;
    131             1                      63314         s_axil_wready_reg <= s_axil_wready_next;
    132             1                      63314         s_axil_bvalid_reg <= s_axil_bvalid_next;
    133                                              
    134             1                      63314         for (i = 0; i < WORD_WIDTH; i = i + 1) begin
    134             2                     253256     
    135                                                      if (mem_wr_en && s_axil_wstrb[i]) begin
    136             1                      39586                 mem[s_axil_awaddr_valid][WORD_SIZE*i +: WORD_SIZE] <= s_axil_wdata[WORD_SIZE*i +: WORD_SIZE];
    137                                                      end
    138                                                  end
    139                                              
    140                                                  if (rst) begin
    141             1                          1             s_axil_awready_reg <= 1'b0;
    142             1                          1             s_axil_wready_reg <= 1'b0;
    143             1                          1             s_axil_bvalid_reg <= 1'b0;
    144                                                  end
    145                                              end
    146                                              
    147             1                     165070     always @* begin
    148             1                     165070         mem_rd_en = 1'b0;
    149                                              
    150             1                     165070         s_axil_arready_next = 1'b0;
    151             1                     165070         s_axil_rvalid_next = s_axil_rvalid_reg && !(s_axil_rready || (PIPELINE_OUTPUT && !s_axil_rvalid_pipe_reg));
    152                                              
    153                                                  if (s_axil_arvalid && (!s_axil_rvalid || s_axil_rready || (PIPELINE_OUTPUT && !s_axil_rvalid_pipe_reg)) && (!s_axil_arready)) begin
    154             1                      26971             s_axil_arready_next = 1'b1;
    155             1                      26971             s_axil_rvalid_next = 1'b1;
    156                                              
    157             1                      26971             mem_rd_en = 1'b1;
    158                                                  end
    159                                              end
    160                                              
    161             1                     161467     always @(posedge clk) begin
    162             1                     161467         s_axil_arready_reg <= s_axil_arready_next;
    163             1                     161467         s_axil_rvalid_reg <= s_axil_rvalid_next;
    164                                              
    165                                                  if (mem_rd_en) begin
    166             1                      26970             s_axil_rdata_reg <= mem[s_axil_araddr_valid];
    167                                                  end
    168                                              
    169                                                  if (!s_axil_rvalid_pipe_reg || s_axil_rready) begin
    170             1                     136693             s_axil_rdata_pipe_reg <= s_axil_rdata_reg;
    171             1                     136693             s_axil_rvalid_pipe_reg <= s_axil_rvalid_reg;
    172                                                  end
    173                                              
    174                                                  if (rst) begin
    175             1                          1             s_axil_arready_reg <= 1'b0;
    176             1                          1             s_axil_rvalid_reg <= 1'b0;
    177             1                          1             s_axil_rvalid_pipe_reg <= 1'b0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        646       443       203    68.57%

================================Toggle Details================================

Toggle Coverage for instance /tb/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          i[31-15]           0           0        0.00 
                                             i[14]           1           0       50.00 
                                           i[13-3]           0           0        0.00 
                                              i[2]           0           1       50.00 
                                            i[1-0]           0           0        0.00 
                                           j[31-0]           0           0        0.00 
                                         mem_rd_en           1           1      100.00 
                                         mem_wr_en           1           1      100.00 
                                               rst           1           0       50.00 
                               s_axil_araddr[0-15]           1           1      100.00 
                         s_axil_araddr_valid[0-13]           1           1      100.00 
                                s_axil_arprot[0-1]           1           1      100.00 
                                  s_axil_arprot[2]           0           0        0.00 
                                    s_axil_arready           1           1      100.00 
                               s_axil_arready_next           1           1      100.00 
                                s_axil_arready_reg           1           1      100.00 
                                    s_axil_arvalid           1           1      100.00 
                               s_axil_awaddr[0-15]           1           1      100.00 
                         s_axil_awaddr_valid[0-13]           1           1      100.00 
                                s_axil_awprot[0-1]           1           1      100.00 
                                  s_axil_awprot[2]           0           0        0.00 
                                    s_axil_awready           1           1      100.00 
                               s_axil_awready_next           1           1      100.00 
                                s_axil_awready_reg           1           1      100.00 
                                    s_axil_awvalid           1           1      100.00 
                                     s_axil_bready           1           1      100.00 
                                 s_axil_bresp[0-1]           0           0        0.00 
                                     s_axil_bvalid           1           1      100.00 
                                s_axil_bvalid_next           1           1      100.00 
                                 s_axil_bvalid_reg           1           1      100.00 
                                s_axil_rdata[0-31]           1           1      100.00 
                           s_axil_rdata_next[31-0]           0           0        0.00 
                       s_axil_rdata_pipe_reg[31-0]           1           1      100.00 
                            s_axil_rdata_reg[31-0]           1           1      100.00 
                                     s_axil_rready           1           1      100.00 
                                 s_axil_rresp[0-1]           0           0        0.00 
                                     s_axil_rvalid           1           1      100.00 
                                s_axil_rvalid_next           1           1      100.00 
                            s_axil_rvalid_pipe_reg           1           1      100.00 
                                 s_axil_rvalid_reg           1           1      100.00 
                                s_axil_wdata[0-31]           1           1      100.00 
                                     s_axil_wready           1           1      100.00 
                                s_axil_wready_next           1           1      100.00 
                                 s_axil_wready_reg           1           1      100.00 
                                 s_axil_wstrb[0-3]           1           1      100.00 
                                     s_axil_wvalid           1           1      100.00 

Total Node Count     =        323 
Toggled Node Count   =        220 
Untoggled Node Count =        103 

Toggle Coverage      =      68.57% (443 of 646 bins)

=================================================================================
=== Instance: /tb
=== Design Unit: work.tb
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /tb --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../tb/Env/tb.sv
    6                                                module tb;
    7                                                
    8                                                  parameter CLK_PERIOD = 10ns;  
    9                                                  parameter DATA_WIDTH = 32;
    10                                                 parameter ADDR_WIDTH = 16;
    11                                                 parameter STRB_WIDTH = (DATA_WIDTH/8);
    12                                                 parameter PIPELINE_OUTPUT = 0;
    13                                               
    14                                                 bit clk;
    15                                               
    16                                                 // Clock generation
    17              1                     415796       always #(CLK_PERIOD/2) clk=~clk;
    17              2                     415795     
    18                                               
    19                                                 AXI4_if#(
    20                                                   .DATA_WIDTH(DATA_WIDTH),
    21                                                   .ADDR_WIDTH(ADDR_WIDTH),
    22                                                   .STRB_WIDTH(STRB_WIDTH),
    23                                                   .PIPELINE_OUTPUT(PIPELINE_OUTPUT)
    24                                                 ) AXI4_intf (clk);
    25                                               
    26                                               
    27                                                 axil_ram#(
    28                                                   .DATA_WIDTH(DATA_WIDTH),
    29                                                   .ADDR_WIDTH(ADDR_WIDTH),
    30                                                   .STRB_WIDTH(STRB_WIDTH),
    31                                                   .PIPELINE_OUTPUT(PIPELINE_OUTPUT)
    32                                                 ) DUT (
    33                                                   .clk(clk),
    34                                                   .rst(AXI4_intf.rst),
    35                                                   .s_axil_awaddr(AXI4_intf.s_axil_awaddr),
    36                                                   .s_axil_awprot(AXI4_intf.s_axil_awprot),
    37                                                   .s_axil_awvalid(AXI4_intf.s_axil_awvalid),
    38                                                   .s_axil_awready(AXI4_intf.s_axil_awready),
    39                                                   .s_axil_wdata(AXI4_intf.s_axil_wdata),
    40                                                   .s_axil_wstrb(AXI4_intf.s_axil_wstrb),
    41                                                   .s_axil_wvalid(AXI4_intf.s_axil_wvalid),
    42                                                   .s_axil_wready(AXI4_intf.s_axil_wready),
    43                                                   .s_axil_bresp(AXI4_intf.s_axil_bresp),
    44                                                   .s_axil_bvalid(AXI4_intf.s_axil_bvalid),
    45                                                   .s_axil_bready(AXI4_intf.s_axil_bready),
    46                                                   .s_axil_araddr(AXI4_intf.s_axil_araddr),
    47                                                   .s_axil_arprot(AXI4_intf.s_axil_arprot),
    48                                                   .s_axil_arvalid(AXI4_intf.s_axil_arvalid),
    49                                                   .s_axil_arready(AXI4_intf.s_axil_arready),
    50                                                   .s_axil_rdata(AXI4_intf.s_axil_rdata),
    51                                                   .s_axil_rresp(AXI4_intf.s_axil_rresp),
    52                                                   .s_axil_rvalid(AXI4_intf.s_axil_rvalid),
    53                                                   .s_axil_rready(AXI4_intf.s_axil_rready)
    54                                                   );
    55                                               
    56                                                   bind axil_ram AXI4_Assertions assertions_inst(.clk(clk),
    57                                                                                                 .rst(AXI4_intf.rst),
    58                                                                                                 .s_axil_awaddr(AXI4_intf.s_axil_awaddr),
    59                                                                                                 .s_axil_awprot(AXI4_intf.s_axil_awprot),
    60                                                                                                 .s_axil_awvalid(AXI4_intf.s_axil_awvalid),
    61                                                                                                 .s_axil_awready(AXI4_intf.s_axil_awready),
    62                                                                                                 .s_axil_wdata(AXI4_intf.s_axil_wdata),
    63                                                                                                 .s_axil_wstrb(AXI4_intf.s_axil_wstrb),
    64                                                                                                 .s_axil_wvalid(AXI4_intf.s_axil_wvalid),
    65                                                                                                 .s_axil_wready(AXI4_intf.s_axil_wready),
    66                                                                                                 .s_axil_bresp(AXI4_intf.s_axil_bresp),
    67                                                                                                 .s_axil_bvalid(AXI4_intf.s_axil_bvalid),
    68                                                                                                 .s_axil_bready(AXI4_intf.s_axil_bready),
    69                                                                                                 .s_axil_araddr(AXI4_intf.s_axil_araddr),
    70                                                                                                 .s_axil_arprot(AXI4_intf.s_axil_arprot),
    71                                                                                                 .s_axil_arvalid(AXI4_intf.s_axil_arvalid),
    72                                                                                                 .s_axil_arready(AXI4_intf.s_axil_arready),
    73                                                                                                 .s_axil_rdata(AXI4_intf.s_axil_rdata),
    74                                                                                                 .s_axil_rresp(AXI4_intf.s_axil_rresp),
    75                                                                                                 .s_axil_rvalid(AXI4_intf.s_axil_rvalid),
    76                                                                                                 .s_axil_rready(AXI4_intf.s_axil_rready));
    77                                               
    78                                                  initial begin
    79              1                          1         uvm_config_db#(virtual AXI4_if)::set(null,"*","vif",AXI4_intf);
    80              1                          1         run_test("");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /tb --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /AXI4_pkg
=== Design Unit: work.AXI4_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/AXI4_pkg/AXI4_seq/body/#ublk#214590327#29/immed__31
                     ../tb/Env/../Tests/AXI4_seq.sv(31)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                       567       101       466    17.81%

================================Branch Details================================

Branch Coverage for instance /AXI4_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../tb/Env/AXI4_seq_item.sv
------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              1                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              2                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              3                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
    50              4                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              5                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              6                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    52                                   ***0***     Count coming in to CASE
    52              2                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
    52              3                    ***0***     
    52              5                    ***0***     
    52              9                    ***0***     
    52             10                    ***0***     
    52             11                    ***0***     
    52             12                    ***0***     
    52             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              4                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              6                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              7                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              8                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52             14                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52             15                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    54                                   ***0***     Count coming in to CASE
    54              2                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
    54              3                    ***0***     
    54              5                    ***0***     
    54              9                    ***0***     
    54             10                    ***0***     
    54             11                    ***0***     
    54             12                    ***0***     
    54             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              4                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              6                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              7                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              8                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54             14                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54             15                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    55                                   ***0***     Count coming in to CASE
    55              2                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
    55              3                    ***0***     
    55              5                    ***0***     
    55              9                    ***0***     
    55             10                    ***0***     
    55             11                    ***0***     
    55             12                    ***0***     
    55             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              4                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              6                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              7                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              8                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55             14                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55             15                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    56                                   ***0***     Count coming in to CASE
    56              2                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
    56              3                    ***0***     
    56              5                    ***0***     
    56              9                    ***0***     
    56             10                    ***0***     
    56             11                    ***0***     
    56             12                    ***0***     
    56             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              4                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              6                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              7                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              8                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56             14                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56             15                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    58                                   ***0***     Count coming in to CASE
    58              2                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
    58              3                    ***0***     
    58              5                    ***0***     
    58              9                    ***0***     
    58             10                    ***0***     
    58             11                    ***0***     
    58             12                    ***0***     
    58             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              4                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              6                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              7                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              8                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58             14                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58             15                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    59                                   ***0***     Count coming in to CASE
    59              2                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
    59              3                    ***0***     
    59              5                    ***0***     
    59              9                    ***0***     
    59             10                    ***0***     
    59             11                    ***0***     
    59             12                    ***0***     
    59             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              4                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              6                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              7                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              8                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59             14                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59             15                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    60                                   ***0***     Count coming in to CASE
    60              2                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
    60              3                    ***0***     
    60              5                    ***0***     
    60              9                    ***0***     
    60             10                    ***0***     
    60             11                    ***0***     
    60             12                    ***0***     
    60             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              4                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              6                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              7                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              8                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60             14                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60             15                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    62                                   ***0***     Count coming in to CASE
    62              2                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
    62              3                    ***0***     
    62              5                    ***0***     
    62              9                    ***0***     
    62             10                    ***0***     
    62             11                    ***0***     
    62             12                    ***0***     
    62             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              4                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              6                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              7                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              8                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62             14                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62             15                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    63                                   ***0***     Count coming in to CASE
    63              2                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
    63              3                    ***0***     
    63              5                    ***0***     
    63              9                    ***0***     
    63             10                    ***0***     
    63             11                    ***0***     
    63             12                    ***0***     
    63             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              4                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              6                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              7                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              8                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63             14                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63             15                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    65                                   ***0***     Count coming in to CASE
    65              2                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
    65              3                    ***0***     
    65              5                    ***0***     
    65              9                    ***0***     
    65             10                    ***0***     
    65             11                    ***0***     
    65             12                    ***0***     
    65             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              4                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              6                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              7                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              8                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65             14                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65             15                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    66                                   ***0***     Count coming in to CASE
    66              2                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
    66              3                    ***0***     
    66              5                    ***0***     
    66              9                    ***0***     
    66             10                    ***0***     
    66             11                    ***0***     
    66             12                    ***0***     
    66             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              4                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              6                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              7                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              8                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66             14                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66             15                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    67                                   ***0***     Count coming in to CASE
    67              2                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
    67              3                    ***0***     
    67              5                    ***0***     
    67              9                    ***0***     
    67             10                    ***0***     
    67             11                    ***0***     
    67             12                    ***0***     
    67             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              4                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              6                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              7                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              8                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67             14                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67             15                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    69                                   ***0***     Count coming in to CASE
    69              2                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
    69              3                    ***0***     
    69              5                    ***0***     
    69              9                    ***0***     
    69             10                    ***0***     
    69             11                    ***0***     
    69             12                    ***0***     
    69             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69              4                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69              6                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69              7                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69              8                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69             14                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69             15                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    70                                   ***0***     Count coming in to CASE
    70              2                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
    70              3                    ***0***     
    70              5                    ***0***     
    70              9                    ***0***     
    70             10                    ***0***     
    70             11                    ***0***     
    70             12                    ***0***     
    70             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70              4                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70              6                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70              7                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70              8                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70             14                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70             15                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    71                                   ***0***     Count coming in to CASE
    71              2                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
    71              3                    ***0***     
    71              5                    ***0***     
    71              9                    ***0***     
    71             10                    ***0***     
    71             11                    ***0***     
    71             12                    ***0***     
    71             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71              4                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71              6                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71              7                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71              8                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71             14                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71             15                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/AXI4_cfg.sv
------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               1                    ***0***        `uvm_object_utils(AXI4_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               2                    ***0***        `uvm_object_utils(AXI4_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               3                    ***0***        `uvm_object_utils(AXI4_cfg)
    2               4                    ***0***        `uvm_object_utils(AXI4_cfg)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               5                    ***0***        `uvm_object_utils(AXI4_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               6                    ***0***        `uvm_object_utils(AXI4_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/../Tests/AXI4_seq.sv
------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               1                    ***0***         `uvm_object_utils(AXI4_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               2                    ***0***         `uvm_object_utils(AXI4_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               3                    ***0***         `uvm_object_utils(AXI4_seq)    
    2               4                    ***0***         `uvm_object_utils(AXI4_seq)    
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               5                    ***0***         `uvm_object_utils(AXI4_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               6                    ***0***         `uvm_object_utils(AXI4_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    14                                         2     Count coming in to IF
    14              1                    ***0***             `uvm_info("Seq", "Starting pre body ", UVM_MEDIUM)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    17                                         2     Count coming in to IF
    17              1                    ***0***             if(!uvm_config_db#(AXI4_cfg)::get(m_sequencer, "", "AXI4_cfg", cfg))
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    18                                   ***0***     Count coming in to IF
    18              1                    ***0***                 `uvm_fatal("NOCFG", "No configuration object found");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    21                                         2     Count coming in to IF
    21              1                    ***0***             `uvm_info("Seq", "Finished pre body ", UVM_MEDIUM)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                         2     Count coming in to IF
    26              1                    ***0***             `uvm_info("Seq", "Starting sequence", UVM_MEDIUM)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                         2     Count coming in to IF
    39              1                    ***0***             `uvm_info("Seq", "Finishing sequence", UVM_MEDIUM)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_scoreboard.sv
------------------------------------IF Branch------------------------------------
    23                                     13496     Count coming in to IF
    23              1                          2             if(item.rst) begin
    27              1                      13494             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    24                                         2     Count coming in to IF
    24              1                          2                 `uvm_info("AXI4_Scoreboard", "Resetting scoreboard", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    29                                     13494     Count coming in to IF
    29              1                      13494                 if(item.s_axil_bresp==2'b00) begin // checking if the write response is OK
    37              1                    ***0***                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    31                                     53976     Count coming in to IF
    31              1                      39586                         if(item.s_axil_wstrb[i]) begin // checking if the write strobe is valid
                                           14390     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    35                                     13494     Count coming in to IF
    35              1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Write transaction at address %0h with data %0h", item.s_axil_awaddr>>2, item.s_axil_wdata), UVM_HIGH)
                                           13494     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***                     `uvm_info("AXI4_Scoreboard", "Write transaction because response wasn't okay", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                     26970     Count coming in to IF
    46              1                      26970             if(item.s_axil_rresp==2'b00) begin // checking if the read response is OK
    73              1                    ***0***             else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    47                                     26970     Count coming in to IF
    47              1                      10492                 if(ram.exists(item.s_axil_araddr>>2)) begin // checking if the address exists in the ram
    59              1                      16478                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                     10492     Count coming in to IF
    48              1                      10492                     if(item.s_axil_rdata == ram[item.s_axil_araddr>>2]) begin // getting the data from the ram
    53              1                    ***0***                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    49                                     10492     Count coming in to IF
    49              1                    ***0***                         `uvm_info("AXI4_Scoreboard", "Read transaction is correct", UVM_MEDIUM)
                                           10492     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    50                                     10492     Count coming in to IF
    50              1                    ***0***                         `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h with data %0h", item.s_axil_araddr>>2, ram[item.s_axil_araddr>>2]), UVM_HIGH)
                                           10492     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              1                    ***0***                         `uvm_error("AXI4_Scoreboard", "Read transaction is incorrect")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              1                    ***0***                         `uvm_info("AXI4_Scoreboard", $sformatf("Expected: %0h, Actual: %0h at address: %0h", ram[item.s_axil_araddr>>2], item.s_axil_rdata, item.s_axil_araddr>>2), UVM_HIGH)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                     16478     Count coming in to IF
    60              1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h but address doesn't exist in ram", item.s_axil_araddr>>2), UVM_HIGH)
                                           16478     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                     16478     Count coming in to IF
    61              1                      16478                     if(item.s_axil_rdata == 32'b0) begin // getting the data from the ram
    66              1                    ***0***                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                     16478     Count coming in to IF
    62              1                    ***0***                         `uvm_info("AXI4_Scoreboard", "Read transaction is correct", UVM_MEDIUM)
                                           16478     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                     16478     Count coming in to IF
    63              1                    ***0***                         `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h with data 0", item.s_axil_araddr>>2), UVM_HIGH)
                                           16478     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              1                    ***0***                         `uvm_error("AXI4_Scoreboard", "Read transaction is incorrect")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    68                                   ***0***     Count coming in to IF
    68              1                    ***0***                         `uvm_info("AXI4_Scoreboard", $sformatf("Expected: 0, Actual: %0h", item.s_axil_rdata), UVM_HIGH)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              1                    ***0***                 `uvm_info("AXI4_Scoreboard", "Read transaction because response wasn't okay", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    82                                         1     Count coming in to IF
    82              1                          1             `uvm_info("report_phase","*************AXI4_Scoreboard**************************",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    83                                         1     Count coming in to IF
    83              1                          1             `uvm_info("report_phase", $sformatf("total number of transactions: %0d",read_trans+write_trans),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    84                                         1     Count coming in to IF
    84              1                          1             `uvm_info("report_phase", $sformatf("total number of read transactions: %0d",read_trans),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    85                                         1     Count coming in to IF
    85              1                          1             `uvm_info("report_phase", $sformatf("total number of write transactions: %0d",write_trans),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    87                                         1     Count coming in to IF
    87              1                          1             `uvm_info("report_phase", $sformatf("total succesful transactions: %0d",correct),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    88                                         1     Count coming in to IF
    88              1                          1             `uvm_info("report_phase", $sformatf("total failled transactions: %0d",incorrect),UVM_LOW) 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    89                                         1     Count coming in to IF
    89              1                          1             `uvm_info("report_phase","******************************************************",UVM_LOW) 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_write_driver.sv
------------------------------------IF Branch------------------------------------
    16                                         1     Count coming in to IF
    16              1                    ***0***             `uvm_info("AXI4 Write Driver", "Building driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    17                                         1     Count coming in to IF
    17              1                    ***0***             if(!(uvm_config_db#(virtual AXI4_if)::get(null, "", "vif", vif)))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    18                                   ***0***     Count coming in to IF
    18              1                    ***0***                 `uvm_fatal("NOVIF", "No virtual interface found");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    19                                         1     Count coming in to IF
    19              1                    ***0***             `uvm_info("AXI4 Write Driver", "Finished building driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***             `uvm_info("AXI4 Write Driver", "Running driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    32                                         1     Count coming in to IF
    32              1                    ***0***             `uvm_info("Driver", "Resetting driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              1                    ***0***             `uvm_info("Driver", "Finished resetting driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    59                                    207896     Count coming in to IF
    59              1                      13494                 if(vif.s_axil_bvalid && vif.s_axil_bready) begin
                                          194402     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    73                                     25576     Count coming in to IF
    73              1                      14999             if(!write_address_done) begin
                                           10577     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                     14998     Count coming in to IF
    80              1                    ***0***                 `uvm_info("AXI4 Write Driver", "Writing address ", UVM_MEDIUM)
                                           14998     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    83                                     14998     Count coming in to IF
    83              1                      13494                 if(address_item.valid_write_address) begin
                                            1504     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    91                                     13494     Count coming in to IF
    91              1                    ***0***                     `uvm_info("AXI4 Write Driver", "Finished writing address", UVM_MEDIUM)
                                           13494     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    102                                    25553     Count coming in to IF
    102             1                      15002             if(!write_data_done) begin
                                           10551     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    109                                    15002     Count coming in to IF
    109             1                    ***0***                 `uvm_info("AXI4 Write Driver", "Writing data", UVM_MEDIUM)
                                           15002     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    112                                    15002     Count coming in to IF
    112             1                      13495                 if(data_item.valid_write_data) begin
                                            1507     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    119                                    13494     Count coming in to IF
    119             1                    ***0***                     `uvm_info("AXI4 Write Driver", "Finished writing data", UVM_MEDIUM)
                                           13494     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    128                                        1     Count coming in to IF
    128             1                          1             `uvm_info("report_phase","*************AXI4_Write_Driver**************************",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    129                                        1     Count coming in to IF
    129             1                          1             `uvm_info("report_phase", $sformatf("total number of Address count : %0d", address_written),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    130                                        1     Count coming in to IF
    130             1                          1             `uvm_info("report_phase","******************************************************",UVM_LOW) 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_read_driver.sv
------------------------------------IF Branch------------------------------------
    17                                         1     Count coming in to IF
    17              1                    ***0***             `uvm_info("AXI4 Read Driver", "Building driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    18                                         1     Count coming in to IF
    18              1                    ***0***             if(!(uvm_config_db#(virtual AXI4_if)::get(null, "", "vif", vif)))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    19                                   ***0***     Count coming in to IF
    19              1                    ***0***                 `uvm_fatal("NOVIF", "No virtual interface found");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    20                                         1     Count coming in to IF
    20              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished building driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***             `uvm_info("AXI4 Read Driver", "Running driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    35                                    207896     Count coming in to IF
    35              1                      54346                         if(vif.s_axil_rvalid ) begin
                                          153550     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    36                                     54346     Count coming in to IF
    36              1                      26970                             if(vif.s_axil_rready) begin
                                           27376     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                         1     Count coming in to IF
    48              1                    ***0***             `uvm_info("AXI4 Read Driver", "Resetting driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    56                                         1     Count coming in to IF
    56              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished resetting driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    65                                    207896     Count coming in to IF
    65              1                      30000             if(!read_address_done) begin
                                          177896     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                     30000     Count coming in to IF
    69              1                    ***0***                 `uvm_info("AXI4 Read Driver", $sformatf("Read item: %s", read_item.convert2string()), UVM_MEDIUM)
                                           30000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    87                                     30000     Count coming in to IF
    87              1                    ***0***         `uvm_info("AXI4 Read Driver", "Reading address", UVM_MEDIUM)
                                           30000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    90                                     30000     Count coming in to IF
    90              1                      26971         if(read_item.valid_read_address) begin
                                            3029     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    97                                     26970     Count coming in to IF
    97              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished reading address", UVM_MEDIUM)
                                           26970     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_write_monitor.sv
------------------------------------IF Branch------------------------------------
    16                                         1     Count coming in to IF
    16              1                    ***0***         if (!uvm_config_db#(virtual AXI4_if)::get(this, "", "vif", vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    17                                   ***0***     Count coming in to IF
    17              1                    ***0***           `uvm_fatal("NOVIF", "Virtual interface not set for AXI4_monitor");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    35                                    207899     Count coming in to IF
    35              1                          2           if (vif.rst) begin
    38              1                     207897           else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                    207897     Count coming in to IF
    39              1                      13494             if(vif.s_axil_awvalid && vif.s_axil_awready)
                                          194403     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                    207899     Count coming in to IF
    53              1                          2           if (vif.rst) begin
    56              1                     207897           else  // Check if reset is not asserted
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                    207897     Count coming in to IF
    58              1                      13494             if(vif.s_axil_wvalid && vif.s_axil_wready )
                                          194403     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                    207899     Count coming in to IF
    72              1                          2           if (vif.rst) begin
    77              1                     207897           else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    78                                    207897     Count coming in to IF
    78              1                      13494             if(vif.s_axil_bvalid && vif.s_axil_bready)
                                          194403     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    81                                     13494     Count coming in to IF
    81              1                      13494                 if(addr_queue.size() > 0 && data_queue.size() > 0)
    94              1                    ***0***                 else
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    96                                   ***0***     Count coming in to IF
    96              1                    ***0***                   `uvm_error("AXI4_write_monitor", "Write response received without corresponding address and data");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/AXI4_read_monitor.sv
------------------------------------IF Branch------------------------------------
    15                                         1     Count coming in to IF
    15              1                    ***0***         if (!(uvm_config_db#(virtual AXI4_if)::get(this, "", "vif", vif)))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    16                                   ***0***     Count coming in to IF
    16              1                    ***0***           `uvm_fatal("NOVIF", "Virtual interface not set for AXI4_monitor");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    23                                    207899     Count coming in to IF
    23              1                          2           if (vif.rst) begin
    27              1                     207897           else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                    207897     Count coming in to IF
    39              1                     207897           if(vif.rst == 1'b0) begin
    48              1                    ***0***           else addr_queue.delete();
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    40                                    207897     Count coming in to IF
    40              1                      26970             if(vif.s_axil_arvalid && vif.s_axil_arready)
                                          180927     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    55                                    207897     Count coming in to IF
    55              1                     207897           if(vif.rst == 1'b0) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    56                                    207897     Count coming in to IF
    56              1                      26970             if(vif.s_axil_rvalid && vif.s_axil_rready)
                                          180927     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                     26970     Count coming in to IF
    57              1                      26970                 if(addr_queue.size() > 0) begin
    66              1                    ***0***                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              1                    ***0***                     `uvm_error("AXI4_read_monitor", "read response received without corresponding address ");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/AXI4_read_agent.sv
------------------------------------IF Branch------------------------------------
    22                                         1     Count coming in to IF
    22              1                    ***0***         if (!uvm_config_db#(AXI4_cfg)::get(this, "", "AXI4_cfg", cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***           `uvm_fatal("CONFIG", "Agent configuration not set!")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                          1         if (cfg.is_active) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                          1         if (cfg.is_active) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_write_agent.sv
------------------------------------IF Branch------------------------------------
    22                                         1     Count coming in to IF
    22              1                    ***0***         if (!uvm_config_db#(AXI4_cfg)::get(this, "", "AXI4_cfg", cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***           `uvm_fatal("CONFIG", "Agent configuration not set!")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                          1         if (cfg.is_active) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                          1         if (cfg.is_active) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/../Tests/Virtual_seq.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***       `uvm_object_utils(virtual_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***       `uvm_object_utils(virtual_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***       `uvm_object_utils(virtual_seq)
    7               4                    ***0***       `uvm_object_utils(virtual_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***       `uvm_object_utils(virtual_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***       `uvm_object_utils(virtual_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               1                    ***0***       `uvm_declare_p_sequencer(AXI4_virtual_sequencer)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               2                    ***0***       `uvm_declare_p_sequencer(AXI4_virtual_sequencer)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    15                                         1     Count coming in to IF
    15              1                          1         `uvm_info(get_type_name(), "virtual_seq: Inside Body", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/../Tests/Write_Read_Seq.sv
------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               1                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               2                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               3                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
    3               4                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               5                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               6                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/../Tests/Concurrent_Seq.sv
------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               1                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               2                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               3                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
    3               4                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               5                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               6                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      91        12        79    13.18%

================================Condition Details================================

Condition Coverage for instance /AXI4_pkg --

  File ../tb/Env/AXI4_seq_item.sv
----------------Focused Condition View-------------------
Line       50 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       50 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    3  (this.rst !== local_data__.rst)
Condition totals: 0 of 1 input term covered = 0.00%

                       Input Term   Covered  Reason for no coverage   Hint
                      -----------  --------  -----------------------  --------------
  (this.rst !== local_data__.rst)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                         Non-masking condition(s)      
 ---------  ---------  --------------------               -------------------------     
  Row   1:    ***0***  (this.rst !== local_data__.rst)_0  -                             
  Row   2:    ***0***  (this.rst !== local_data__.rst)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       54 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       54 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       54 Item    3  (this.valid_write_address !== local_data__.valid_write_address)
Condition totals: 0 of 1 input term covered = 0.00%

                                                       Input Term   Covered  Reason for no coverage   Hint
                                                      -----------  --------  -----------------------  --------------
  (this.valid_write_address !== local_data__.valid_write_address)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                         Non-masking condition(s)      
 ---------  ---------  --------------------                                               -------------------------     
  Row   1:    ***0***  (this.valid_write_address !== local_data__.valid_write_address)_0  -                             
  Row   2:    ***0***  (this.valid_write_address !== local_data__.valid_write_address)_1  -                             

----------------Focused Condition View-------------------
Line       54 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    3  (this.s_axil_awaddr !== local_data__.s_axil_awaddr)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_awaddr !== local_data__.s_axil_awaddr)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_awaddr !== local_data__.s_axil_awaddr)_0  -                             
  Row   2:    ***0***  (this.s_axil_awaddr !== local_data__.s_axil_awaddr)_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       56 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       56 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       56 Item    3  (this.s_axil_awprot !== local_data__.s_axil_awprot)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_awprot !== local_data__.s_axil_awprot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_awprot !== local_data__.s_axil_awprot)_0  -                             
  Row   2:    ***0***  (this.s_axil_awprot !== local_data__.s_axil_awprot)_1  -                             

----------------Focused Condition View-------------------
Line       56 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    3  (this.valid_write_data !== local_data__.valid_write_data)
Condition totals: 0 of 1 input term covered = 0.00%

                                                 Input Term   Covered  Reason for no coverage   Hint
                                                -----------  --------  -----------------------  --------------
  (this.valid_write_data !== local_data__.valid_write_data)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                   Non-masking condition(s)      
 ---------  ---------  --------------------                                         -------------------------     
  Row   1:    ***0***  (this.valid_write_data !== local_data__.valid_write_data)_0  -                             
  Row   2:    ***0***  (this.valid_write_data !== local_data__.valid_write_data)_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       59 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       59 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       59 Item    3  (this.s_axil_wdata !== local_data__.s_axil_wdata)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_wdata !== local_data__.s_axil_wdata)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_wdata !== local_data__.s_axil_wdata)_0  -                             
  Row   2:    ***0***  (this.s_axil_wdata !== local_data__.s_axil_wdata)_1  -                             

----------------Focused Condition View-------------------
Line       59 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       60 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       60 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       60 Item    3  (this.s_axil_wstrb !== local_data__.s_axil_wstrb)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_wstrb !== local_data__.s_axil_wstrb)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_wstrb !== local_data__.s_axil_wstrb)_0  -                             
  Row   2:    ***0***  (this.s_axil_wstrb !== local_data__.s_axil_wstrb)_1  -                             

----------------Focused Condition View-------------------
Line       60 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    3  (this.s_axil_bresp !== local_data__.s_axil_bresp)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_bresp !== local_data__.s_axil_bresp)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_bresp !== local_data__.s_axil_bresp)_0  -                             
  Row   2:    ***0***  (this.s_axil_bresp !== local_data__.s_axil_bresp)_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    3  (this.s_axil_bready !== local_data__.s_axil_bready)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_bready !== local_data__.s_axil_bready)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_bready !== local_data__.s_axil_bready)_0  -                             
  Row   2:    ***0***  (this.s_axil_bready !== local_data__.s_axil_bready)_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       65 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       65 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       65 Item    3  (this.valid_read_address !== local_data__.valid_read_address)
Condition totals: 0 of 1 input term covered = 0.00%

                                                     Input Term   Covered  Reason for no coverage   Hint
                                                    -----------  --------  -----------------------  --------------
  (this.valid_read_address !== local_data__.valid_read_address)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                       Non-masking condition(s)      
 ---------  ---------  --------------------                                             -------------------------     
  Row   1:    ***0***  (this.valid_read_address !== local_data__.valid_read_address)_0  -                             
  Row   2:    ***0***  (this.valid_read_address !== local_data__.valid_read_address)_1  -                             

----------------Focused Condition View-------------------
Line       65 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    3  (this.s_axil_araddr !== local_data__.s_axil_araddr)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_araddr !== local_data__.s_axil_araddr)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_araddr !== local_data__.s_axil_araddr)_0  -                             
  Row   2:    ***0***  (this.s_axil_araddr !== local_data__.s_axil_araddr)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       67 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       67 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       67 Item    3  (this.s_axil_arprot !== local_data__.s_axil_arprot)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_arprot !== local_data__.s_axil_arprot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_arprot !== local_data__.s_axil_arprot)_0  -                             
  Row   2:    ***0***  (this.s_axil_arprot !== local_data__.s_axil_arprot)_1  -                             

----------------Focused Condition View-------------------
Line       67 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       69 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       69 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       69 Item    3  (this.s_axil_rready !== local_data__.s_axil_rready)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_rready !== local_data__.s_axil_rready)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_rready !== local_data__.s_axil_rready)_0  -                             
  Row   2:    ***0***  (this.s_axil_rready !== local_data__.s_axil_rready)_1  -                             

----------------Focused Condition View-------------------
Line       69 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       70 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       70 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       70 Item    3  (this.s_axil_rdata !== local_data__.s_axil_rdata)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_rdata !== local_data__.s_axil_rdata)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_rdata !== local_data__.s_axil_rdata)_0  -                             
  Row   2:    ***0***  (this.s_axil_rdata !== local_data__.s_axil_rdata)_1  -                             

----------------Focused Condition View-------------------
Line       70 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       71 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       71 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       71 Item    3  (this.s_axil_rresp !== local_data__.s_axil_rresp)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_rresp !== local_data__.s_axil_rresp)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_rresp !== local_data__.s_axil_rresp)_0  -                             
  Row   2:    ***0***  (this.s_axil_rresp !== local_data__.s_axil_rresp)_1  -                             

----------------Focused Condition View-------------------
Line       71 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             


----------------Focused Condition View-------------------
Line       2 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       2 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       2 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       2 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       29 Item    1  (item.s_axil_bresp == 0)
Condition totals: 0 of 1 input term covered = 0.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (item.s_axil_bresp == 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:    ***0***  (item.s_axil_bresp == 0)_0  -                             
  Row   2:          1  (item.s_axil_bresp == 0)_1  -                             

----------------Focused Condition View-------------------
Line       46 Item    1  (item.s_axil_rresp == 0)
Condition totals: 0 of 1 input term covered = 0.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (item.s_axil_rresp == 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:    ***0***  (item.s_axil_rresp == 0)_0  -                             
  Row   2:          1  (item.s_axil_rresp == 0)_1  -                             

----------------Focused Condition View-------------------
Line       48 Item    1  (item.s_axil_rdata == this.ram[item.s_axil_araddr>>2])
Condition totals: 0 of 1 input term covered = 0.00%

                                              Input Term   Covered  Reason for no coverage   Hint
                                             -----------  --------  -----------------------  --------------
  (item.s_axil_rdata == this.ram[item.s_axil_araddr>>2])         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                      -------------------------     
  Row   1:    ***0***  (item.s_axil_rdata == this.ram[item.s_axil_araddr>>2])_0  -                             
  Row   2:          1  (item.s_axil_rdata == this.ram[item.s_axil_araddr>>2])_1  -                             

----------------Focused Condition View-------------------
Line       61 Item    1  (item.s_axil_rdata == 0)
Condition totals: 0 of 1 input term covered = 0.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (item.s_axil_rdata == 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:    ***0***  (item.s_axil_rdata == 0)_0  -                             
  Row   2:          1  (item.s_axil_rdata == 0)_1  -                             




----------------Focused Condition View-------------------
Line       59 Item    1  (this.vif.s_axil_bvalid && this.vif.s_axil_bready)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.vif.s_axil_bvalid         Y
  this.vif.s_axil_bready         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.vif.s_axil_bvalid_0  -                             
  Row   2:          1  this.vif.s_axil_bvalid_1  this.vif.s_axil_bready        
  Row   3:          1  this.vif.s_axil_bready_0  this.vif.s_axil_bvalid        
  Row   4:          1  this.vif.s_axil_bready_1  this.vif.s_axil_bvalid        



----------------Focused Condition View-------------------
Line       39 Item    1  (this.vif.s_axil_awvalid && this.vif.s_axil_awready)
Condition totals: 2 of 2 input terms covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  this.vif.s_axil_awvalid         Y
  this.vif.s_axil_awready         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  this.vif.s_axil_awvalid_0  -                             
  Row   2:          1  this.vif.s_axil_awvalid_1  this.vif.s_axil_awready       
  Row   3:          1  this.vif.s_axil_awready_0  this.vif.s_axil_awvalid       
  Row   4:          1  this.vif.s_axil_awready_1  this.vif.s_axil_awvalid       

----------------Focused Condition View-------------------
Line       58 Item    1  (this.vif.s_axil_wvalid && this.vif.s_axil_wready)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.vif.s_axil_wvalid         Y
  this.vif.s_axil_wready         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.vif.s_axil_wvalid_0  -                             
  Row   2:          1  this.vif.s_axil_wvalid_1  this.vif.s_axil_wready        
  Row   3:          1  this.vif.s_axil_wready_0  this.vif.s_axil_wvalid        
  Row   4:          1  this.vif.s_axil_wready_1  this.vif.s_axil_wvalid        

----------------Focused Condition View-------------------
Line       78 Item    1  (this.vif.s_axil_bvalid && this.vif.s_axil_bready)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.vif.s_axil_bvalid         Y
  this.vif.s_axil_bready         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.vif.s_axil_bvalid_0  -                             
  Row   2:          1  this.vif.s_axil_bvalid_1  this.vif.s_axil_bready        
  Row   3:          1  this.vif.s_axil_bready_0  this.vif.s_axil_bvalid        
  Row   4:          1  this.vif.s_axil_bready_1  this.vif.s_axil_bvalid        

----------------Focused Condition View-------------------
Line       81 Item    1  ((size(this.addr_queue) > 0) && (size(this.data_queue) > 0))
Condition totals: 0 of 2 input terms covered = 0.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (size(this.addr_queue) > 0)         N  '_0' not hit             Hit '_0'
  (size(this.data_queue) > 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:    ***0***  (size(this.addr_queue) > 0)_0  -                             
  Row   2:          1  (size(this.addr_queue) > 0)_1  (size(this.data_queue) > 0)   
  Row   3:    ***0***  (size(this.data_queue) > 0)_0  (size(this.addr_queue) > 0)   
  Row   4:          1  (size(this.data_queue) > 0)_1  (size(this.addr_queue) > 0)   


----------------Focused Condition View-------------------
Line       40 Item    1  (this.vif.s_axil_arvalid && this.vif.s_axil_arready)
Condition totals: 2 of 2 input terms covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  this.vif.s_axil_arvalid         Y
  this.vif.s_axil_arready         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  this.vif.s_axil_arvalid_0  -                             
  Row   2:          1  this.vif.s_axil_arvalid_1  this.vif.s_axil_arready       
  Row   3:          1  this.vif.s_axil_arready_0  this.vif.s_axil_arvalid       
  Row   4:          1  this.vif.s_axil_arready_1  this.vif.s_axil_arvalid       

----------------Focused Condition View-------------------
Line       56 Item    1  (this.vif.s_axil_rvalid && this.vif.s_axil_rready)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.vif.s_axil_rvalid         Y
  this.vif.s_axil_rready         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.vif.s_axil_rvalid_0  -                             
  Row   2:          1  this.vif.s_axil_rvalid_1  this.vif.s_axil_rready        
  Row   3:          1  this.vif.s_axil_rready_0  this.vif.s_axil_rvalid        
  Row   4:          1  this.vif.s_axil_rready_1  this.vif.s_axil_rvalid        

----------------Focused Condition View-------------------
Line       57 Item    1  (size(this.addr_queue) > 0)
Condition totals: 0 of 1 input term covered = 0.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (size(this.addr_queue) > 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:    ***0***  (size(this.addr_queue) > 0)_0  -                             
  Row   2:          1  (size(this.addr_queue) > 0)_1  -                             







----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       3 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       3 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       3 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       3 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             







Covergroup Coverage:
    Covergroups                      2        na        na   100.00%
        Coverpoints/Crosses          5        na        na        na
            Covergroup Bins        149       149         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /AXI4_pkg/AXI4_read_cov/AXI4_read_CovGrp        100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rdata_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin MAXPOS                                        334          1          -    Covered              
        bin ZERO                                        17039          1          -    Covered              
        bin special1_b                                    277          1          -    Covered              
        bin special2_b                                    305          1          -    Covered              
        bin rest[0]                                      3629          1          -    Covered              
        bin rest[1]                                      1989          1          -    Covered              
        bin rest[2]                                      2150          1          -    Covered              
        bin rest[3]                                      1829          1          -    Covered              
    Coverpoint raddr_cp                               100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:1023]                                  427          1          -    Covered              
        bin auto[1024:2047]                               411          1          -    Covered              
        bin auto[2048:3071]                               436          1          -    Covered              
        bin auto[3072:4095]                               381          1          -    Covered              
        bin auto[4096:5119]                               428          1          -    Covered              
        bin auto[5120:6143]                               393          1          -    Covered              
        bin auto[6144:7167]                               422          1          -    Covered              
        bin auto[7168:8191]                               409          1          -    Covered              
        bin auto[8192:9215]                               422          1          -    Covered              
        bin auto[9216:10239]                              409          1          -    Covered              
        bin auto[10240:11263]                             411          1          -    Covered              
        bin auto[11264:12287]                             453          1          -    Covered              
        bin auto[12288:13311]                             464          1          -    Covered              
        bin auto[13312:14335]                             440          1          -    Covered              
        bin auto[14336:15359]                             452          1          -    Covered              
        bin auto[15360:16383]                             412          1          -    Covered              
        bin auto[16384:17407]                             392          1          -    Covered              
        bin auto[17408:18431]                             391          1          -    Covered              
        bin auto[18432:19455]                             423          1          -    Covered              
        bin auto[19456:20479]                             411          1          -    Covered              
        bin auto[20480:21503]                             441          1          -    Covered              
        bin auto[21504:22527]                             416          1          -    Covered              
        bin auto[22528:23551]                             424          1          -    Covered              
        bin auto[23552:24575]                             382          1          -    Covered              
        bin auto[24576:25599]                             431          1          -    Covered              
        bin auto[25600:26623]                             427          1          -    Covered              
        bin auto[26624:27647]                             423          1          -    Covered              
        bin auto[27648:28671]                             367          1          -    Covered              
        bin auto[28672:29695]                             427          1          -    Covered              
        bin auto[29696:30719]                             405          1          -    Covered              
        bin auto[30720:31743]                             411          1          -    Covered              
        bin auto[31744:32767]                             422          1          -    Covered              
        bin auto[32768:33791]                             452          1          -    Covered              
        bin auto[33792:34815]                             409          1          -    Covered              
        bin auto[34816:35839]                             406          1          -    Covered              
        bin auto[35840:36863]                             425          1          -    Covered              
        bin auto[36864:37887]                             444          1          -    Covered              
        bin auto[37888:38911]                             430          1          -    Covered              
        bin auto[38912:39935]                             432          1          -    Covered              
        bin auto[39936:40959]                             424          1          -    Covered              
        bin auto[40960:41983]                             434          1          -    Covered              
        bin auto[41984:43007]                             419          1          -    Covered              
        bin auto[43008:44031]                             473          1          -    Covered              
        bin auto[44032:45055]                             402          1          -    Covered              
        bin auto[45056:46079]                             434          1          -    Covered              
        bin auto[46080:47103]                             412          1          -    Covered              
        bin auto[47104:48127]                             435          1          -    Covered              
        bin auto[48128:49151]                             426          1          -    Covered              
        bin auto[49152:50175]                             399          1          -    Covered              
        bin auto[50176:51199]                             409          1          -    Covered              
        bin auto[51200:52223]                             455          1          -    Covered              
        bin auto[52224:53247]                             413          1          -    Covered              
        bin auto[53248:54271]                             451          1          -    Covered              
        bin auto[54272:55295]                             429          1          -    Covered              
        bin auto[55296:56319]                             419          1          -    Covered              
        bin auto[56320:57343]                             452          1          -    Covered              
        bin auto[57344:58367]                             450          1          -    Covered              
        bin auto[58368:59391]                             435          1          -    Covered              
        bin auto[59392:60415]                             402          1          -    Covered              
        bin auto[60416:61439]                             417          1          -    Covered              
        bin auto[61440:62463]                             396          1          -    Covered              
        bin auto[62464:63487]                             414          1          -    Covered              
        bin auto[63488:64511]                             405          1          -    Covered              
        bin auto[64512:65535]                             404          1          -    Covered              
 TYPE /AXI4_pkg/AXI4_write_cov/AXI4_write_CovGrp      100.00%        100          -    Covered              
    covered/total bins:                                    77         77          -                      
    missing/total bins:                                     0         77          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wdata_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin MAXPOS                                        798          1          -    Covered              
        bin ZERO                                          775          1          -    Covered              
        bin special1_b                                    748          1          -    Covered              
        bin special2_b                                    768          1          -    Covered              
        bin rest[0]                                      2586          1          -    Covered              
        bin rest[1]                                      3353          1          -    Covered              
        bin rest[2]                                      3355          1          -    Covered              
        bin rest[3]                                      2627          1          -    Covered              
    Coverpoint wstrb_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        bin ALL_ONES                                     6787          1          -    Covered              
        bin ALL_ZEROS                                     458          1          -    Covered              
        bin one_zero                                     1772          1          -    Covered              
        bin two_zeros                                    2645          1          -    Covered              
        bin three_zeros                                  1832          1          -    Covered              
    Coverpoint waddr_cp                               100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:1023]                                  218          1          -    Covered              
        bin auto[1024:2047]                               190          1          -    Covered              
        bin auto[2048:3071]                               209          1          -    Covered              
        bin auto[3072:4095]                               199          1          -    Covered              
        bin auto[4096:5119]                               228          1          -    Covered              
        bin auto[5120:6143]                               209          1          -    Covered              
        bin auto[6144:7167]                               203          1          -    Covered              
        bin auto[7168:8191]                               205          1          -    Covered              
        bin auto[8192:9215]                               198          1          -    Covered              
        bin auto[9216:10239]                              242          1          -    Covered              
        bin auto[10240:11263]                             221          1          -    Covered              
        bin auto[11264:12287]                             211          1          -    Covered              
        bin auto[12288:13311]                             203          1          -    Covered              
        bin auto[13312:14335]                             216          1          -    Covered              
        bin auto[14336:15359]                             204          1          -    Covered              
        bin auto[15360:16383]                             217          1          -    Covered              
        bin auto[16384:17407]                             203          1          -    Covered              
        bin auto[17408:18431]                             216          1          -    Covered              
        bin auto[18432:19455]                             239          1          -    Covered              
        bin auto[19456:20479]                             191          1          -    Covered              
        bin auto[20480:21503]                             209          1          -    Covered              
        bin auto[21504:22527]                             199          1          -    Covered              
        bin auto[22528:23551]                             217          1          -    Covered              
        bin auto[23552:24575]                             215          1          -    Covered              
        bin auto[24576:25599]                             209          1          -    Covered              
        bin auto[25600:26623]                             214          1          -    Covered              
        bin auto[26624:27647]                             230          1          -    Covered              
        bin auto[27648:28671]                             205          1          -    Covered              
        bin auto[28672:29695]                             211          1          -    Covered              
        bin auto[29696:30719]                             212          1          -    Covered              
        bin auto[30720:31743]                             232          1          -    Covered              
        bin auto[31744:32767]                             190          1          -    Covered              
        bin auto[32768:33791]                             205          1          -    Covered              
        bin auto[33792:34815]                             214          1          -    Covered              
        bin auto[34816:35839]                             217          1          -    Covered              
        bin auto[35840:36863]                             206          1          -    Covered              
        bin auto[36864:37887]                             193          1          -    Covered              
        bin auto[37888:38911]                             198          1          -    Covered              
        bin auto[38912:39935]                             229          1          -    Covered              
        bin auto[39936:40959]                             224          1          -    Covered              
        bin auto[40960:41983]                             215          1          -    Covered              
        bin auto[41984:43007]                             194          1          -    Covered              
        bin auto[43008:44031]                             188          1          -    Covered              
        bin auto[44032:45055]                             206          1          -    Covered              
        bin auto[45056:46079]                             221          1          -    Covered              
        bin auto[46080:47103]                             205          1          -    Covered              
        bin auto[47104:48127]                             186          1          -    Covered              
        bin auto[48128:49151]                             217          1          -    Covered              
        bin auto[49152:50175]                             203          1          -    Covered              
        bin auto[50176:51199]                             196          1          -    Covered              
        bin auto[51200:52223]                             230          1          -    Covered              
        bin auto[52224:53247]                             244          1          -    Covered              
        bin auto[53248:54271]                             190          1          -    Covered              
        bin auto[54272:55295]                             213          1          -    Covered              
        bin auto[55296:56319]                             221          1          -    Covered              
        bin auto[56320:57343]                             229          1          -    Covered              
        bin auto[57344:58367]                             201          1          -    Covered              
        bin auto[58368:59391]                             215          1          -    Covered              
        bin auto[59392:60415]                             223          1          -    Covered              
        bin auto[60416:61439]                             210          1          -    Covered              
        bin auto[61440:62463]                             195          1          -    Covered              
        bin auto[62464:63487]                             226          1          -    Covered              
        bin auto[63488:64511]                             207          1          -    Covered              
        bin auto[64512:65535]                             208          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                     664       268       396    40.36%

================================Statement Details================================

Statement Coverage for instance /AXI4_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../tb/Env/AXI4_seq_item.sv
    1                                                class AXI4_seq_item extends uvm_sequence_item;
    2                                                 
    3                                                 //---------------------------------------
    4                                                 //data and control fields
    5                                                 //---------------------------------------
    6                                                    // Width of data bus in bits
    7                                                    parameter DATA_WIDTH = 32;
    8                                                    // Width of address bus in bits
    9                                                    parameter ADDR_WIDTH = 16;
    10                                                   // Width of strb bus in bits
    11                                                   parameter STRB_WIDTH = (DATA_WIDTH/8);
    12                                               
    13                                                   rand logic                   rst;
    14                                                   rand bit                     valid_write_address; // Indicates if the address is valid
    15                                                   rand logic [ADDR_WIDTH-1:0]  s_axil_awaddr;
    16                                                   rand logic [2:0]             s_axil_awprot;
    17                                               
    18                                                   rand bit                     valid_write_data; // Indicates if the data is valid
    19                                                   rand logic [DATA_WIDTH-1:0]  s_axil_wdata;
    20                                                   rand logic [STRB_WIDTH-1:0]  s_axil_wstrb;
    21                                               
    22                                                   logic [1:0]             s_axil_bresp;
    23                                                   rand logic                   s_axil_bready;
    24                                               
    25                                                   rand bit                     valid_read_address; // Indicates if the address is valid
    26                                                   rand logic [ADDR_WIDTH-1:0]  s_axil_araddr;
    27                                                   rand logic [2:0]             s_axil_arprot;
    28                                                  
    29                                                   rand bit                     s_axil_rready; // Indicates if the read response is ready
    30                                                   logic [DATA_WIDTH-1:0]  s_axil_rdata;
    31                                                   logic [1:0]             s_axil_rresp;
    32                                               
    33                                                   rand int r_addr_delay,
    34                                                             r_data_delay,
    35                                                             r_resp_delay; // Random delays for address, data, and response
    36                                                   rand int w_addr_delay,
    37                                                             w_data_delay,
    38                                                             w_resp_delay; // Random delays for address, data, and response
    39                                               
    40                                               //---------------------------------------
    41                                                 //Constructor
    42                                               //---------------------------------------
    43                                                 function new(string name = "AXI4_seq_item");
    44              1                     154427         super.new(name);
    45                                                 endfunction
    46                                                 
    47                                               //---------------------------------------
    48                                                 //Utility and Field macros
    49                                               //---------------------------------------
    50              1                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
    50              2                    ***0***     
    50              3                    ***0***     
    50              4                    ***0***     
    50              5                    ***0***     
    50              6                      60000     
    50              7                    ***0***     
    50              8                    ***0***     
    50              9                    ***0***     
    50             10                    ***0***     
    51                                               
    52              1                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
    52              2                    ***0***     
    52              3                    ***0***     
    52              4                    ***0***     
    52              5                    ***0***     
    52              6                    ***0***     
    52              7                    ***0***     
    52              8                    ***0***     
    52              9                    ***0***     
    52             10                    ***0***     
    52             11                    ***0***     
    52             12                    ***0***     
    52             13                    ***0***     
    52             14                    ***0***     
    52             15                    ***0***     
    52             16                    ***0***     
    53                                               
    54              1                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
    54              2                    ***0***     
    54              3                    ***0***     
    54              4                    ***0***     
    54              5                    ***0***     
    54              6                    ***0***     
    54              7                    ***0***     
    54              8                    ***0***     
    54              9                    ***0***     
    54             10                    ***0***     
    54             11                    ***0***     
    54             12                    ***0***     
    54             13                    ***0***     
    54             14                    ***0***     
    54             15                    ***0***     
    54             16                    ***0***     
    55              1                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
    55              2                    ***0***     
    55              3                    ***0***     
    55              4                    ***0***     
    55              5                    ***0***     
    55              6                    ***0***     
    55              7                    ***0***     
    55              8                    ***0***     
    55              9                    ***0***     
    55             10                    ***0***     
    55             11                    ***0***     
    55             12                    ***0***     
    55             13                    ***0***     
    55             14                    ***0***     
    55             15                    ***0***     
    55             16                    ***0***     
    56              1                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
    56              2                    ***0***     
    56              3                    ***0***     
    56              4                    ***0***     
    56              5                    ***0***     
    56              6                    ***0***     
    56              7                    ***0***     
    56              8                    ***0***     
    56              9                    ***0***     
    56             10                    ***0***     
    56             11                    ***0***     
    56             12                    ***0***     
    56             13                    ***0***     
    56             14                    ***0***     
    56             15                    ***0***     
    56             16                    ***0***     
    57                                               
    58              1                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
    58              2                    ***0***     
    58              3                    ***0***     
    58              4                    ***0***     
    58              5                    ***0***     
    58              6                    ***0***     
    58              7                    ***0***     
    58              8                    ***0***     
    58              9                    ***0***     
    58             10                    ***0***     
    58             11                    ***0***     
    58             12                    ***0***     
    58             13                    ***0***     
    58             14                    ***0***     
    58             15                    ***0***     
    58             16                    ***0***     
    59              1                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
    59              2                    ***0***     
    59              3                    ***0***     
    59              4                    ***0***     
    59              5                    ***0***     
    59              6                    ***0***     
    59              7                    ***0***     
    59              8                    ***0***     
    59              9                    ***0***     
    59             10                    ***0***     
    59             11                    ***0***     
    59             12                    ***0***     
    59             13                    ***0***     
    59             14                    ***0***     
    59             15                    ***0***     
    59             16                    ***0***     
    60              1                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
    60              2                    ***0***     
    60              3                    ***0***     
    60              4                    ***0***     
    60              5                    ***0***     
    60              6                    ***0***     
    60              7                    ***0***     
    60              8                    ***0***     
    60              9                    ***0***     
    60             10                    ***0***     
    60             11                    ***0***     
    60             12                    ***0***     
    60             13                    ***0***     
    60             14                    ***0***     
    60             15                    ***0***     
    60             16                    ***0***     
    61                                               
    62              1                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
    62              2                    ***0***     
    62              3                    ***0***     
    62              4                    ***0***     
    62              5                    ***0***     
    62              6                    ***0***     
    62              7                    ***0***     
    62              8                    ***0***     
    62              9                    ***0***     
    62             10                    ***0***     
    62             11                    ***0***     
    62             12                    ***0***     
    62             13                    ***0***     
    62             14                    ***0***     
    62             15                    ***0***     
    62             16                    ***0***     
    63              1                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
    63              2                    ***0***     
    63              3                    ***0***     
    63              4                    ***0***     
    63              5                    ***0***     
    63              6                    ***0***     
    63              7                    ***0***     
    63              8                    ***0***     
    63              9                    ***0***     
    63             10                    ***0***     
    63             11                    ***0***     
    63             12                    ***0***     
    63             13                    ***0***     
    63             14                    ***0***     
    63             15                    ***0***     
    63             16                    ***0***     
    64                                               
    65              1                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
    65              2                    ***0***     
    65              3                    ***0***     
    65              4                    ***0***     
    65              5                    ***0***     
    65              6                    ***0***     
    65              7                    ***0***     
    65              8                    ***0***     
    65              9                    ***0***     
    65             10                    ***0***     
    65             11                    ***0***     
    65             12                    ***0***     
    65             13                    ***0***     
    65             14                    ***0***     
    65             15                    ***0***     
    65             16                    ***0***     
    66              1                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
    66              2                    ***0***     
    66              3                    ***0***     
    66              4                    ***0***     
    66              5                    ***0***     
    66              6                    ***0***     
    66              7                    ***0***     
    66              8                    ***0***     
    66              9                    ***0***     
    66             10                    ***0***     
    66             11                    ***0***     
    66             12                    ***0***     
    66             13                    ***0***     
    66             14                    ***0***     
    66             15                    ***0***     
    66             16                    ***0***     
    67              1                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
    67              2                    ***0***     
    67              3                    ***0***     
    67              4                    ***0***     
    67              5                    ***0***     
    67              6                    ***0***     
    67              7                    ***0***     
    67              8                    ***0***     
    67              9                    ***0***     
    67             10                    ***0***     
    67             11                    ***0***     
    67             12                    ***0***     
    67             13                    ***0***     
    67             14                    ***0***     
    67             15                    ***0***     
    67             16                    ***0***     
    68                                               
    69              1                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
    69              2                    ***0***     
    69              3                    ***0***     
    69              4                    ***0***     
    69              5                    ***0***     
    69              6                    ***0***     
    69              7                    ***0***     
    69              8                    ***0***     
    69              9                    ***0***     
    69             10                    ***0***     
    69             11                    ***0***     
    69             12                    ***0***     
    69             13                    ***0***     
    69             14                    ***0***     
    69             15                    ***0***     
    69             16                    ***0***     
    70              1                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
    70              2                    ***0***     
    70              3                    ***0***     
    70              4                    ***0***     
    70              5                    ***0***     
    70              6                    ***0***     
    70              7                    ***0***     
    70              8                    ***0***     
    70              9                    ***0***     
    70             10                    ***0***     
    70             11                    ***0***     
    70             12                    ***0***     
    70             13                    ***0***     
    70             14                    ***0***     
    70             15                    ***0***     
    70             16                    ***0***     
    71              1                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
    71              2                    ***0***     
    71              3                    ***0***     
    71              4                    ***0***     
    71              5                    ***0***     
    71              6                    ***0***     
    71              7                    ***0***     
    71              8                    ***0***     
    71              9                    ***0***     
    71             10                    ***0***     
    71             11                    ***0***     
    71             12                    ***0***     
    71             13                    ***0***     
    71             14                    ***0***     
    71             15                    ***0***     
    71             16                    ***0***     

  File ../tb/Env/AXI4_cfg.sv
    1                                                class AXI4_cfg  extends uvm_object;
    2               1                    ***0***        `uvm_object_utils(AXI4_cfg)
    2               2                    ***0***     
    2               3                    ***0***     
    2               4                    ***0***     
    2               5                    ***0***     
    2               6                    ***0***     
    2               7                    ***0***     
    2               8                    ***0***     
    2               9                    ***0***     
    2              10                    ***0***     
    3                                                   //virtual AXI4_if vif;
    4               1                          4        bit is_active = 1; // Default to active
    5                                                   
    6               1                          4        int inst_num=50000;
    7                                                
    8                                                   function new(string name="AXI4_cfg");
    9               1                          4     	super.new(name);

  File ../tb/Env/../Tests/AXI4_seq.sv
    1                                                class AXI4_seq extends uvm_sequence #(AXI4_seq_item);
    2               1                    ***0***         `uvm_object_utils(AXI4_seq)    
    2               2                    ***0***     
    2               3                    ***0***     
    2               4                    ***0***     
    2               5                    ***0***     
    2               6                          2     
    2               7                    ***0***     
    2               8                    ***0***     
    2               9                    ***0***     
    2              10                    ***0***     
    3                                                    AXI4_seq_item item;
    4                                                   
    5                                                   
    6                                                    int i,inst_num;
    7                                                    AXI4_cfg cfg;
    8                                                
    9                                                    function new(string name="AXI4_seq");
    10              1                          2             super.new(name);
    11                                                   endfunction
    12                                               
    13                                                   virtual task pre_body();
    14              1                    ***0***             `uvm_info("Seq", "Starting pre body ", UVM_MEDIUM)
    15              1                          2             cfg=AXI4_cfg::type_id::create("cfg");
    16                                               
    17                                                       if(!uvm_config_db#(AXI4_cfg)::get(m_sequencer, "", "AXI4_cfg", cfg))
    18              1                    ***0***                 `uvm_fatal("NOCFG", "No configuration object found");
    19                                                       
    20              1                          2             inst_num = cfg.inst_num;
    21              1                    ***0***             `uvm_info("Seq", "Finished pre body ", UVM_MEDIUM)
    22                                               
    23                                                   endtask
    24                                               
    25                                                   virtual task body();
    26              1                    ***0***             `uvm_info("Seq", "Starting sequence", UVM_MEDIUM)
    27              1                          2             item = AXI4_seq_item::type_id::create("item");
    28                                               
    29              1                      60000             repeat(inst_num)begin
    30              1                      60000                 start_item(item);
    31                                                           assert(item.randomize with {
    32                                                 
    33                                                               // s_axil_araddr  inside {[0:10000]};
    34                                                               // s_axil_awaddr  inside {[0:10000]};
    35                                                           }); 
    36              1                      60000                 finish_item(item);
    37                                                       end
    38              1                          2             $display("Sequence completed with %0d items", inst_num);
    39              1                    ***0***             `uvm_info("Seq", "Finishing sequence", UVM_MEDIUM)

  File ../tb/Env/AXI4_scoreboard.sv
    1                                                `uvm_analysis_imp_decl(_w)
    2                                                `uvm_analysis_imp_decl(_r)
    3                                                class AXI4_scoreboard extends uvm_scoreboard;
    4               1                    ***0***         `uvm_component_utils(AXI4_scoreboard)
    4               2                    ***0***     
    4               3                    ***0***     
    5                                                
    6                                                    int read_trans,write_trans,correct,incorrect;
    7                                                    uvm_analysis_imp_w#(AXI4_seq_item,AXI4_scoreboard) write_ap;
    8                                                    uvm_analysis_imp_r#(AXI4_seq_item,AXI4_scoreboard) read_ap;
    9                                                    bit [31:0] ram[int];
    10                                               
    11                                                   function new(string name="scoreboard", uvm_component parent=null);
    12              1                          1             super.new(name, parent);
    13              1                          1             write_ap=new("write_ap",this);
    14              1                          1     	    read_ap=new("read_ap",this);
    15                                                   endfunction
    16                                               
    17                                                   function  void build_phase(uvm_phase phase);
    18              1                          1         super.build_phase(phase);
    19                                                   endfunction
    20                                               
    21                                               	// caputring the expected from the refrence model
    22                                                   function void  write_w(AXI4_seq_item item);
    23                                                       if(item.rst) begin
    24              1                          2                 `uvm_info("AXI4_Scoreboard", "Resetting scoreboard", UVM_LOW)
    25              1                          2                 ram.delete(); // clearing the ram
    26                                                       end
    27                                                       else begin
    28              1                      13494                 write_trans++;
    29                                                           if(item.s_axil_bresp==2'b00) begin // checking if the write response is OK
    30              1                      67470                     foreach(item.s_axil_wstrb[i]) begin
    31                                                                   if(item.s_axil_wstrb[i]) begin // checking if the write strobe is valid
    32              1                      39586                             ram[item.s_axil_awaddr>>2][(i*8)+:8] = item.s_axil_wdata[(i*8)+:8]; // writing the data to the ram
    33                                                                   end
    34                                                               end
    35              1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Write transaction at address %0h with data %0h", item.s_axil_awaddr>>2, item.s_axil_wdata), UVM_HIGH)
    36                                                           end
    37                                                           else begin
    38              1                    ***0***                     `uvm_info("AXI4_Scoreboard", "Write transaction because response wasn't okay", UVM_LOW)
    39                                                           end
    40                                                       end
    41                                                       
    42                                                   endfunction
    43                                               	// caputring the actual from the monitor
    44                                                   function void  write_r(AXI4_seq_item item);
    45              1                      26970             read_trans++;
    46                                                       if(item.s_axil_rresp==2'b00) begin // checking if the read response is OK
    47                                                           if(ram.exists(item.s_axil_araddr>>2)) begin // checking if the address exists in the ram
    48                                                               if(item.s_axil_rdata == ram[item.s_axil_araddr>>2]) begin // getting the data from the ram
    49              1                    ***0***                         `uvm_info("AXI4_Scoreboard", "Read transaction is correct", UVM_MEDIUM)
    50              1                    ***0***                         `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h with data %0h", item.s_axil_araddr>>2, ram[item.s_axil_araddr>>2]), UVM_HIGH)
    51              1                      10492                         correct++;
    52                                                               end
    53                                                               else begin
    54              1                    ***0***                         `uvm_error("AXI4_Scoreboard", "Read transaction is incorrect")
    55              1                    ***0***                         `uvm_info("AXI4_Scoreboard", $sformatf("Expected: %0h, Actual: %0h at address: %0h", ram[item.s_axil_araddr>>2], item.s_axil_rdata, item.s_axil_araddr>>2), UVM_HIGH)
    56              1                    ***0***                         incorrect++;
    57                                                               end
    58                                                           end
    59                                                           else begin
    60              1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h but address doesn't exist in ram", item.s_axil_araddr>>2), UVM_HIGH)
    61                                                               if(item.s_axil_rdata == 32'b0) begin // getting the data from the ram
    62              1                    ***0***                         `uvm_info("AXI4_Scoreboard", "Read transaction is correct", UVM_MEDIUM)
    63              1                    ***0***                         `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h with data 0", item.s_axil_araddr>>2), UVM_HIGH)
    64              1                      16478                         correct++;
    65                                                               end
    66                                                               else begin
    67              1                    ***0***                         `uvm_error("AXI4_Scoreboard", "Read transaction is incorrect")
    68              1                    ***0***                         `uvm_info("AXI4_Scoreboard", $sformatf("Expected: 0, Actual: %0h", item.s_axil_rdata), UVM_HIGH)
    69              1                    ***0***                         incorrect++;
    70                                                               end
    71                                                           end
    72                                                       end
    73                                                       else begin
    74              1                    ***0***                 `uvm_info("AXI4_Scoreboard", "Read transaction because response wasn't okay", UVM_LOW)
    75                                                       end
    76                                                       
    77                                                   endfunction
    78                                               
    79                                                  
    80                                                   function void report_phase(uvm_phase  phase);
    81              1                          1             super.report_phase(phase);
    82              1                          1             `uvm_info("report_phase","*************AXI4_Scoreboard**************************",UVM_LOW)
    83              1                          1             `uvm_info("report_phase", $sformatf("total number of transactions: %0d",read_trans+write_trans),UVM_LOW)
    84              1                          1             `uvm_info("report_phase", $sformatf("total number of read transactions: %0d",read_trans),UVM_LOW)
    85              1                          1             `uvm_info("report_phase", $sformatf("total number of write transactions: %0d",write_trans),UVM_LOW)
    86                                               
    87              1                          1             `uvm_info("report_phase", $sformatf("total succesful transactions: %0d",correct),UVM_LOW)
    88              1                          1             `uvm_info("report_phase", $sformatf("total failled transactions: %0d",incorrect),UVM_LOW) 
    89              1                          1             `uvm_info("report_phase","******************************************************",UVM_LOW) 

  File ../tb/Env/AXI4_read_cov.sv
    1                                                class AXI4_read_cov extends uvm_subscriber#(AXI4_seq_item);
    2               1                    ***0***        `uvm_component_utils(AXI4_read_cov)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                   AXI4_seq_item tr;
    4                                                   localparam max_pos ={32{1'b1}};
    5                                                   localparam special1 = {16{{1'b0},{1'b1}}}; // pattern of zeros and ones
    6                                                   localparam special2 = {16{{1'b1},{1'b0}}}; // pattern of ones and zeros
    7                                                   covergroup AXI4_read_CovGrp;
    8                                                	//Cover that the data read from the register from port a [rs1] has used all these values
    9                                                        rdata_cp : coverpoint tr.s_axil_rdata {
    10                                                           bins MAXPOS = {max_pos};
    11                                                           bins ZERO = {31'b0};
    12                                                           bins special1_b = {special1}; // pattern of zeros and ones
    13                                                           bins special2_b = {special2}; // pattern of ones and zeros
    14                                                           bins rest[4] = {[1:(max_pos-1)]};
    15                                                       }	
    16                                               	// Cover that all the addresses were written in the write operation
    17                                                       raddr_cp : coverpoint tr.s_axil_araddr;
    18                                                      endgroup
    19                                               
    20                                                   function new(string name="AXI4_read_cov", uvm_component parent=null);
    21              1                          1             super.new(name, parent);
    22              1                          1             AXI4_read_CovGrp=new();
    23                                                   endfunction
    24                                                   virtual function void build_phase(uvm_phase phase);
    25              1                          1             super.build_phase(phase);
    26                                                   endfunction
    27                                                   function void write(T t);
    28              1                      26970             $cast(tr, t);
    29              1                      26970             AXI4_read_CovGrp.sample();

  File ../tb/Env/AXI4_write_cov.sv
    1                                                class AXI4_write_cov extends uvm_subscriber#(AXI4_seq_item);
    2               1                    ***0***        `uvm_component_utils(AXI4_write_cov)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                   AXI4_seq_item tr;
    4                                                   localparam max_pos ={32{1'b1}};
    5                                                   localparam special1 = {16{{1'b0},{1'b1}}}; // pattern of zeros and ones
    6                                                   localparam special2 = {16{{1'b1},{1'b0}}}; // pattern of ones and zeros
    7                                                   covergroup AXI4_write_CovGrp;
    8                                                	//Cover that the data read from the register from port a [rs1] has used all these values
    9                                                        wdata_cp : coverpoint tr.s_axil_wdata {
    10                                                           bins MAXPOS = {max_pos};
    11                                                           bins ZERO = {31'b0};
    12                                                           bins special1_b = {special1}; // pattern of zeros and ones
    13                                                           bins special2_b = {special2}; // pattern of ones and zeros
    14                                                           bins rest[4] = {[1:(max_pos-1)]};
    15                                                       }	
    16                                               	// Cover that all the addresses were written in the write operation
    17                                                       wstrb_cp : coverpoint tr.s_axil_wstrb{
    18                                                           bins ALL_ONES = {4'b1111};
    19                                                           bins ALL_ZEROS = {4'b0000};
    20                                                           bins one_zero = {4'b0111, 4'b1011, 4'b1101, 4'b1110}; // patterns with one bit set to zero
    21                                                           bins two_zeros = {4'b1100, 4'b1010, 4'b1001, 4'b0110, 4'b0101, 4'b0011}; // patterns with two bits set to zero
    22                                                           bins three_zeros = {4'b1000, 4'b0100, 4'b0010, 4'b0001}; // patterns with three bits set to zero
    23                                                       }
    24                                                       waddr_cp : coverpoint tr.s_axil_awaddr;
    25                                                      endgroup
    26                                               
    27                                                   function new(string name="AXI4_write_cov", uvm_component parent=null);
    28              1                          1             super.new(name, parent);
    29              1                          1             AXI4_write_CovGrp=new();
    30                                                   endfunction
    31                                                   virtual function void build_phase(uvm_phase phase);
    32              1                          1             super.build_phase(phase);
    33                                                   endfunction
    34                                                   function void write(T t);
    35              1                      13496             $cast(tr, t);
    36              1                      13496             AXI4_write_CovGrp.sample();

  File ../tb/Env/AXI4_write_driver.sv
    1                                                class AXI4_write_driver extends uvm_driver#(AXI4_seq_item);
    2               1                    ***0***         `uvm_component_utils(AXI4_write_driver)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                    virtual AXI4_if vif;
    4                                                    AXI4_seq_item address_item,data_item; // Item to hold the sequence item
    5                                                    semaphore  rw_sem; // Semaphores for write address and data operations
    6                                                    // Flags to indicate if write address and data operations are done
    7                                                    bit write_address_done, write_data_done;
    8                                                    int address_written;
    9                                                    function new(string name="AXI4_write_driver", uvm_component parent=null);
    10              1                          1             super.new(name, parent);
    11              1                          1             rw_sem = new(1); // Semaphore for read/write operation
    12                                                   endfunction
    13                                               
    14                                                   virtual function void build_phase(uvm_phase phase);
    15              1                          1             super.build_phase(phase);
    16              1                    ***0***             `uvm_info("AXI4 Write Driver", "Building driver", UVM_MEDIUM)
    17                                                       if(!(uvm_config_db#(virtual AXI4_if)::get(null, "", "vif", vif)))
    18              1                    ***0***                 `uvm_fatal("NOVIF", "No virtual interface found");
    19              1                    ***0***             `uvm_info("AXI4 Write Driver", "Finished building driver", UVM_MEDIUM)
    20                                               
    21                                                   endfunction
    22                                               
    23                                                   virtual task run_phase(uvm_phase phase);
    24              1                          1             super.run_phase(phase);
    25              1                    ***0***             `uvm_info("AXI4 Write Driver", "Running driver", UVM_MEDIUM)
    26              1                          1             reset();
    27              1                          1             write_operation();
    28                                               
    29                                                   endtask
    30                                               
    31                                                   task reset();
    32              1                    ***0***             `uvm_info("Driver", "Resetting driver", UVM_MEDIUM)
    33              1                          1             vif.s_axil_awvalid <= 1'b0;
    34              1                          1             vif.s_axil_wvalid <= 1'b0;
    35              1                          1             vif.s_axil_bready <= 1'b0;
    36              1                          1             @(posedge vif.clk);
    37              1                          1             @(posedge vif.clk);
    38                                               
    39              1                    ***0***             `uvm_info("Driver", "Finished resetting driver", UVM_MEDIUM)
    40                                                   endtask
    41                                               
    42                                                  
    43                                               ///////////////////// I am the Master //////////////////////
    44                                               // we will have 3 semaphores
    45                                               // 1. For write operation
    46                                               // 2. For read operation
    47                                               // 3. For both read and write operation to choose which one will get the item from the sequencer first 
    48                                               ///////////////////// Write Operation //////////////////////
    49                                               task write_operation();
    50                                               
    51                                                 fork
    52              1                          1             write_address(); // Write address
    53                                                       
    54              1                          1             write_data(); // Write data
    55                                                      
    56              1                          1             forever begin
    57              1                     207897                 vif.s_axil_bready <=  $urandom_range(0, 1); // Set ready for write response
    58              1                     207897                 @(posedge vif.clk); // Wait for clock edge
    59                                                           if(vif.s_axil_bvalid && vif.s_axil_bready) begin
    60              1                      13494                     write_address_done = 0; // Reset write address done flag
    61              1                      13494                     write_data_done = 0; // Reset write data done flag
    62                                                           end
    63                                                       end
    64                                               
    65                                                 join_none
    66                                                   // Fork-Join for read address and data phases
    67                                               
    68                                               endtask : write_operation
    69                                               
    70                                               task write_address();
    71              1                          1         forever begin
    72              1                      25576             @(posedge vif.clk); // Wait for clock edge
    73                                                       if(!write_address_done) begin
    74              1                      14999                 address_item = AXI4_seq_item::type_id::create("address_item", this);
    75              1                      14999                 rw_sem.get(); // Acquire semaphore for read/write operation
    76              1                      14999                 seq_item_port.get_next_item(address_item);
    77              1                      14998                 seq_item_port.item_done(); // Indicate that the item is done
    78              1                      14998                 rw_sem.put(); // Release semaphore for read/write operation
    79              1                      55067                 repeat(address_item.w_addr_delay) @(posedge vif.clk); // Random delay for address write
    79              2                      55067     
    80              1                    ***0***                 `uvm_info("AXI4 Write Driver", "Writing address ", UVM_MEDIUM)
    81              1                      14998                 vif.s_axil_awaddr <= address_item.s_axil_awaddr;
    82              1                      14998                 vif.s_axil_awprot <= address_item.s_axil_awprot;
    83                                                           if(address_item.valid_write_address) begin
    84              1                      13494                     write_address_done = 1; // Indicate that write address is done
    85              1                      13494                     vif.s_axil_awvalid <= 1'b1;
    86              1                      13494                     @(posedge vif.clk);
    87              1                      57487                     while(!vif.s_axil_awready) 
    88              1                      43993                         @(posedge vif.clk);
    89              1                      13494                     vif.s_axil_awvalid <= 1'b0;
    90              1                      13494                     address_written++;
    91              1                    ***0***                     `uvm_info("AXI4 Write Driver", "Finished writing address", UVM_MEDIUM)
    92                                                           end
    93                                                       end
    94                                                   end
    95                                                   // write_address_sem.put(); // Release semaphore for write address operation
    96                                               
    97                                               endtask : write_address
    98                                               
    99                                               task write_data();
    100             1                          1         forever begin
    101             1                      25553             @(posedge vif.clk); // Wait for clock edge
    102                                                      if(!write_data_done) begin
    103             1                      15002                 data_item = AXI4_seq_item::type_id::create("data_item", this);
    104             1                      15002                 rw_sem.get(); // Acquire semaphore for read/write operation
    105             1                      15002                 seq_item_port.get_next_item(data_item);
    106             1                      15002                 seq_item_port.item_done(); // Indicate that the item is done
    107             1                      15002                 rw_sem.put(); // Release semaphore for read/write operation
    108             1                      56104                 repeat(data_item.w_data_delay) @(posedge vif.clk); // Random delay for data write
    108             2                      56104     
    109             1                    ***0***                 `uvm_info("AXI4 Write Driver", "Writing data", UVM_MEDIUM)
    110             1                      15002                 vif.s_axil_wdata <= data_item.s_axil_wdata;
    111             1                      15002                 vif.s_axil_wstrb <= data_item.s_axil_wstrb;
    112                                                          if(data_item.valid_write_data) begin
    113             1                      13495                     write_data_done = 1; // Indicate that write data is done
    114             1                      13495                     vif.s_axil_wvalid <= 1'b1;
    115             1                      13495                     @(posedge vif.clk);
    116             1                     126239                     while(!vif.s_axil_wready) 
    117             1                     112745                         @(posedge vif.clk);
    118             1                      13494                     vif.s_axil_wvalid <= 1'b0;
    119             1                    ***0***                     `uvm_info("AXI4 Write Driver", "Finished writing data", UVM_MEDIUM)
    120                                                          end
    121                                                      end
    122                                                  end
    123                                                 
    124                                              endtask : write_data
    125                                              
    126                                               function void report_phase(uvm_phase  phase);
    127             1                          1             super.report_phase(phase);
    128             1                          1             `uvm_info("report_phase","*************AXI4_Write_Driver**************************",UVM_LOW)
    129             1                          1             `uvm_info("report_phase", $sformatf("total number of Address count : %0d", address_written),UVM_LOW)
    130             1                          1             `uvm_info("report_phase","******************************************************",UVM_LOW) 

  File ../tb/Env/AXI4_read_driver.sv
    1                                                class AXI4_read_driver extends uvm_driver#(AXI4_seq_item);
    2               1                    ***0***         `uvm_component_utils(AXI4_read_driver)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                    virtual AXI4_if vif;
    4                                                    AXI4_seq_item read_item;
    5                                                    semaphore read_sem,read_address_sem, read_data_sem,resp_sem;
    6                                                    bit  read_address_done;
    7                                                    function new(string name="AXI4_read_driver", uvm_component parent=null);
    8               1                          1             super.new(name, parent);
    9               1                          1             read_sem = new(1); // Semaphore for read operation
    10              1                          1             read_address_sem = new(1); // Semaphore for read address operation
    11              1                          1             read_data_sem = new(1); // Semaphore for read data operation
    12              1                          1             resp_sem = new(1); // Semaphore for read response operation
    13                                                   endfunction
    14                                               
    15                                                   virtual function void build_phase(uvm_phase phase);
    16              1                          1             super.build_phase(phase);
    17              1                    ***0***             `uvm_info("AXI4 Read Driver", "Building driver", UVM_MEDIUM)
    18                                                       if(!(uvm_config_db#(virtual AXI4_if)::get(null, "", "vif", vif)))
    19              1                    ***0***                 `uvm_fatal("NOVIF", "No virtual interface found");
    20              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished building driver", UVM_MEDIUM)
    21                                                   endfunction
    22                                               
    23                                                   virtual task run_phase(uvm_phase phase);
    24              1                          1             super.run_phase(phase);
    25              1                    ***0***             `uvm_info("AXI4 Read Driver", "Running driver", UVM_MEDIUM)
    26              1                          1             reset();
    27              1                          1             forever begin
    28                                                           // Read operation
    29                                                           fork
    30              1                     207897                     read_operation();
    31                                                               begin
    32              1                     207897                         resp_sem.get(); // Acquire semaphore for read response operation
    33              1                     207897                         @(posedge vif.clk); // Wait for clock edge
    34              1                     207896                         vif.s_axil_rready <= $urandom_range(0, 1); // Set ready for read response
    35                                                                   if(vif.s_axil_rvalid ) begin
    36                                                                       if(vif.s_axil_rready) begin
    37              1                      26970                                 read_address_done = 0; // Reset read address done flag
    38                                                                       end
    39                                                                   end
    40              1                     207896                         resp_sem.put(); // Release semaphore for read response operation
    41                                                               end
    42                                                           join_any
    43                                                           
    44                                                       end
    45                                                   endtask
    46                                               
    47                                                   task reset();
    48              1                    ***0***             `uvm_info("AXI4 Read Driver", "Resetting driver", UVM_MEDIUM)
    49              1                          1             vif.s_axil_arvalid <= 1'b0; 
    50              1                          1             vif.s_axil_rready <= 1'b0;
    51              1                          1             vif.rst <= 1'b1; // Assert reset
    52              1                          1             @(posedge vif.clk);
    53              1                          1             vif.rst <= 1'b0; // Deassert reset
    54              1                          1             @(posedge vif.clk);
    55                                               
    56              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished resetting driver", UVM_MEDIUM)
    57                                                   endtask
    58                                               
    59                                                  
    60                                               
    61                                               //////////////////// Read Operation //////////////////////
    62                                               task read_operation();
    63              1                     207897         @(posedge vif.clk);
    64              1                     207896         read_sem.get(); // Acquire semaphore for read operation
    65                                                       if(!read_address_done) begin
    66              1                      30000                 read_item = AXI4_seq_item::type_id::create("read_item", this);
    67              1                      30000                 seq_item_port.get_next_item(read_item); // Get the next item from the sequencer
    68              1                      30000                 seq_item_port.item_done(); // Indicate that the item is done
    69              1                    ***0***                 `uvm_info("AXI4 Read Driver", $sformatf("Read item: %s", read_item.convert2string()), UVM_MEDIUM)
    70              1                      30000                 read_address(read_item); // Read address
    71                                                       end
    72                                                   
    73                                                       // begin
    74                                                       //     vif.s_axil_rready <= read_item.s_axil_rready; // Set ready for read response
    75                                                       //     if(vif.s_axil_rvalid & read_item.s_axil_rready) begin 
    76                                                       //         read_address_done = 0; // Reset read address done flag
    77                                                       //     end
    78                                                       // end
    79                                                       
    80                                                   
    81              1                     207895         read_sem.put(); // Release semaphore for read operation
    82                                               endtask : read_operation
    83                                               
    84                                               task read_address(AXI4_seq_item read_item);
    85              1                      30000         read_address_sem.get(); // Acquire semaphore for read address operation
    86              1                     110233         repeat(read_item.r_addr_delay) @(posedge vif.clk); // Random delay for address read
    86              2                     110233     
    87              1                    ***0***         `uvm_info("AXI4 Read Driver", "Reading address", UVM_MEDIUM)
    88              1                      30000         vif.s_axil_araddr <= read_item.s_axil_araddr;
    89              1                      30000         vif.s_axil_arprot <= read_item.s_axil_arprot;
    90                                                   if(read_item.valid_read_address) begin
    91              1                      26971             read_address_done = 1; // Indicate that read address is done
    92              1                      26971             vif.s_axil_arvalid <= 1'b1;
    93              1                      26971             @(posedge vif.clk);
    94              1                      53940             while(!vif.s_axil_arready) 
    95              1                      26970                 @(posedge vif.clk);
    96              1                      26970             vif.s_axil_arvalid <= 1'b0;
    97              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished reading address", UVM_MEDIUM)
    98                                                   end
    99              1                      29999         @(posedge vif.clk);
    100             1                      29999         read_address_sem.put(); // Release semaphore for read address operation

  File ../tb/Env/AXI4_write_monitor.sv
    1                                                class AXI4_write_monitor extends uvm_monitor;
    2               1                    ***0***       `uvm_component_utils(AXI4_write_monitor)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                
    4                                                  virtual AXI4_if vif;  // Connect this via uvm_config_db
    5                                                  uvm_analysis_port #(AXI4_seq_item) mon_ap;
    6                                                
    7                                                   AXI4_seq_item write_item, data_item, addr_item, addr_queue[$], data_queue[$];
    8                                                  function new(string name, uvm_component parent);
    9               1                          1         super.new(name, parent);
    10                                                   //txn = AXI4_seq_item::type_id::create("txn");
    11              1                          1         mon_ap = new("mon_ap", this);
    12                                                 endfunction
    13                                               
    14                                                 function void build_phase(uvm_phase phase);
    15              1                          1         super.build_phase(phase);
    16                                                   if (!uvm_config_db#(virtual AXI4_if)::get(this, "", "vif", vif))
    17              1                    ***0***           `uvm_fatal("NOVIF", "Virtual interface not set for AXI4_monitor");
    18                                                 endfunction
    19                                               
    20                                                 task run_phase(uvm_phase phase);
    21                                               
    22                                                   fork
    23              1                          1           address_phase;
    24              1                          1           data_phase;
    25              1                          1           response_phase;
    26                                                   join_none
    27                                                   
    28                                                 endtask
    29                                                 
    30                                                //////////////////// Write opertion ////////////////
    31                                                 // Address phase
    32                                                 task address_phase;
    33              1                          1         forever begin
    34              1                     207900           @(posedge vif.clk or posedge vif.rst);
    35                                                     if (vif.rst) begin
    36              1                          2             addr_queue.delete();  // Clear the address queue on reset
    37                                                     end
    38                                                     else begin
    39                                                       if(vif.s_axil_awvalid && vif.s_axil_awready)
    40                                                       begin
    41              1                      13494               addr_item = AXI4_seq_item::type_id::create("addr_item");
    42              1                      13494               addr_item.s_axil_awaddr = vif.s_axil_awaddr;
    43              1                      13494               addr_item.s_axil_awprot = vif.s_axil_awprot;
    44              1                      13494               addr_queue.push_back(addr_item);
    45                                                       end
    46                                                     end
    47                                                   end
    48                                                 endtask : address_phase
    49                                                 // Data phase
    50                                                 task data_phase;
    51              1                          1         forever begin
    52              1                     207900           @(posedge vif.clk or posedge vif.rst);
    53                                                     if (vif.rst) begin
    54              1                          2             data_queue.delete();  // Clear the data queue on reset
    55                                                     end
    56                                                     else  // Check if reset is not asserted
    57                                                     begin
    58                                                       if(vif.s_axil_wvalid && vif.s_axil_wready )
    59                                                       begin
    60              1                      13494               data_item = AXI4_seq_item::type_id::create("data_item");
    61              1                      13494               data_item.s_axil_wdata = vif.s_axil_wdata;
    62              1                      13494               data_item.s_axil_wstrb = vif.s_axil_wstrb;
    63              1                      13494               data_queue.push_back(data_item);
    64                                                       end
    65                                                     end
    66                                                   end
    67                                                 endtask : data_phase
    68                                                 //Write response
    69                                                 task response_phase;
    70              1                          1         forever begin
    71              1                     207900           @(posedge vif.clk or posedge vif.rst);
    72                                                     if (vif.rst) begin
    73              1                          2             write_item = AXI4_seq_item::type_id::create("write_item");
    74              1                          2             write_item.rst=vif.rst;
    75              1                          2             mon_ap.write(write_item);  // Send reset item to scoreboard or coverage collector
    76                                                     end
    77                                                     else begin
    78                                                       if(vif.s_axil_bvalid && vif.s_axil_bready)
    79                                                       begin
    80              1                      13494                 #1;
    81                                                           if(addr_queue.size() > 0 && data_queue.size() > 0)
    82                                                           begin
    83              1                      13494                   write_item = AXI4_seq_item::type_id::create("write_item");
    84              1                      13494                   write_item.s_axil_awaddr = addr_queue[0].s_axil_awaddr;
    85              1                      13494                   write_item.s_axil_awprot = addr_queue[0].s_axil_awprot;
    86              1                      13494                   write_item.s_axil_wdata = data_queue[0].s_axil_wdata;
    87              1                      13494                   write_item.s_axil_wstrb = data_queue[0].s_axil_wstrb;
    88              1                      13494                   write_item.s_axil_bresp = vif.s_axil_bresp;
    89                                                             // write_queue.push_back(write_item);
    90              1                      13494                   addr_queue.pop_front();
    91              1                      13494                   data_queue.pop_front();
    92              1                      13494                   mon_ap.write(write_item);  // Send to scoreboard or coverage collector
    93                                                           end
    94                                                           else
    95                                                           begin
    96              1                    ***0***                   `uvm_error("AXI4_write_monitor", "Write response received without corresponding address and data");

  File ../tb/Env/AXI4_read_monitor.sv
    1                                                class AXI4_read_monitor extends uvm_monitor;
    2               1                    ***0***       `uvm_component_utils(AXI4_read_monitor)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                  virtual AXI4_if vif;  // Connect this via uvm_config_db
    4                                                  uvm_analysis_port #(AXI4_seq_item) mon_ap;
    5                                                
    6                                                   AXI4_seq_item read_item, addr_item, addr_queue[$];
    7                                                  function new(string name, uvm_component parent);
    8               1                          1         super.new(name, parent);
    9                                                    //txn = AXI4_seq_item::type_id::create("txn");
    10              1                          1         mon_ap = new("mon_ap", this);
    11                                                 endfunction
    12                                               
    13                                                 function void build_phase(uvm_phase phase);
    14              1                          1         super.build_phase(phase);
    15                                                   if (!(uvm_config_db#(virtual AXI4_if)::get(this, "", "vif", vif)))
    16              1                    ***0***           `uvm_fatal("NOVIF", "Virtual interface not set for AXI4_monitor");
    17                                                 endfunction
    18                                               
    19                                                 task run_phase(uvm_phase phase);
    20                                               
    21              1                          1         forever begin
    22              1                     207900           @(posedge vif.clk or posedge vif.rst);
    23                                                     if (vif.rst) begin
    24              1                          2             addr_queue.delete();  // Clear the address queue on reset
    25                                                      
    26                                                     end
    27                                                     else begin
    28              1                     207897             address_phase();
    29              1                     207897             response_phase();
    30                                                     end
    31                                                   end
    32                                                   
    33                                                 endtask
    34                                                 
    35                                                //////////////////// read opertion ////////////////
    36                                                 // Address phase
    37                                                 task address_phase;
    38                                                     // Check if reset is not asserted
    39                                                     if(vif.rst == 1'b0) begin
    40                                                       if(vif.s_axil_arvalid && vif.s_axil_arready)
    41                                                       begin
    42              1                      26970                 addr_item = AXI4_seq_item::type_id::create("addr_item");
    43              1                      26970                 addr_item.s_axil_araddr = vif.s_axil_araddr;
    44              1                      26970                 addr_item.s_axil_arprot = vif.s_axil_arprot;
    45              1                      26970                 addr_queue.push_back(addr_item);
    46                                                       end
    47                                                     end
    48              1                    ***0***           else addr_queue.delete();
    49                                                    
    50                                                   
    51                                                 endtask : address_phase
    52                                                 // Data phase
    53                                                 task response_phase;
    54                                                   
    55                                                     if(vif.rst == 1'b0) begin
    56                                                       if(vif.s_axil_rvalid && vif.s_axil_rready)
    57                                                           if(addr_queue.size() > 0) begin
    58              1                      26970                     read_item = AXI4_seq_item::type_id::create("read_item");
    59              1                      26970                     read_item.s_axil_araddr = addr_queue[0].s_axil_araddr;
    60              1                      26970                     read_item.s_axil_arprot = addr_queue[0].s_axil_arprot;
    61              1                      26970                     read_item.s_axil_rdata = vif.s_axil_rdata;
    62              1                      26970                     read_item.s_axil_rresp = vif.s_axil_rresp;
    63              1                      26970                     addr_queue.pop_front();
    64              1                      26970                     mon_ap.write(read_item);  // Send to scoreboard or coverage collector
    65                                                           end
    66                                                           else begin
    67              1                    ***0***                     `uvm_error("AXI4_read_monitor", "read response received without corresponding address ");

  File ../tb/Env/AXI4_sequencer.sv
    1                                                class AXI4_sequencer extends uvm_sequencer#(AXI4_seq_item);
    2               1                    ***0***       `uvm_component_utils(AXI4_sequencer)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                
    4                                                  function new(string name, uvm_component parent);
    5               1                          2         super.new(name, parent);

  File ../tb/Env/AXI4_read_agent.sv
    1                                                class AXI4_read_agent extends uvm_agent;
    2               1                    ***0***       `uvm_component_utils(AXI4_read_agent)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                  // Declaring agent components
    4                                                  AXI4_read_driver    driver;
    5                                                  AXI4_sequencer sequencer;
    6                                                  AXI4_read_monitor    read_monitor;
    7                                                  AXI4_read_cov read_cov; // Coverage collector
    8                                                  AXI4_cfg  cfg;  // Config object
    9                                                  // Analysis ports to forward transactions from monitors
    10                                                 uvm_analysis_port #(AXI4_seq_item) read_port;
    11                                               
    12                                                 function new(string name, uvm_component parent);
    13              1                          1         super.new(name, parent);
    14                                                   // Creating analysis ports
    15              1                          1         read_port = new("read_port", this);
    16                                                 endfunction
    17                                               
    18                                                 function void build_phase(uvm_phase phase);
    19              1                          1         super.build_phase(phase);
    20                                               
    21                                                  // Retrieve Configuration
    22                                                   if (!uvm_config_db#(AXI4_cfg)::get(this, "", "AXI4_cfg", cfg))
    23              1                    ***0***           `uvm_fatal("CONFIG", "Agent configuration not set!")
    24                                               
    25              1                          1         read_monitor    = AXI4_read_monitor::type_id::create("read_monitor", this);
    26              1                          1         read_cov        = AXI4_read_cov::type_id::create("read_cov", this);
    27                                                   if (cfg.is_active) begin
    28              1                          1           driver    = AXI4_read_driver::type_id::create("driver", this);
    29              1                          1           sequencer = AXI4_sequencer::type_id::create("sequencer", this);
    30                                                   end
    31                                               
    32                                                 endfunction : build_phase
    33                                               
    34                                               
    35                                                 function void connect_phase(uvm_phase phase);
    36              1                          1         read_monitor.mon_ap.connect(read_port);
    37              1                          1         read_monitor.mon_ap.connect(read_cov.analysis_export);
    38                                                   if (cfg.is_active) begin
    39              1                          1         driver.seq_item_port.connect(sequencer.seq_item_export);

  File ../tb/Env/AXI4_write_agent.sv
    1                                                class AXI4_write_agent extends uvm_agent;
    2               1                    ***0***       `uvm_component_utils(AXI4_write_agent)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                  // Declaring agent components
    4                                                  AXI4_write_driver    driver;
    5                                                  AXI4_sequencer sequencer;
    6                                                  AXI4_write_monitor    write_monitor;
    7                                                  AXI4_write_cov write_cov; // Coverage collector
    8                                                  AXI4_cfg  cfg;  // Config object
    9                                                  // Analysis ports to forward transactions from monitors
    10                                                 uvm_analysis_port #(AXI4_seq_item) write_port;
    11                                               
    12                                                 function new(string name, uvm_component parent);
    13              1                          1         super.new(name, parent);
    14                                                   // Creating analysis ports
    15              1                          1         write_port = new("write_port", this);
    16                                                 endfunction
    17                                               
    18                                                 function void build_phase(uvm_phase phase);
    19              1                          1         super.build_phase(phase);
    20                                               
    21                                                  // Retrieve Configuration
    22                                                   if (!uvm_config_db#(AXI4_cfg)::get(this, "", "AXI4_cfg", cfg))
    23              1                    ***0***           `uvm_fatal("CONFIG", "Agent configuration not set!")
    24                                               
    25              1                          1         write_monitor    = AXI4_write_monitor::type_id::create("write_monitor", this);
    26              1                          1         write_cov        = AXI4_write_cov::type_id::create("write_cov", this);
    27                                                   if (cfg.is_active) begin
    28              1                          1           driver    = AXI4_write_driver::type_id::create("driver", this);
    29              1                          1           sequencer = AXI4_sequencer::type_id::create("sequencer", this);
    30                                                   end
    31                                               
    32                                                 endfunction : build_phase
    33                                               
    34                                               
    35                                                 function void connect_phase(uvm_phase phase);
    36              1                          1         write_monitor.mon_ap.connect(write_port);
    37              1                          1         write_monitor.mon_ap.connect(write_cov.analysis_export);
    38                                                   if (cfg.is_active) begin
    39              1                          1         driver.seq_item_port.connect(sequencer.seq_item_export);

  File ../tb/Env/AXI4_agent.sv
    1                                                class AXI4_agent extends uvm_agent;
    2               1                    ***0***       `uvm_component_utils(AXI4_agent)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                  // Declaring agent components
    4                                                  AXI4_read_agent read_agent;
    5                                                  AXI4_write_agent write_agent;
    6                                                  // Analysis ports to forward transactions from monitors
    7                                                  uvm_analysis_port #(AXI4_seq_item) write_port, read_port;
    8                                                
    9                                                  function new(string name, uvm_component parent);
    10              1                          1         super.new(name, parent);
    11                                                   // Creating analysis ports
    12              1                          1         write_port = new("write_port", this);
    13              1                          1         read_port = new("read_port", this);
    14                                                 endfunction
    15                                               
    16                                                 function void build_phase(uvm_phase phase);
    17              1                          1         super.build_phase(phase);
    18                                               
    19                                                  // Retrieve Configuration
    20              1                          1         read_agent = AXI4_read_agent::type_id::create("read_agent", this);
    21              1                          1         write_agent = AXI4_write_agent::type_id::create("write_agent", this);
    22                                                 endfunction : build_phase
    23                                               
    24                                               
    25                                                 function void connect_phase(uvm_phase phase);
    26              1                          1         write_agent.write_port.connect(write_port);
    27              1                          1         read_agent.read_port.connect(read_port);

  File ../tb/Env/../Tests/virtual_seqr.sv
    1                                                // Virtual p_sequencer
    2                                                class AXI4_virtual_sequencer extends uvm_sequencer;
    3               1                    ***0***       `uvm_component_utils(AXI4_virtual_sequencer)
    3               2                    ***0***     
    3               3                    ***0***     
    4                                                  AXI4_sequencer write_seqr,
    5                                                              read_seqr;
    6                                                
    7                                                  function new(string name = "AXI4_virtual_sequencer", uvm_component parent = null);
    8               1                          1         super.new(name, parent);

  File ../tb/Env/../Tests/Virtual_seq.sv
    1                                                // Virtual sequence
    2                                                class virtual_seq extends uvm_sequence #(AXI4_seq_item);
    3                                                  AXI4_seq read_seq,
    4                                                          write_seq;
    5                                                  AXI4_sequencer write_seqr,
    6                                                                  read_seqr;
    7               1                    ***0***       `uvm_object_utils(virtual_seq)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8               1                          1       `uvm_declare_p_sequencer(AXI4_virtual_sequencer)
    8               2                    ***0***     
    9                                                  
    10                                                 function new (string name = "virtual_seq");
    11              1                          1         super.new(name);
    12                                                 endfunction
    13                                                 
    14                                                 task body();
    15              1                          1         `uvm_info(get_type_name(), "virtual_seq: Inside Body", UVM_LOW);
    16              1                          1         write_seq = AXI4_seq::type_id::create("write_seq");
    17              1                          1         read_seq = AXI4_seq::type_id::create("read_seq");

  File ../tb/Env/../Tests/Write_Read_Seq.sv
    1                                                // Virtual sequence
    2                                                class AXI4_write_read_seq extends virtual_seq;
    3               1                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
    3               2                    ***0***     
    3               3                    ***0***     
    3               4                    ***0***     
    3               5                    ***0***     
    3               6                    ***0***     
    3               7                    ***0***     
    3               8                    ***0***     
    3               9                    ***0***     
    3              10                    ***0***     
    4                                                  
    5                                                  function new (string name = "AXI4_write_read_seq");
    6               1                    ***0***         super.new(name);
    7                                                  endfunction
    8                                                  
    9                                                  task body();
    10              1                    ***0***        super.body();
    11              1                    ***0***         write_seq.start(p_sequencer.write_seqr);
    12              1                    ***0***         read_seq.start(p_sequencer.read_seqr);

  File ../tb/Env/../Tests/Concurrent_Seq.sv
    1                                                // Virtual sequence
    2                                                class AXI4_concurrent_seq extends virtual_seq;
    3               1                          1       `uvm_object_utils(AXI4_concurrent_seq)
    3               2                    ***0***     
    3               3                    ***0***     
    3               4                    ***0***     
    3               5                    ***0***     
    3               6                          3     
    3               7                    ***0***     
    3               8                    ***0***     
    3               9                    ***0***     
    3              10                    ***0***     
    4                                                
    5                                                  function new (string name = "AXI4_concurrent_seq");
    6               1                          1         super.new(name);
    7                                                  endfunction
    8                                                  
    9                                                  task body();
    10              1                          1        super.body();
    11                                                  fork
    12              1                          1         write_seq.start(p_sequencer.write_seqr);
    13              1                          1         read_seq.start(p_sequencer.read_seqr);

  File ../tb/Env/AXI4_enviroment.sv
    1                                                class AXI4_enviroment extends uvm_env;
    2               1                    ***0***       `uvm_component_utils(AXI4_enviroment)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                
    4                                                   AXI4_agent         agent;
    5                                                   AXI4_virtual_sequencer  virt_seqr;
    6                                                   AXI4_scoreboard   scb;
    7                                                   //AXI4_coverage  cov;
    8                                                
    9                                                
    10                                                 function new(string name, uvm_component parent);
    11              1                          1         super.new(name,parent);
    12                                                 endfunction:new
    13                                               
    14                                                 //////////////////BUILD PHASE////////////////////
    15                                                 function void build_phase(uvm_phase phase);
    16              1                          1         super.build_phase(phase);
    17                                               
    18              1                          1         agent = AXI4_agent::type_id::create("agent",this);
    19                                                   //sequencer = AXI4_sequencer::type_id::create("sequencer",this);
    20              1                          1         virt_seqr    = AXI4_virtual_sequencer::type_id::create("virt_seqr",this);
    21                                                   //cov          = AXI4_coverage::type_id::create("cov",this);
    22              1                          1         scb          = AXI4_scoreboard::type_id::create("scb",this);
    23                                               
    24                                                 endfunction: build_phase
    25                                               
    26                                                 //////////////CONNECT PHASE///////////////////////
    27                                                 function void connect_phase(uvm_phase phase);
    28              1                          1         agent.write_port.connect(scb.write_ap);  // Connect agent's write port to scoreboard's write analysis port
    29              1                          1         agent.read_port.connect(scb.read_ap);    // Connect agent's read port to scoreboard's read analysis port
    30                                                   //agent.agent_item_port.connect(cov.analysis_export); // Connect agent's analysis port to coverage collector
    31              1                          1         virt_seqr.read_seqr = agent.read_agent.sequencer; // Connect the virtual sequencer to the agent's sequencer
    32              1                          1         virt_seqr.write_seqr = agent.write_agent.sequencer; // Connect the virtual sequencer to the agent's sequencer

  File ../tb/Env/../Tests/AXI4_test.sv
    1                                                import AXI4_pkg::*;
    2                                                class AXI4_test extends uvm_test;
    3               1                    ***0***     	`uvm_component_utils(AXI4_test)
    3               2                    ***0***     
    3               3                    ***0***     
    4               1                          1     	int write_num=20000,
    5               1                          1     		read_num=10000;
    6                                                
    7                                                	AXI4_enviroment env;
    8                                                	// AXI4_base_seq base_seq;
    9                                                	virtual_seq vseq;
    10                                               
    11                                               	AXI4_cfg	write_cfg,read_cfg;
    12                                               
    13                                               	function new(string name = "AXI4_test", uvm_component parent);
    14              1                          1     		super.new(name, parent);
    15                                               	endfunction: new
    16                                               
    17                                               	function void build_phase(uvm_phase phase);
    18              1                          1     		super.build_phase(phase);
    19                                               		// base_seq = AXI4_base_seq::type_id::create("base_seq", this);
    20              1                          1     		write_cfg = AXI4_cfg::type_id::create("write_cfg", this);
    21              1                          1     		read_cfg = AXI4_cfg::type_id::create("read_cfg", this);
    22              1                          1     		vseq = virtual_seq::type_id::create("vseq", this);
    23              1                          1     		env  = AXI4_enviroment::type_id::create("env", this);
    24                                               
    25                                               		/////////////////////////////////////
    26                                               
    27              1                          1     		write_cfg.inst_num=write_num;
    28              1                          1     		read_cfg.inst_num=read_num;
    29              1                          1     		uvm_config_db#(AXI4_cfg)::set(this, "*.write_agent*", "AXI4_cfg", write_cfg);
    30              1                          1     		uvm_config_db#(AXI4_cfg)::set(this, "*.read_agent*", "AXI4_cfg", read_cfg);
    31                                               		/////////////////////////////////////
    32                                               	endfunction: build_phase
    33                                               
    34                                               
    35                                               	  task run_phase (uvm_phase phase);
    36              1                          1     		super.run_phase(phase);
    37                                               		
    38                                               		
    39              1                          1     		phase.raise_objection(this);
    40              1                          1     			vseq.start(env.virt_seqr);
    41              1                          1     		phase.drop_objection(this);

  File ../tb/Env/../Tests/Write_Read_Test.sv
    1                                                class AXI4_write_read_test extends AXI4_test;
    2                                                
    3               1                    ***0***     	`uvm_component_utils(AXI4_write_read_test)
    3               2                    ***0***     
    3               3                    ***0***     
    4                                                
    5                                                	function new(string name = "AXI4_write_read_test", uvm_component parent);
    6               1                    ***0***     		super.new(name, parent);
    7                                                	endfunction: new
    8                                                
    9                                                	function void build_phase(uvm_phase phase);
    10                                               
    11              1                    ***0***     		virtual_seq::type_id::set_type_override(AXI4_write_read_seq::get_type());
    12                                               
    13              1                    ***0***     		super.build_phase(phase);

  File ../tb/Env/../Tests/Concurrent_Test.sv
    1                                                class AXI4_concurrent_test extends AXI4_test;
    2                                                
    3               1                    ***0***     	`uvm_component_utils(AXI4_concurrent_test)
    3               2                    ***0***     
    3               3                          1     
    4                                                
    5                                                	function new(string name = "AXI4_concurrent_test", uvm_component parent);
    6               1                          1     		super.new(name, parent);
    7                                                	endfunction: new
    8                                                
    9                                                	function void build_phase(uvm_phase phase);
    10                                               
    11              1                          1     		virtual_seq::type_id::set_type_override(AXI4_concurrent_seq::get_type());
    12              1                          1             write_num = 30000;
    13              1                          1             read_num = 30000;
    14                                               
    15              1                          1     		super.build_phase(phase);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /AXI4_pkg/AXI4_read_cov/AXI4_read_CovGrp        100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rdata_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin MAXPOS                                        334          1          -    Covered              
        bin ZERO                                        17039          1          -    Covered              
        bin special1_b                                    277          1          -    Covered              
        bin special2_b                                    305          1          -    Covered              
        bin rest[0]                                      3629          1          -    Covered              
        bin rest[1]                                      1989          1          -    Covered              
        bin rest[2]                                      2150          1          -    Covered              
        bin rest[3]                                      1829          1          -    Covered              
    Coverpoint raddr_cp                               100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:1023]                                  427          1          -    Covered              
        bin auto[1024:2047]                               411          1          -    Covered              
        bin auto[2048:3071]                               436          1          -    Covered              
        bin auto[3072:4095]                               381          1          -    Covered              
        bin auto[4096:5119]                               428          1          -    Covered              
        bin auto[5120:6143]                               393          1          -    Covered              
        bin auto[6144:7167]                               422          1          -    Covered              
        bin auto[7168:8191]                               409          1          -    Covered              
        bin auto[8192:9215]                               422          1          -    Covered              
        bin auto[9216:10239]                              409          1          -    Covered              
        bin auto[10240:11263]                             411          1          -    Covered              
        bin auto[11264:12287]                             453          1          -    Covered              
        bin auto[12288:13311]                             464          1          -    Covered              
        bin auto[13312:14335]                             440          1          -    Covered              
        bin auto[14336:15359]                             452          1          -    Covered              
        bin auto[15360:16383]                             412          1          -    Covered              
        bin auto[16384:17407]                             392          1          -    Covered              
        bin auto[17408:18431]                             391          1          -    Covered              
        bin auto[18432:19455]                             423          1          -    Covered              
        bin auto[19456:20479]                             411          1          -    Covered              
        bin auto[20480:21503]                             441          1          -    Covered              
        bin auto[21504:22527]                             416          1          -    Covered              
        bin auto[22528:23551]                             424          1          -    Covered              
        bin auto[23552:24575]                             382          1          -    Covered              
        bin auto[24576:25599]                             431          1          -    Covered              
        bin auto[25600:26623]                             427          1          -    Covered              
        bin auto[26624:27647]                             423          1          -    Covered              
        bin auto[27648:28671]                             367          1          -    Covered              
        bin auto[28672:29695]                             427          1          -    Covered              
        bin auto[29696:30719]                             405          1          -    Covered              
        bin auto[30720:31743]                             411          1          -    Covered              
        bin auto[31744:32767]                             422          1          -    Covered              
        bin auto[32768:33791]                             452          1          -    Covered              
        bin auto[33792:34815]                             409          1          -    Covered              
        bin auto[34816:35839]                             406          1          -    Covered              
        bin auto[35840:36863]                             425          1          -    Covered              
        bin auto[36864:37887]                             444          1          -    Covered              
        bin auto[37888:38911]                             430          1          -    Covered              
        bin auto[38912:39935]                             432          1          -    Covered              
        bin auto[39936:40959]                             424          1          -    Covered              
        bin auto[40960:41983]                             434          1          -    Covered              
        bin auto[41984:43007]                             419          1          -    Covered              
        bin auto[43008:44031]                             473          1          -    Covered              
        bin auto[44032:45055]                             402          1          -    Covered              
        bin auto[45056:46079]                             434          1          -    Covered              
        bin auto[46080:47103]                             412          1          -    Covered              
        bin auto[47104:48127]                             435          1          -    Covered              
        bin auto[48128:49151]                             426          1          -    Covered              
        bin auto[49152:50175]                             399          1          -    Covered              
        bin auto[50176:51199]                             409          1          -    Covered              
        bin auto[51200:52223]                             455          1          -    Covered              
        bin auto[52224:53247]                             413          1          -    Covered              
        bin auto[53248:54271]                             451          1          -    Covered              
        bin auto[54272:55295]                             429          1          -    Covered              
        bin auto[55296:56319]                             419          1          -    Covered              
        bin auto[56320:57343]                             452          1          -    Covered              
        bin auto[57344:58367]                             450          1          -    Covered              
        bin auto[58368:59391]                             435          1          -    Covered              
        bin auto[59392:60415]                             402          1          -    Covered              
        bin auto[60416:61439]                             417          1          -    Covered              
        bin auto[61440:62463]                             396          1          -    Covered              
        bin auto[62464:63487]                             414          1          -    Covered              
        bin auto[63488:64511]                             405          1          -    Covered              
        bin auto[64512:65535]                             404          1          -    Covered              
 TYPE /AXI4_pkg/AXI4_write_cov/AXI4_write_CovGrp      100.00%        100          -    Covered              
    covered/total bins:                                    77         77          -                      
    missing/total bins:                                     0         77          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wdata_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin MAXPOS                                        798          1          -    Covered              
        bin ZERO                                          775          1          -    Covered              
        bin special1_b                                    748          1          -    Covered              
        bin special2_b                                    768          1          -    Covered              
        bin rest[0]                                      2586          1          -    Covered              
        bin rest[1]                                      3353          1          -    Covered              
        bin rest[2]                                      3355          1          -    Covered              
        bin rest[3]                                      2627          1          -    Covered              
    Coverpoint wstrb_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        bin ALL_ONES                                     6787          1          -    Covered              
        bin ALL_ZEROS                                     458          1          -    Covered              
        bin one_zero                                     1772          1          -    Covered              
        bin two_zeros                                    2645          1          -    Covered              
        bin three_zeros                                  1832          1          -    Covered              
    Coverpoint waddr_cp                               100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:1023]                                  218          1          -    Covered              
        bin auto[1024:2047]                               190          1          -    Covered              
        bin auto[2048:3071]                               209          1          -    Covered              
        bin auto[3072:4095]                               199          1          -    Covered              
        bin auto[4096:5119]                               228          1          -    Covered              
        bin auto[5120:6143]                               209          1          -    Covered              
        bin auto[6144:7167]                               203          1          -    Covered              
        bin auto[7168:8191]                               205          1          -    Covered              
        bin auto[8192:9215]                               198          1          -    Covered              
        bin auto[9216:10239]                              242          1          -    Covered              
        bin auto[10240:11263]                             221          1          -    Covered              
        bin auto[11264:12287]                             211          1          -    Covered              
        bin auto[12288:13311]                             203          1          -    Covered              
        bin auto[13312:14335]                             216          1          -    Covered              
        bin auto[14336:15359]                             204          1          -    Covered              
        bin auto[15360:16383]                             217          1          -    Covered              
        bin auto[16384:17407]                             203          1          -    Covered              
        bin auto[17408:18431]                             216          1          -    Covered              
        bin auto[18432:19455]                             239          1          -    Covered              
        bin auto[19456:20479]                             191          1          -    Covered              
        bin auto[20480:21503]                             209          1          -    Covered              
        bin auto[21504:22527]                             199          1          -    Covered              
        bin auto[22528:23551]                             217          1          -    Covered              
        bin auto[23552:24575]                             215          1          -    Covered              
        bin auto[24576:25599]                             209          1          -    Covered              
        bin auto[25600:26623]                             214          1          -    Covered              
        bin auto[26624:27647]                             230          1          -    Covered              
        bin auto[27648:28671]                             205          1          -    Covered              
        bin auto[28672:29695]                             211          1          -    Covered              
        bin auto[29696:30719]                             212          1          -    Covered              
        bin auto[30720:31743]                             232          1          -    Covered              
        bin auto[31744:32767]                             190          1          -    Covered              
        bin auto[32768:33791]                             205          1          -    Covered              
        bin auto[33792:34815]                             214          1          -    Covered              
        bin auto[34816:35839]                             217          1          -    Covered              
        bin auto[35840:36863]                             206          1          -    Covered              
        bin auto[36864:37887]                             193          1          -    Covered              
        bin auto[37888:38911]                             198          1          -    Covered              
        bin auto[38912:39935]                             229          1          -    Covered              
        bin auto[39936:40959]                             224          1          -    Covered              
        bin auto[40960:41983]                             215          1          -    Covered              
        bin auto[41984:43007]                             194          1          -    Covered              
        bin auto[43008:44031]                             188          1          -    Covered              
        bin auto[44032:45055]                             206          1          -    Covered              
        bin auto[45056:46079]                             221          1          -    Covered              
        bin auto[46080:47103]                             205          1          -    Covered              
        bin auto[47104:48127]                             186          1          -    Covered              
        bin auto[48128:49151]                             217          1          -    Covered              
        bin auto[49152:50175]                             203          1          -    Covered              
        bin auto[50176:51199]                             196          1          -    Covered              
        bin auto[51200:52223]                             230          1          -    Covered              
        bin auto[52224:53247]                             244          1          -    Covered              
        bin auto[53248:54271]                             190          1          -    Covered              
        bin auto[54272:55295]                             213          1          -    Covered              
        bin auto[55296:56319]                             221          1          -    Covered              
        bin auto[56320:57343]                             229          1          -    Covered              
        bin auto[57344:58367]                             201          1          -    Covered              
        bin auto[58368:59391]                             215          1          -    Covered              
        bin auto[59392:60415]                             223          1          -    Covered              
        bin auto[60416:61439]                             210          1          -    Covered              
        bin auto[61440:62463]                             195          1          -    Covered              
        bin auto[62464:63487]                             226          1          -    Covered              
        bin auto[63488:64511]                             207          1          -    Covered              
        bin auto[64512:65535]                             208          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/tb/DUT/assertions_inst/stable_awaddr_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(31)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/awvalid_cover    AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(38)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/stable_wdata_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(45)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/wvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(52)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/bvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(59)
                                                                              13494 Covered   
/tb/DUT/assertions_inst/stable_araddr_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(66)
                                                                              26970 Covered   
/tb/DUT/assertions_inst/arvalid_cover    AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(73)
                                                                              26970 Covered   
/tb/DUT/assertions_inst/stable_rdata_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(80)
                                                                              26314 Covered   
/tb/DUT/assertions_inst/rvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(87)
                                                                              26969 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 9

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/tb/DUT/assertions_inst/stable_awaddr_assertion
                     ../tb/Env/AXI4_Assertions.sv(30)
                                                        0          1
/tb/DUT/assertions_inst/awvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(37)
                                                        0          1
/tb/DUT/assertions_inst/stable_wdata_assertion
                     ../tb/Env/AXI4_Assertions.sv(44)
                                                        0          1
/tb/DUT/assertions_inst/wvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(51)
                                                        0          1
/tb/DUT/assertions_inst/bvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(58)
                                                        0          1
/tb/DUT/assertions_inst/stable_araddr_assertion
                     ../tb/Env/AXI4_Assertions.sv(65)
                                                        0          1
/tb/DUT/assertions_inst/arvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(72)
                                                        0          1
/tb/DUT/assertions_inst/stable_rdata_assertion
                     ../tb/Env/AXI4_Assertions.sv(79)
                                                      655          1
/tb/DUT/assertions_inst/rvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(86)
                                                        0          1
/AXI4_pkg/AXI4_seq/body/#ublk#214590327#29/immed__31
                     ../tb/Env/../Tests/AXI4_seq.sv(31)
                                                        0          1

Total Coverage By Instance (filtered view): 68.89%

