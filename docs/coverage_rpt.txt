Coverage Report by instance with details

=================================================================================
=== Instance: /tb/AXI4_intf
=== Design Unit: work.AXI4_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        244       213        31    87.29%

================================Toggle Details================================

Toggle Coverage for instance /tb/AXI4_intf --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                               rst           1           0       50.00 
                               s_axil_araddr[15-2]           1           1      100.00 
                                s_axil_araddr[1-0]           0           0        0.00 
                                s_axil_arprot[2-0]           0           0        0.00 
                                    s_axil_arready           1           1      100.00 
                                    s_axil_arvalid           1           1      100.00 
                               s_axil_awaddr[15-2]           1           1      100.00 
                                s_axil_awaddr[1-0]           0           0        0.00 
                                s_axil_awprot[2-0]           0           0        0.00 
                                    s_axil_awready           1           1      100.00 
                                    s_axil_awvalid           1           1      100.00 
                                     s_axil_bready           0           1       50.00 
                                 s_axil_bresp[1-0]           0           0        0.00 
                                     s_axil_bvalid           1           1      100.00 
                                s_axil_rdata[31-0]           1           1      100.00 
                                     s_axil_rready           0           1       50.00 
                                 s_axil_rresp[1-0]           0           0        0.00 
                                     s_axil_rvalid           1           1      100.00 
                                s_axil_wdata[31-0]           1           1      100.00 
                                     s_axil_wready           1           1      100.00 
                                 s_axil_wstrb[3-0]           1           1      100.00 
                                     s_axil_wvalid           1           1      100.00 

Total Node Count     =        122 
Toggled Node Count   =        105 
Untoggled Node Count =         17 

Toggle Coverage      =      87.29% (213 of 244 bins)

=================================================================================
=== Instance: /tb/DUT/assertions_inst
=== Design Unit: work.AXI4_Assertions
=================================================================================

Assertion Coverage:
    Assertions                       9         9         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/tb/DUT/assertions_inst/stable_awaddr_assertion
                     ../tb/Env/AXI4_Assertions.sv(30)
                                                        0          1
/tb/DUT/assertions_inst/awvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(37)
                                                        0          1
/tb/DUT/assertions_inst/stable_wdata_assertion
                     ../tb/Env/AXI4_Assertions.sv(44)
                                                        0          1
/tb/DUT/assertions_inst/wvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(51)
                                                        0          1
/tb/DUT/assertions_inst/bvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(58)
                                                        0          1
/tb/DUT/assertions_inst/stable_araddr_assertion
                     ../tb/Env/AXI4_Assertions.sv(65)
                                                        0          1
/tb/DUT/assertions_inst/arvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(72)
                                                        0          1
/tb/DUT/assertions_inst/stable_rdata_assertion
                     ../tb/Env/AXI4_Assertions.sv(79)
                                                        0          1
/tb/DUT/assertions_inst/rvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(86)
                                                        0          1

Directive Coverage:
    Directives                       9         9         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/tb/DUT/assertions_inst/stable_awaddr_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(31)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/awvalid_cover    AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(38)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/stable_wdata_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(45)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/wvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(52)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/bvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(59)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/stable_araddr_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(66)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/arvalid_cover    AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(73)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/stable_rdata_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(80)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/rvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(87)
                                                                              14998 Covered   
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        244       213        31    87.29%

================================Toggle Details================================

Toggle Coverage for instance /tb/DUT/assertions_inst --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                               rst           1           0       50.00 
                                s_axil_araddr[0-1]           0           0        0.00 
                               s_axil_araddr[2-15]           1           1      100.00 
                                s_axil_arprot[0-2]           0           0        0.00 
                                    s_axil_arready           1           1      100.00 
                                    s_axil_arvalid           1           1      100.00 
                                s_axil_awaddr[0-1]           0           0        0.00 
                               s_axil_awaddr[2-15]           1           1      100.00 
                                s_axil_awprot[0-2]           0           0        0.00 
                                    s_axil_awready           1           1      100.00 
                                    s_axil_awvalid           1           1      100.00 
                                     s_axil_bready           0           1       50.00 
                                 s_axil_bresp[0-1]           0           0        0.00 
                                     s_axil_bvalid           1           1      100.00 
                                s_axil_rdata[0-31]           1           1      100.00 
                                     s_axil_rready           0           1       50.00 
                                 s_axil_rresp[0-1]           0           0        0.00 
                                     s_axil_rvalid           1           1      100.00 
                                s_axil_wdata[0-31]           1           1      100.00 
                                     s_axil_wready           1           1      100.00 
                                 s_axil_wstrb[0-3]           1           1      100.00 
                                     s_axil_wvalid           1           1      100.00 

Total Node Count     =        122 
Toggled Node Count   =        105 
Untoggled Node Count =         17 

Toggle Coverage      =      87.29% (213 of 244 bins)

=================================================================================
=== Instance: /tb/DUT
=== Design Unit: work.axil_ram
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        14        13         1    92.85%

================================Branch Details================================

Branch Coverage for instance /tb/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../rtl/axil_ram.v
------------------------------------IF Branch------------------------------------
    120                                    60001     Count coming in to IF
    120             1                      15000         if (s_axil_awvalid && s_axil_wvalid && (!s_axil_bvalid || s_axil_bready) && (!s_axil_awready && !s_axil_wready)) begin
                                           45001     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    135                                   179996     Count coming in to IF
    135             1                      44196             if (mem_wr_en && s_axil_wstrb[i]) begin
                                          135800     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    140                                    44999     Count coming in to IF
    140             1                          1         if (rst) begin
                                           44998     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    153                                    60000     Count coming in to IF
    153             1                      15000         if (s_axil_arvalid && (!s_axil_rvalid || s_axil_rready || (PIPELINE_OUTPUT && !s_axil_rvalid_pipe_reg)) && (!s_axil_arready)) begin
                                           45000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    165                                    44999     Count coming in to IF
    165             1                      14999         if (mem_rd_en) begin
                                           30000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    169                                    44999     Count coming in to IF
    169             1                      44999         if (!s_axil_rvalid_pipe_reg || s_axil_rready) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    174                                    44999     Count coming in to IF
    174             1                          1         if (rst) begin
                                           44998     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      14         6         8    42.85%

================================Condition Details================================

Condition Coverage for instance /tb/DUT --

  File ../rtl/axil_ram.v
----------------Focused Condition View-------------------
Line       120 Item    1  (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && (s_axil_awready ~| s_axil_wready))
Condition totals: 2 of 6 input terms covered = 33.33%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  s_axil_awvalid         Y
   s_axil_wvalid         Y
   s_axil_bvalid         N  '_1' not hit             Hit '_1'
   s_axil_bready         N  No hits                  Hit '_0' and '_1'
  s_axil_awready         N  '_1' not hit             Hit '_1'
   s_axil_wready         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  s_axil_awvalid_0      -                             
  Row   2:          1  s_axil_awvalid_1      ((s_axil_awready ~| s_axil_wready) && (~s_axil_bvalid || s_axil_bready) && s_axil_wvalid)
  Row   3:          1  s_axil_wvalid_0       s_axil_awvalid                
  Row   4:          1  s_axil_wvalid_1       ((s_axil_awready ~| s_axil_wready) && (~s_axil_bvalid || s_axil_bready) && s_axil_awvalid)
  Row   5:          1  s_axil_bvalid_0       ((s_axil_awready ~| s_axil_wready) && (s_axil_awvalid && s_axil_wvalid))
  Row   6:    ***0***  s_axil_bvalid_1       ((s_axil_awvalid && s_axil_wvalid) && ~s_axil_bready)
  Row   7:    ***0***  s_axil_bready_0       ((s_axil_awvalid && s_axil_wvalid) && s_axil_bvalid)
  Row   8:    ***0***  s_axil_bready_1       ((s_axil_awready ~| s_axil_wready) && (s_axil_awvalid && s_axil_wvalid) && s_axil_bvalid)
  Row   9:          1  s_axil_awready_0      (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && ~s_axil_wready)
 Row   10:    ***0***  s_axil_awready_1      (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && ~s_axil_wready)
 Row   11:          1  s_axil_wready_0       (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && ~s_axil_awready)
 Row   12:    ***0***  s_axil_wready_1       (((s_axil_awvalid && s_axil_wvalid) && (~s_axil_bvalid || s_axil_bready)) && ~s_axil_awready)

----------------Focused Condition View-------------------
Line       135 Item    1  (mem_wr_en && s_axil_wstrb[i])
Condition totals: 2 of 2 input terms covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
        mem_wr_en         Y
  s_axil_wstrb[i]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  mem_wr_en_0           -                             
  Row   2:          1  mem_wr_en_1           s_axil_wstrb[i]               
  Row   3:          1  s_axil_wstrb[i]_0     mem_wr_en                     
  Row   4:          1  s_axil_wstrb[i]_1     mem_wr_en                     

----------------Focused Condition View-------------------
Line       153 Item    1  ((s_axil_arvalid && (~s_axil_rvalid || s_axil_rready)) && ~s_axil_arready)
Condition totals: 2 of 4 input terms covered = 50.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  s_axil_arvalid         Y
   s_axil_rvalid         N  '_1' not hit             Hit '_1'
   s_axil_rready         N  No hits                  Hit '_0' and '_1'
  s_axil_arready         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  s_axil_arvalid_0      -                             
  Row   2:          1  s_axil_arvalid_1      (~s_axil_arready && (~s_axil_rvalid || s_axil_rready))
  Row   3:          1  s_axil_rvalid_0       (~s_axil_arready && s_axil_arvalid)
  Row   4:    ***0***  s_axil_rvalid_1       (s_axil_arvalid && ~s_axil_rready)
  Row   5:    ***0***  s_axil_rready_0       (s_axil_arvalid && s_axil_rvalid)
  Row   6:    ***0***  s_axil_rready_1       (~s_axil_arready && s_axil_arvalid && s_axil_rvalid)
  Row   7:          1  s_axil_arready_0      (s_axil_arvalid && (~s_axil_rvalid || s_axil_rready))
  Row   8:          1  s_axil_arready_1      (s_axil_arvalid && (~s_axil_rvalid || s_axil_rready))

----------------Focused Condition View-------------------
Line       169 Item    1  (~s_axil_rvalid_pipe_reg || s_axil_rready)
Condition totals: 0 of 2 input terms covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  s_axil_rvalid_pipe_reg         N  '_1' not hit             Hit '_1'
           s_axil_rready         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  s_axil_rvalid_pipe_reg_0  -                             
  Row   2:    ***0***  s_axil_rvalid_pipe_reg_1  ~s_axil_rready                
  Row   3:    ***0***  s_axil_rready_0           s_axil_rvalid_pipe_reg        
  Row   4:          1  s_axil_rready_1           s_axil_rvalid_pipe_reg        


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      4         0         4     0.00%

================================Expression Details================================

Expression Coverage for instance /tb/DUT --

  File ../rtl/axil_ram.v
----------------Focused Expression View-----------------
Line       118 Item    1  (s_axil_bvalid_reg && ~s_axil_bready)
Expression totals: 0 of 2 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  s_axil_bvalid_reg         N  '_1' not hit             Hit '_1'
      s_axil_bready         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  s_axil_bvalid_reg_0   -                             
  Row   2:    ***0***  s_axil_bvalid_reg_1   ~s_axil_bready                
  Row   3:    ***0***  s_axil_bready_0       s_axil_bvalid_reg             
  Row   4:          1  s_axil_bready_1       s_axil_bvalid_reg             

----------------Focused Expression View-----------------
Line       151 Item    1  (s_axil_rvalid_reg && ~s_axil_rready)
Expression totals: 0 of 2 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  s_axil_rvalid_reg         N  '_1' not hit             Hit '_1'
      s_axil_rready         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  s_axil_rvalid_reg_0   -                             
  Row   2:    ***0***  s_axil_rvalid_reg_1   ~s_axil_rready                
  Row   3:    ***0***  s_axil_rready_0       s_axil_rvalid_reg             
  Row   4:          1  s_axil_rready_1       s_axil_rvalid_reg             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      50        50         0   100.00%

================================Statement Details================================

Statement Coverage for instance /tb/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../rtl/axil_ram.v
    34                                               module axil_ram #
    35                                               (
    36                                                   // Width of data bus in bits
    37                                                   parameter DATA_WIDTH = 32,
    38                                                   // Width of address bus in bits
    39                                                   parameter ADDR_WIDTH = 16,
    40                                                   // Width of wstrb (width of data bus in words)
    41                                                   parameter STRB_WIDTH = (DATA_WIDTH/8),
    42                                                   // Extra pipeline register on output
    43                                                   parameter PIPELINE_OUTPUT = 0
    44                                               )
    45                                               (
    46                                                   input  wire                   clk,
    47                                                   input  wire                   rst,
    48                                               
    49                                                   input  wire [ADDR_WIDTH-1:0]  s_axil_awaddr,
    50                                                   input  wire [2:0]             s_axil_awprot,
    51                                                   input  wire                   s_axil_awvalid,
    52                                                   output wire                   s_axil_awready,
    53                                                   input  wire [DATA_WIDTH-1:0]  s_axil_wdata,
    54                                                   input  wire [STRB_WIDTH-1:0]  s_axil_wstrb,
    55                                                   input  wire                   s_axil_wvalid,
    56                                                   output wire                   s_axil_wready,
    57                                                   output wire [1:0]             s_axil_bresp,
    58                                                   output wire                   s_axil_bvalid,
    59                                                   input  wire                   s_axil_bready,
    60                                                   input  wire [ADDR_WIDTH-1:0]  s_axil_araddr,
    61                                                   input  wire [2:0]             s_axil_arprot,
    62                                                   input  wire                   s_axil_arvalid,
    63                                                   output wire                   s_axil_arready,
    64                                                   output wire [DATA_WIDTH-1:0]  s_axil_rdata,
    65                                                   output wire [1:0]             s_axil_rresp,
    66                                                   output wire                   s_axil_rvalid,
    67                                                   input  wire                   s_axil_rready
    68                                               );
    69                                               
    70                                               parameter VALID_ADDR_WIDTH = ADDR_WIDTH - $clog2(STRB_WIDTH);
    71                                               parameter WORD_WIDTH = STRB_WIDTH;
    72                                               parameter WORD_SIZE = DATA_WIDTH/WORD_WIDTH;
    73                                               
    74                                               reg mem_wr_en;
    75                                               reg mem_rd_en;
    76                                               
    77              1                          1     reg s_axil_awready_reg = 1'b0, s_axil_awready_next;
    78              1                          1     reg s_axil_wready_reg = 1'b0, s_axil_wready_next;
    79              1                          1     reg s_axil_bvalid_reg = 1'b0, s_axil_bvalid_next;
    80              1                          1     reg s_axil_arready_reg = 1'b0, s_axil_arready_next;
    81              1                          1     reg [DATA_WIDTH-1:0] s_axil_rdata_reg = {DATA_WIDTH{1'b0}}, s_axil_rdata_next;
    82              1                          1     reg s_axil_rvalid_reg = 1'b0, s_axil_rvalid_next;
    83              1                          1     reg [DATA_WIDTH-1:0] s_axil_rdata_pipe_reg = {DATA_WIDTH{1'b0}};
    84              1                          1     reg s_axil_rvalid_pipe_reg = 1'b0;
    85                                               
    86                                               // (* RAM_STYLE="BLOCK" *)
    87                                               reg [DATA_WIDTH-1:0] mem[(2**VALID_ADDR_WIDTH)-1:0];
    88                                               
    89              1                      15000     wire [VALID_ADDR_WIDTH-1:0] s_axil_awaddr_valid = s_axil_awaddr >> (ADDR_WIDTH - VALID_ADDR_WIDTH);
    90              1                      15002     wire [VALID_ADDR_WIDTH-1:0] s_axil_araddr_valid = s_axil_araddr >> (ADDR_WIDTH - VALID_ADDR_WIDTH);
    91                                               
    92                                               assign s_axil_awready = s_axil_awready_reg;
    93                                               assign s_axil_wready = s_axil_wready_reg;
    94                                               assign s_axil_bresp = 2'b00;
    95                                               assign s_axil_bvalid = s_axil_bvalid_reg;
    96                                               assign s_axil_arready = s_axil_arready_reg;
    97                                               assign s_axil_rdata = PIPELINE_OUTPUT ? s_axil_rdata_pipe_reg : s_axil_rdata_reg;
    98                                               assign s_axil_rresp = 2'b00;
    99                                               assign s_axil_rvalid = PIPELINE_OUTPUT ? s_axil_rvalid_pipe_reg : s_axil_rvalid_reg;
    100                                              
    101                                              integer i, j;
    102                                              
    103                                              initial begin
    104                                                  // two nested loops for smaller number of iterations per loop
    105                                                  // workaround for synthesizer complaints about large loop counts
    106             1                          1         for (i = 0; i < 2**VALID_ADDR_WIDTH; i = i + 2**(VALID_ADDR_WIDTH/2)) begin
    106             2                        128     
    107             1                        128             for (j = i; j < i + 2**(VALID_ADDR_WIDTH/2); j = j + 1) begin
    107             2                      16384     
    108             1                      16384                 mem[j] = 0;
    109                                                      end
    110                                                  end
    111                                              end
    112                                              
    113             1                      60001     always @* begin
    114             1                      60001         mem_wr_en = 1'b0;
    115                                              
    116             1                      60001         s_axil_awready_next = 1'b0;
    117             1                      60001         s_axil_wready_next = 1'b0;
    118             1                      60001         s_axil_bvalid_next = s_axil_bvalid_reg && !s_axil_bready;
    119                                              
    120                                                  if (s_axil_awvalid && s_axil_wvalid && (!s_axil_bvalid || s_axil_bready) && (!s_axil_awready && !s_axil_wready)) begin
    121             1                      15000             s_axil_awready_next = 1'b1;
    122             1                      15000             s_axil_wready_next = 1'b1;
    123             1                      15000             s_axil_bvalid_next = 1'b1;
    124                                              
    125             1                      15000             mem_wr_en = 1'b1;
    126                                                  end
    127                                              end
    128                                              
    129             1                      44999     always @(posedge clk) begin
    130             1                      44999         s_axil_awready_reg <= s_axil_awready_next;
    131             1                      44999         s_axil_wready_reg <= s_axil_wready_next;
    132             1                      44999         s_axil_bvalid_reg <= s_axil_bvalid_next;
    133                                              
    134             1                      44999         for (i = 0; i < WORD_WIDTH; i = i + 1) begin
    134             2                     179996     
    135                                                      if (mem_wr_en && s_axil_wstrb[i]) begin
    136             1                      44196                 mem[s_axil_awaddr_valid][WORD_SIZE*i +: WORD_SIZE] <= s_axil_wdata[WORD_SIZE*i +: WORD_SIZE];
    137                                                      end
    138                                                  end
    139                                              
    140                                                  if (rst) begin
    141             1                          1             s_axil_awready_reg <= 1'b0;
    142             1                          1             s_axil_wready_reg <= 1'b0;
    143             1                          1             s_axil_bvalid_reg <= 1'b0;
    144                                                  end
    145                                              end
    146                                              
    147             1                      60000     always @* begin
    148             1                      60000         mem_rd_en = 1'b0;
    149                                              
    150             1                      60000         s_axil_arready_next = 1'b0;
    151             1                      60000         s_axil_rvalid_next = s_axil_rvalid_reg && !(s_axil_rready || (PIPELINE_OUTPUT && !s_axil_rvalid_pipe_reg));
    152                                              
    153                                                  if (s_axil_arvalid && (!s_axil_rvalid || s_axil_rready || (PIPELINE_OUTPUT && !s_axil_rvalid_pipe_reg)) && (!s_axil_arready)) begin
    154             1                      15000             s_axil_arready_next = 1'b1;
    155             1                      15000             s_axil_rvalid_next = 1'b1;
    156                                              
    157             1                      15000             mem_rd_en = 1'b1;
    158                                                  end
    159                                              end
    160                                              
    161             1                      44999     always @(posedge clk) begin
    162             1                      44999         s_axil_arready_reg <= s_axil_arready_next;
    163             1                      44999         s_axil_rvalid_reg <= s_axil_rvalid_next;
    164                                              
    165                                                  if (mem_rd_en) begin
    166             1                      14999             s_axil_rdata_reg <= mem[s_axil_araddr_valid];
    167                                                  end
    168                                              
    169                                                  if (!s_axil_rvalid_pipe_reg || s_axil_rready) begin
    170             1                      44999             s_axil_rdata_pipe_reg <= s_axil_rdata_reg;
    171             1                      44999             s_axil_rvalid_pipe_reg <= s_axil_rvalid_reg;
    172                                                  end
    173                                              
    174                                                  if (rst) begin
    175             1                          1             s_axil_arready_reg <= 1'b0;
    176             1                          1             s_axil_rvalid_reg <= 1'b0;
    177             1                          1             s_axil_rvalid_pipe_reg <= 1'b0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        646       425       221    65.78%

================================Toggle Details================================

Toggle Coverage for instance /tb/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                          i[31-15]           0           0        0.00 
                                             i[14]           1           0       50.00 
                                           i[13-3]           0           0        0.00 
                                              i[2]           0           1       50.00 
                                            i[1-0]           0           0        0.00 
                                           j[31-0]           0           0        0.00 
                                         mem_rd_en           1           1      100.00 
                                         mem_wr_en           1           1      100.00 
                                               rst           1           0       50.00 
                                s_axil_araddr[0-1]           0           0        0.00 
                               s_axil_araddr[2-15]           1           1      100.00 
                         s_axil_araddr_valid[0-13]           1           1      100.00 
                                s_axil_arprot[0-2]           0           0        0.00 
                                    s_axil_arready           1           1      100.00 
                               s_axil_arready_next           1           1      100.00 
                                s_axil_arready_reg           1           1      100.00 
                                    s_axil_arvalid           1           1      100.00 
                                s_axil_awaddr[0-1]           0           0        0.00 
                               s_axil_awaddr[2-15]           1           1      100.00 
                         s_axil_awaddr_valid[0-13]           1           1      100.00 
                                s_axil_awprot[0-2]           0           0        0.00 
                                    s_axil_awready           1           1      100.00 
                               s_axil_awready_next           1           1      100.00 
                                s_axil_awready_reg           1           1      100.00 
                                    s_axil_awvalid           1           1      100.00 
                                     s_axil_bready           0           1       50.00 
                                 s_axil_bresp[0-1]           0           0        0.00 
                                     s_axil_bvalid           1           1      100.00 
                                s_axil_bvalid_next           1           1      100.00 
                                 s_axil_bvalid_reg           1           1      100.00 
                                s_axil_rdata[0-31]           1           1      100.00 
                           s_axil_rdata_next[31-0]           0           0        0.00 
                       s_axil_rdata_pipe_reg[31-0]           1           1      100.00 
                            s_axil_rdata_reg[31-0]           1           1      100.00 
                                     s_axil_rready           0           1       50.00 
                                 s_axil_rresp[0-1]           0           0        0.00 
                                     s_axil_rvalid           1           1      100.00 
                                s_axil_rvalid_next           1           1      100.00 
                            s_axil_rvalid_pipe_reg           1           1      100.00 
                                 s_axil_rvalid_reg           1           1      100.00 
                                s_axil_wdata[0-31]           1           1      100.00 
                                     s_axil_wready           1           1      100.00 
                                s_axil_wready_next           1           1      100.00 
                                 s_axil_wready_reg           1           1      100.00 
                                 s_axil_wstrb[0-3]           1           1      100.00 
                                     s_axil_wvalid           1           1      100.00 

Total Node Count     =        323 
Toggled Node Count   =        210 
Untoggled Node Count =        113 

Toggle Coverage      =      65.78% (425 of 646 bins)

=================================================================================
=== Instance: /tb
=== Design Unit: work.tb
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /tb --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../tb/Env/tb.sv
    6                                                module tb;
    7                                                
    8                                                  parameter CLK_PERIOD = 10ns;  
    9                                                  parameter DATA_WIDTH = 32;
    10                                                 parameter ADDR_WIDTH = 16;
    11                                                 parameter STRB_WIDTH = (DATA_WIDTH/8);
    12                                                 parameter PIPELINE_OUTPUT = 0;
    13                                               
    14                                                 bit clk;
    15                                               
    16                                                 // Clock generation
    17              1                      90000       always #(CLK_PERIOD/2) clk=~clk;
    17              2                      89999     
    18                                               
    19                                                 AXI4_if#(
    20                                                   .DATA_WIDTH(DATA_WIDTH),
    21                                                   .ADDR_WIDTH(ADDR_WIDTH),
    22                                                   .STRB_WIDTH(STRB_WIDTH),
    23                                                   .PIPELINE_OUTPUT(PIPELINE_OUTPUT)
    24                                                 ) AXI4_intf (clk);
    25                                               
    26                                               
    27                                                 axil_ram#(
    28                                                   .DATA_WIDTH(DATA_WIDTH),
    29                                                   .ADDR_WIDTH(ADDR_WIDTH),
    30                                                   .STRB_WIDTH(STRB_WIDTH),
    31                                                   .PIPELINE_OUTPUT(PIPELINE_OUTPUT)
    32                                                 ) DUT (
    33                                                   .clk(clk),
    34                                                   .rst(AXI4_intf.rst),
    35                                                   .s_axil_awaddr(AXI4_intf.s_axil_awaddr),
    36                                                   .s_axil_awprot(AXI4_intf.s_axil_awprot),
    37                                                   .s_axil_awvalid(AXI4_intf.s_axil_awvalid),
    38                                                   .s_axil_awready(AXI4_intf.s_axil_awready),
    39                                                   .s_axil_wdata(AXI4_intf.s_axil_wdata),
    40                                                   .s_axil_wstrb(AXI4_intf.s_axil_wstrb),
    41                                                   .s_axil_wvalid(AXI4_intf.s_axil_wvalid),
    42                                                   .s_axil_wready(AXI4_intf.s_axil_wready),
    43                                                   .s_axil_bresp(AXI4_intf.s_axil_bresp),
    44                                                   .s_axil_bvalid(AXI4_intf.s_axil_bvalid),
    45                                                   .s_axil_bready(AXI4_intf.s_axil_bready),
    46                                                   .s_axil_araddr(AXI4_intf.s_axil_araddr),
    47                                                   .s_axil_arprot(AXI4_intf.s_axil_arprot),
    48                                                   .s_axil_arvalid(AXI4_intf.s_axil_arvalid),
    49                                                   .s_axil_arready(AXI4_intf.s_axil_arready),
    50                                                   .s_axil_rdata(AXI4_intf.s_axil_rdata),
    51                                                   .s_axil_rresp(AXI4_intf.s_axil_rresp),
    52                                                   .s_axil_rvalid(AXI4_intf.s_axil_rvalid),
    53                                                   .s_axil_rready(AXI4_intf.s_axil_rready)
    54                                                   );
    55                                               
    56                                                   bind axil_ram AXI4_Assertions assertions_inst(.clk(clk),
    57                                                                                                 .rst(AXI4_intf.rst),
    58                                                                                                 .s_axil_awaddr(AXI4_intf.s_axil_awaddr),
    59                                                                                                 .s_axil_awprot(AXI4_intf.s_axil_awprot),
    60                                                                                                 .s_axil_awvalid(AXI4_intf.s_axil_awvalid),
    61                                                                                                 .s_axil_awready(AXI4_intf.s_axil_awready),
    62                                                                                                 .s_axil_wdata(AXI4_intf.s_axil_wdata),
    63                                                                                                 .s_axil_wstrb(AXI4_intf.s_axil_wstrb),
    64                                                                                                 .s_axil_wvalid(AXI4_intf.s_axil_wvalid),
    65                                                                                                 .s_axil_wready(AXI4_intf.s_axil_wready),
    66                                                                                                 .s_axil_bresp(AXI4_intf.s_axil_bresp),
    67                                                                                                 .s_axil_bvalid(AXI4_intf.s_axil_bvalid),
    68                                                                                                 .s_axil_bready(AXI4_intf.s_axil_bready),
    69                                                                                                 .s_axil_araddr(AXI4_intf.s_axil_araddr),
    70                                                                                                 .s_axil_arprot(AXI4_intf.s_axil_arprot),
    71                                                                                                 .s_axil_arvalid(AXI4_intf.s_axil_arvalid),
    72                                                                                                 .s_axil_arready(AXI4_intf.s_axil_arready),
    73                                                                                                 .s_axil_rdata(AXI4_intf.s_axil_rdata),
    74                                                                                                 .s_axil_rresp(AXI4_intf.s_axil_rresp),
    75                                                                                                 .s_axil_rvalid(AXI4_intf.s_axil_rvalid),
    76                                                                                                 .s_axil_rready(AXI4_intf.s_axil_rready));
    77                                               
    78                                                  initial begin
    79              1                          1         uvm_config_db#(virtual AXI4_if)::set(null,"*","vif",AXI4_intf);
    80              1                          1         run_test("");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /tb --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /AXI4_pkg
=== Design Unit: work.AXI4_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/AXI4_pkg/AXI4_ideal_seq/body/#ublk#214590327#12/immed__14
                     ../tb/Env/../Tests/AXI4_ideal_seq.sv(14)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                       589       103       486    17.48%

================================Branch Details================================

Branch Coverage for instance /AXI4_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../tb/Env/AXI4_seq_item.sv
------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              1                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              2                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              3                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
    46              4                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              5                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              6                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    48                                   ***0***     Count coming in to CASE
    48              2                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
    48              3                    ***0***     
    48              5                    ***0***     
    48              9                    ***0***     
    48             10                    ***0***     
    48             11                    ***0***     
    48             12                    ***0***     
    48             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              4                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              6                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              7                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              8                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48             14                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48             15                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    50                                   ***0***     Count coming in to CASE
    50              2                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
    50              3                    ***0***     
    50              5                    ***0***     
    50              9                    ***0***     
    50             10                    ***0***     
    50             11                    ***0***     
    50             12                    ***0***     
    50             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              4                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              6                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              7                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              8                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50             14                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50             15                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    51                                   ***0***     Count coming in to CASE
    51              2                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
    51              3                    ***0***     
    51              5                    ***0***     
    51              9                    ***0***     
    51             10                    ***0***     
    51             11                    ***0***     
    51             12                    ***0***     
    51             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51              4                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51              6                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51              7                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51              8                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51             14                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51             15                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    52                                   ***0***     Count coming in to CASE
    52              2                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
    52              3                    ***0***     
    52              5                    ***0***     
    52              9                    ***0***     
    52             10                    ***0***     
    52             11                    ***0***     
    52             12                    ***0***     
    52             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              4                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              6                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              7                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              8                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52             14                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52             15                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    54                                   ***0***     Count coming in to CASE
    54              2                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
    54              3                    ***0***     
    54              5                    ***0***     
    54              9                    ***0***     
    54             10                    ***0***     
    54             11                    ***0***     
    54             12                    ***0***     
    54             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              4                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              6                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              7                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54              8                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54             14                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                   ***0***     Count coming in to IF
    54             15                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    55                                   ***0***     Count coming in to CASE
    55              2                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
    55              3                    ***0***     
    55              5                    ***0***     
    55              9                    ***0***     
    55             10                    ***0***     
    55             11                    ***0***     
    55             12                    ***0***     
    55             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              4                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              6                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              7                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              8                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55             14                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55             15                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    56                                   ***0***     Count coming in to CASE
    56              2                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
    56              3                    ***0***     
    56              5                    ***0***     
    56              9                    ***0***     
    56             10                    ***0***     
    56             11                    ***0***     
    56             12                    ***0***     
    56             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              4                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              6                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              7                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              8                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56             14                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56             15                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    58                                   ***0***     Count coming in to CASE
    58              2                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
    58              3                    ***0***     
    58              5                    ***0***     
    58              9                    ***0***     
    58             10                    ***0***     
    58             11                    ***0***     
    58             12                    ***0***     
    58             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              4                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              6                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              7                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              8                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58             14                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58             15                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    59                                   ***0***     Count coming in to CASE
    59              2                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
    59              3                    ***0***     
    59              5                    ***0***     
    59              9                    ***0***     
    59             10                    ***0***     
    59             11                    ***0***     
    59             12                    ***0***     
    59             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              4                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              6                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              7                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              8                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59             14                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59             15                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    61                                   ***0***     Count coming in to CASE
    61              2                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
    61              3                    ***0***     
    61              5                    ***0***     
    61              9                    ***0***     
    61             10                    ***0***     
    61             11                    ***0***     
    61             12                    ***0***     
    61             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                   ***0***     Count coming in to IF
    61              4                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                   ***0***     Count coming in to IF
    61              6                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                   ***0***     Count coming in to IF
    61              7                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                   ***0***     Count coming in to IF
    61              8                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                   ***0***     Count coming in to IF
    61             14                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                   ***0***     Count coming in to IF
    61             15                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    62                                   ***0***     Count coming in to CASE
    62              2                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
    62              3                    ***0***     
    62              5                    ***0***     
    62              9                    ***0***     
    62             10                    ***0***     
    62             11                    ***0***     
    62             12                    ***0***     
    62             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              4                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              6                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              7                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62              8                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62             14                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    62                                   ***0***     Count coming in to IF
    62             15                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    63                                   ***0***     Count coming in to CASE
    63              2                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
    63              3                    ***0***     
    63              5                    ***0***     
    63              9                    ***0***     
    63             10                    ***0***     
    63             11                    ***0***     
    63             12                    ***0***     
    63             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              4                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              6                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              7                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              8                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63             14                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63             15                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    65                                   ***0***     Count coming in to CASE
    65              2                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
    65              3                    ***0***     
    65              5                    ***0***     
    65              9                    ***0***     
    65             10                    ***0***     
    65             11                    ***0***     
    65             12                    ***0***     
    65             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              4                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              6                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              7                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              8                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65             14                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65             15                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    66                                   ***0***     Count coming in to CASE
    66              2                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
    66              3                    ***0***     
    66              5                    ***0***     
    66              9                    ***0***     
    66             10                    ***0***     
    66             11                    ***0***     
    66             12                    ***0***     
    66             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              4                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              6                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              7                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              8                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66             14                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66             15                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    67                                   ***0***     Count coming in to CASE
    67              2                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
    67              3                    ***0***     
    67              5                    ***0***     
    67              9                    ***0***     
    67             10                    ***0***     
    67             11                    ***0***     
    67             12                    ***0***     
    67             13                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 9 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              4                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              6                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              7                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              8                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67             14                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67             15                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/AXI4_cfg.sv
------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               1                    ***0***        `uvm_object_utils(AXI4_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               2                    ***0***        `uvm_object_utils(AXI4_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               3                    ***0***        `uvm_object_utils(AXI4_cfg)
    2               4                    ***0***        `uvm_object_utils(AXI4_cfg)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               5                    ***0***        `uvm_object_utils(AXI4_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               6                    ***0***        `uvm_object_utils(AXI4_cfg)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/../Tests/AXI4_seq.sv
------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               1                    ***0***         `uvm_object_utils(AXI4_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               2                    ***0***         `uvm_object_utils(AXI4_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               3                    ***0***         `uvm_object_utils(AXI4_seq)    
    2               4                    ***0***         `uvm_object_utils(AXI4_seq)    
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               5                    ***0***         `uvm_object_utils(AXI4_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               6                    ***0***         `uvm_object_utils(AXI4_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    14                                         2     Count coming in to IF
    14              1                    ***0***             `uvm_info("Seq", "Starting pre body ", UVM_MEDIUM)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    17                                         2     Count coming in to IF
    17              1                    ***0***             if(!uvm_config_db#(AXI4_cfg)::get(m_sequencer, "", "AXI4_cfg", cfg))
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    18                                   ***0***     Count coming in to IF
    18              1                    ***0***                 `uvm_fatal("NOCFG", "No configuration object found");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    21                                         2     Count coming in to IF
    21              1                    ***0***             `uvm_info("Seq", "Finished pre body ", UVM_MEDIUM)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***             `uvm_info("Seq", "Starting sequence", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    37                                   ***0***     Count coming in to IF
    37              1                    ***0***             `uvm_info("Seq", "Finishing sequence", UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/../Tests/AXI4_ideal_seq.sv
------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               1                    ***0***         `uvm_object_utils(AXI4_ideal_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               2                    ***0***         `uvm_object_utils(AXI4_ideal_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               3                    ***0***         `uvm_object_utils(AXI4_ideal_seq)    
    2               4                    ***0***         `uvm_object_utils(AXI4_ideal_seq)    
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               5                    ***0***         `uvm_object_utils(AXI4_ideal_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    2                                    ***0***     Count coming in to IF
    2               6                    ***0***         `uvm_object_utils(AXI4_ideal_seq)    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          2     Count coming in to IF
    9               1                    ***0***             `uvm_info("Seq", "Starting sequence", UVM_MEDIUM)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    30                                         2     Count coming in to IF
    30              1                    ***0***             `uvm_info("Seq", "Finishing sequence", UVM_MEDIUM)
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_scoreboard.sv
------------------------------------IF Branch------------------------------------
    26                                     15001     Count coming in to IF
    26              1                          2             if(item.rst) begin
    30              1                      14999             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    27                                         2     Count coming in to IF
    27              1                          2                 `uvm_info("AXI4_Scoreboard", "Resetting scoreboard", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    33                                     14999     Count coming in to IF
    33              1                    ***0***                 `uvm_info("AXI4_Scoreboard", $sformatf("Write transaction at address %0h with data %0h", item.s_axil_awaddr>>2, item.s_axil_wdata), UVM_HIGH)
                                           14999     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    40                                     29998     Count coming in to IF
    40              1                    ***0***             `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h with data %0h", item.s_axil_araddr>>2, item.s_axil_rdata), UVM_HIGH)
                                           29998     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    45                                         1     Count coming in to IF
    45              1                          1             `uvm_info("AXI4_Scoreboard", "axil_ram Scoreboard is running", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    50                                     44997     Count coming in to IF
    50              1                      29998                 if(Read_queue.size() > 0) begin
                                           14999     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                     29998     Count coming in to IF
    52              1                      14999                     if(!Read_item.s_axil_rready)
    54              1                      14999                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                     44997     Count coming in to IF
    60              1                      14999                 if(Write_queue.size() > 0) begin
                                           29998     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                     14999     Count coming in to IF
    69              1                      14999             if(item.s_axil_bresp==2'b00) begin // checking if the write response is OK
    77              1                    ***0***             else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    71                                     59996     Count coming in to IF
    71              1                      44196                     if(item.s_axil_wstrb[i]) begin // checking if the write strobe is valid
                                           15800     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                     14999     Count coming in to IF
    75              1                    ***0***                 `uvm_info("AXI4_Scoreboard", $sformatf("Write transaction at address %0h with data %0h", item.s_axil_awaddr>>2, item.s_axil_wdata), UVM_HIGH)
                                           14999     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    78                                   ***0***     Count coming in to IF
    78              1                    ***0***                 `uvm_info("AXI4_Scoreboard", "Write transaction because response wasn't okay", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    83                                     14999     Count coming in to IF
    83              1                       5097                 if(ram.exists(item.s_axil_araddr>>2)) begin // checking if the address exists in the ram
    86              1                       9902                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                      9902     Count coming in to IF
    87              1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h but address doesn't exist in ram", item.s_axil_araddr>>2), UVM_HIGH)
                                            9902     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    93                                     14999     Count coming in to IF
    93              1                      14999             if(item.s_axil_rresp==2'b00) begin // checking if the read response is OK
    105             1                    ***0***             else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    94                                     14999     Count coming in to IF
    94              1                      14999                 if(item.s_axil_rdata == golden) begin // getting the data from the ram
    99              1                    ***0***                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    95                                     14999     Count coming in to IF
    95              1                    ***0***                     `uvm_info("AXI4_Scoreboard", "Read transaction is correct", UVM_MEDIUM)
                                           14999     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    96                                     14999     Count coming in to IF
    96              1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h with data %0h", item.s_axil_araddr>>2, golden), UVM_HIGH)
                                           14999     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    100                                  ***0***     Count coming in to IF
    100             1                    ***0***                     `uvm_error("AXI4_Scoreboard", "Read transaction is incorrect")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    101                                  ***0***     Count coming in to IF
    101             1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Expected: %0h, Actual: %0h at address: %0h", golden, item.s_axil_rdata, item.s_axil_araddr>>2), UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    106                                  ***0***     Count coming in to IF
    106             1                    ***0***                 `uvm_info("AXI4_Scoreboard", "Read transaction because response wasn't okay", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    111                                        1     Count coming in to IF
    111             1                          1             `uvm_info("report_phase","*************AXI4_Scoreboard**************************",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    112                                        1     Count coming in to IF
    112             1                          1             `uvm_info("report_phase", $sformatf("total number of transactions: %0d",read_trans+write_trans),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    113                                        1     Count coming in to IF
    113             1                          1             `uvm_info("report_phase", $sformatf("total number of read transactions: %0d",read_trans),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    114                                        1     Count coming in to IF
    114             1                          1             `uvm_info("report_phase", $sformatf("total number of write transactions: %0d",write_trans),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    116                                        1     Count coming in to IF
    116             1                          1             `uvm_info("report_phase", $sformatf("total succesful transactions: %0d",correct),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    117                                        1     Count coming in to IF
    117             1                          1             `uvm_info("report_phase", $sformatf("total failled transactions: %0d",incorrect),UVM_LOW) 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    118                                        1     Count coming in to IF
    118             1                          1             `uvm_info("report_phase","******************************************************",UVM_LOW) 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_write_driver.sv
------------------------------------IF Branch------------------------------------
    16                                         1     Count coming in to IF
    16              1                    ***0***             `uvm_info("AXI4 Write Driver", "Building driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    17                                         1     Count coming in to IF
    17              1                    ***0***             if(!(uvm_config_db#(virtual AXI4_if)::get(null, "", "vif", vif)))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    18                                   ***0***     Count coming in to IF
    18              1                    ***0***                 `uvm_fatal("NOVIF", "No virtual interface found");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    19                                         1     Count coming in to IF
    19              1                    ***0***             `uvm_info("AXI4 Write Driver", "Finished building driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***             `uvm_info("AXI4 Write Driver", "Running driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    32                                         1     Count coming in to IF
    32              1                    ***0***             `uvm_info("Driver", "Resetting driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    43                                         1     Count coming in to IF
    43              1                    ***0***             `uvm_info("Driver", "Finished resetting driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    60                                     44998     Count coming in to IF
    60              1                      14999                if(vif.s_axil_bvalid && vif.s_axil_bready) begin
                                           29999     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    73                                     15000     Count coming in to IF
    73              1                      15000             if(!write_address_done) begin // Waits till response is received before the next write operation
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    82                                     15000     Count coming in to IF
    82              1                    ***0***                 `uvm_info("AXI4 Write Driver", "Writing address ", UVM_MEDIUM)
                                           15000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    85                                     15000     Count coming in to IF
    85              1                      15000                 if(address_item.valid_write_address) begin // If the address is valid for write operation
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    93                                     14999     Count coming in to IF
    93              1                    ***0***                     `uvm_info("AXI4 Write Driver", "Finished writing address", UVM_MEDIUM)
                                           14999     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    103                                    15000     Count coming in to IF
    103             1                      15000             if(!write_data_done) begin // Waits till response is received before the next write operation
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    111                                    15000     Count coming in to IF
    111             1                    ***0***                 `uvm_info("AXI4 Write Driver", "Writing data", UVM_MEDIUM)
                                           15000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    115                                    15000     Count coming in to IF
    115             1                      15000                 if(data_item.valid_write_data) begin    // If the data is valid for write operation
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    122                                    14999     Count coming in to IF
    122             1                    ***0***                     `uvm_info("AXI4 Write Driver", "Finished writing data", UVM_MEDIUM)
                                           14999     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    131                                        1     Count coming in to IF
    131             1                          1             `uvm_info("report_phase","*************AXI4_Write_Driver**************************",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    132                                        1     Count coming in to IF
    132             1                          1             `uvm_info("report_phase", $sformatf("total number of Write transactions count : %0d", address_written),UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    133                                        1     Count coming in to IF
    133             1                          1             `uvm_info("report_phase","******************************************************",UVM_LOW) 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_read_driver.sv
------------------------------------IF Branch------------------------------------
    17                                         1     Count coming in to IF
    17              1                    ***0***             `uvm_info("AXI4 Read Driver", "Building driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    18                                         1     Count coming in to IF
    18              1                    ***0***             if(!(uvm_config_db#(virtual AXI4_if)::get(null, "", "vif", vif)))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    19                                   ***0***     Count coming in to IF
    19              1                    ***0***                 `uvm_fatal("NOVIF", "No virtual interface found");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    20                                         1     Count coming in to IF
    20              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished building driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***             `uvm_info("AXI4 Read Driver", "Running driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                     44998     Count coming in to IF
    39              1                      14999                         if(vif.s_axil_rvalid ) begin
                                           29999     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    40                                     14999     Count coming in to IF
    40              1                      14999                             if(vif.s_axil_rready) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                         1     Count coming in to IF
    52              1                    ***0***             `uvm_info("AXI4 Read Driver", "Resetting driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                         1     Count coming in to IF
    62              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished resetting driver", UVM_MEDIUM)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    71                                     15000     Count coming in to IF
    71              1                      15000             if(!read_address_done) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    75                                     15000     Count coming in to IF
    75              1                    ***0***                 `uvm_info("AXI4 Read Driver", $sformatf("Read item: %s", read_item.convert2string()), UVM_MEDIUM)
                                           15000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    84                                     15000     Count coming in to IF
    84              1                    ***0***         `uvm_info("AXI4 Read Driver", "Reading address", UVM_MEDIUM)
                                           15000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    87                                     15000     Count coming in to IF
    87              1                      15000         if(read_item.valid_read_address) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    94                                     14999     Count coming in to IF
    94              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished reading address", UVM_MEDIUM)
                                           14999     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    103                                        1     Count coming in to IF
    103             1                          1         `uvm_info("AXI4 Read Driver", "*************AXI4_Read_Driver**************************", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    104                                        1     Count coming in to IF
    104             1                          1         `uvm_info("AXI4 Read Driver", $sformatf("Total read addresses processed: %0d", address_count), UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    105                                        1     Count coming in to IF
    105             1                          1         `uvm_info("AXI4 Read Driver", "******************************************************", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_write_monitor.sv
------------------------------------IF Branch------------------------------------
    15                                         1     Count coming in to IF
    15              1                    ***0***         if (!uvm_config_db#(virtual AXI4_if)::get(this, "", "vif", vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    16                                   ***0***     Count coming in to IF
    16              1                    ***0***           `uvm_fatal("NOVIF", "Virtual interface not set for AXI4_monitor");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    34                                     45001     Count coming in to IF
    34              1                          2           if (vif.rst) begin
    37              1                      44999           else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    38                                     44999     Count coming in to IF
    38              1                      14999             if(vif.s_axil_awvalid && vif.s_axil_awready)
                                           30000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                     45001     Count coming in to IF
    52              1                          2           if (vif.rst) begin
    55              1                      44999           else  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                     44999     Count coming in to IF
    57              1                      14999             if(vif.s_axil_wvalid && vif.s_axil_wready )
                                           30000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    71                                     45001     Count coming in to IF
    71              1                          2           if (vif.rst) begin
    76              1                      44999           else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    77                                     44999     Count coming in to IF
    77              1                      14999             if(vif.s_axil_bvalid && vif.s_axil_bready)
                                           30000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                     14999     Count coming in to IF
    80              1                      14999                 if(addr_queue.size() > 0 && data_queue.size() > 0)
    92              1                    ***0***                 else
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    94                                   ***0***     Count coming in to IF
    94              1                    ***0***                   `uvm_error("AXI4_write_monitor", "Write response received without corresponding address and data");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/AXI4_read_monitor.sv
------------------------------------IF Branch------------------------------------
    14                                         1     Count coming in to IF
    14              1                    ***0***         if (!(uvm_config_db#(virtual AXI4_if)::get(this, "", "vif", vif)))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    15                                   ***0***     Count coming in to IF
    15              1                    ***0***           `uvm_fatal("NOVIF", "Virtual interface not set for AXI4_monitor");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    22                                     45001     Count coming in to IF
    22              1                          2           if (vif.rst) begin
    26              1                      44999           else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    38                                     44999     Count coming in to IF
    38              1                      44999           if(vif.rst == 1'b0) begin
    49              1                    ***0***           else addr_queue.delete();
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                     44999     Count coming in to IF
    39              1                      14999             if(vif.s_axil_arvalid && vif.s_axil_arready)
                                           30000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                     44999     Count coming in to IF
    56              1                      44999           if(vif.rst == 1'b0) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    57                                     44999     Count coming in to IF
    57              1                      14999             if(vif.s_axil_rvalid && vif.s_axil_rready)
                                           30000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                     14999     Count coming in to IF
    58              1                      14999                 if(addr_queue.size() > 0) begin
    68              1                    ***0***                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69              1                    ***0***                     `uvm_error("AXI4_read_monitor", "read response received without corresponding address ");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/AXI4_read_agent.sv
------------------------------------IF Branch------------------------------------
    22                                         1     Count coming in to IF
    22              1                    ***0***         if (!uvm_config_db#(AXI4_cfg)::get(this, "", "AXI4_cfg", cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***           `uvm_fatal("CONFIG", "Agent configuration not set!")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                          1         if (cfg.is_active) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                          1         if (cfg.is_active) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/AXI4_write_agent.sv
------------------------------------IF Branch------------------------------------
    22                                         1     Count coming in to IF
    22              1                    ***0***         if (!uvm_config_db#(AXI4_cfg)::get(this, "", "AXI4_cfg", cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***           `uvm_fatal("CONFIG", "Agent configuration not set!")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                          1         if (cfg.is_active) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                          1         if (cfg.is_active) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/../Tests/Virtual_seq.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***       `uvm_object_utils(virtual_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***       `uvm_object_utils(virtual_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***       `uvm_object_utils(virtual_seq)
    7               4                    ***0***       `uvm_object_utils(virtual_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***       `uvm_object_utils(virtual_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***       `uvm_object_utils(virtual_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               1                    ***0***       `uvm_declare_p_sequencer(AXI4_virtual_sequencer)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               2                    ***0***       `uvm_declare_p_sequencer(AXI4_virtual_sequencer)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    15                                         1     Count coming in to IF
    15              1                          1         `uvm_info(get_type_name(), "virtual_seq: Inside Body", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


  File ../tb/Env/../Tests/Write_Read_Seq.sv
------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               1                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               2                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               3                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
    3               4                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               5                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               6                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


  File ../tb/Env/../Tests/Concurrent_Seq.sv
------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               1                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               2                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               3                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
    3               4                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               5                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    3                                    ***0***     Count coming in to IF
    3               6                    ***0***       `uvm_object_utils(AXI4_concurrent_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      94        11        83    11.70%

================================Condition Details================================

Condition Coverage for instance /AXI4_pkg --

  File ../tb/Env/AXI4_seq_item.sv
----------------Focused Condition View-------------------
Line       46 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       46 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       48 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       48 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       48 Item    3  (this.rst !== local_data__.rst)
Condition totals: 0 of 1 input term covered = 0.00%

                       Input Term   Covered  Reason for no coverage   Hint
                      -----------  --------  -----------------------  --------------
  (this.rst !== local_data__.rst)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                         Non-masking condition(s)      
 ---------  ---------  --------------------               -------------------------     
  Row   1:    ***0***  (this.rst !== local_data__.rst)_0  -                             
  Row   2:    ***0***  (this.rst !== local_data__.rst)_1  -                             

----------------Focused Condition View-------------------
Line       48 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       50 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       50 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       50 Item    3  (this.valid_write_address !== local_data__.valid_write_address)
Condition totals: 0 of 1 input term covered = 0.00%

                                                       Input Term   Covered  Reason for no coverage   Hint
                                                      -----------  --------  -----------------------  --------------
  (this.valid_write_address !== local_data__.valid_write_address)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                         Non-masking condition(s)      
 ---------  ---------  --------------------                                               -------------------------     
  Row   1:    ***0***  (this.valid_write_address !== local_data__.valid_write_address)_0  -                             
  Row   2:    ***0***  (this.valid_write_address !== local_data__.valid_write_address)_1  -                             

----------------Focused Condition View-------------------
Line       50 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       51 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       51 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       51 Item    3  (this.s_axil_awaddr !== local_data__.s_axil_awaddr)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_awaddr !== local_data__.s_axil_awaddr)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_awaddr !== local_data__.s_axil_awaddr)_0  -                             
  Row   2:    ***0***  (this.s_axil_awaddr !== local_data__.s_axil_awaddr)_1  -                             

----------------Focused Condition View-------------------
Line       51 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    3  (this.s_axil_awprot !== local_data__.s_axil_awprot)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_awprot !== local_data__.s_axil_awprot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_awprot !== local_data__.s_axil_awprot)_0  -                             
  Row   2:    ***0***  (this.s_axil_awprot !== local_data__.s_axil_awprot)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       54 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       54 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       54 Item    3  (this.valid_write_data !== local_data__.valid_write_data)
Condition totals: 0 of 1 input term covered = 0.00%

                                                 Input Term   Covered  Reason for no coverage   Hint
                                                -----------  --------  -----------------------  --------------
  (this.valid_write_data !== local_data__.valid_write_data)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                   Non-masking condition(s)      
 ---------  ---------  --------------------                                         -------------------------     
  Row   1:    ***0***  (this.valid_write_data !== local_data__.valid_write_data)_0  -                             
  Row   2:    ***0***  (this.valid_write_data !== local_data__.valid_write_data)_1  -                             

----------------Focused Condition View-------------------
Line       54 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    3  (this.s_axil_wdata !== local_data__.s_axil_wdata)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_wdata !== local_data__.s_axil_wdata)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_wdata !== local_data__.s_axil_wdata)_0  -                             
  Row   2:    ***0***  (this.s_axil_wdata !== local_data__.s_axil_wdata)_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       56 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       56 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       56 Item    3  (this.s_axil_wstrb !== local_data__.s_axil_wstrb)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_wstrb !== local_data__.s_axil_wstrb)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_wstrb !== local_data__.s_axil_wstrb)_0  -                             
  Row   2:    ***0***  (this.s_axil_wstrb !== local_data__.s_axil_wstrb)_1  -                             

----------------Focused Condition View-------------------
Line       56 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    3  (this.s_axil_bresp !== local_data__.s_axil_bresp)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_bresp !== local_data__.s_axil_bresp)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_bresp !== local_data__.s_axil_bresp)_0  -                             
  Row   2:    ***0***  (this.s_axil_bresp !== local_data__.s_axil_bresp)_1  -                             

----------------Focused Condition View-------------------
Line       58 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       59 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       59 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       59 Item    3  (this.s_axil_bready !== local_data__.s_axil_bready)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_bready !== local_data__.s_axil_bready)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_bready !== local_data__.s_axil_bready)_0  -                             
  Row   2:    ***0***  (this.s_axil_bready !== local_data__.s_axil_bready)_1  -                             

----------------Focused Condition View-------------------
Line       59 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       61 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       61 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       61 Item    3  (this.valid_read_address !== local_data__.valid_read_address)
Condition totals: 0 of 1 input term covered = 0.00%

                                                     Input Term   Covered  Reason for no coverage   Hint
                                                    -----------  --------  -----------------------  --------------
  (this.valid_read_address !== local_data__.valid_read_address)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                       Non-masking condition(s)      
 ---------  ---------  --------------------                                             -------------------------     
  Row   1:    ***0***  (this.valid_read_address !== local_data__.valid_read_address)_0  -                             
  Row   2:    ***0***  (this.valid_read_address !== local_data__.valid_read_address)_1  -                             

----------------Focused Condition View-------------------
Line       61 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    3  (this.s_axil_araddr !== local_data__.s_axil_araddr)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_araddr !== local_data__.s_axil_araddr)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_araddr !== local_data__.s_axil_araddr)_0  -                             
  Row   2:    ***0***  (this.s_axil_araddr !== local_data__.s_axil_araddr)_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    3  (this.s_axil_arprot !== local_data__.s_axil_arprot)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_arprot !== local_data__.s_axil_arprot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_arprot !== local_data__.s_axil_arprot)_0  -                             
  Row   2:    ***0***  (this.s_axil_arprot !== local_data__.s_axil_arprot)_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       65 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       65 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       65 Item    3  (this.s_axil_rready !== local_data__.s_axil_rready)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.s_axil_rready !== local_data__.s_axil_rready)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (this.s_axil_rready !== local_data__.s_axil_rready)_0  -                             
  Row   2:    ***0***  (this.s_axil_rready !== local_data__.s_axil_rready)_1  -                             

----------------Focused Condition View-------------------
Line       65 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    3  (this.s_axil_rdata !== local_data__.s_axil_rdata)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_rdata !== local_data__.s_axil_rdata)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_rdata !== local_data__.s_axil_rdata)_0  -                             
  Row   2:    ***0***  (this.s_axil_rdata !== local_data__.s_axil_rdata)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             

----------------Focused Condition View-------------------
Line       67 Item    1  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       67 Item    2  (local_data__ == null)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (local_data__ == null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:    ***0***  (local_data__ == null)_0  -                             
  Row   2:    ***0***  (local_data__ == null)_1  -                             

----------------Focused Condition View-------------------
Line       67 Item    3  (this.s_axil_rresp !== local_data__.s_axil_rresp)
Condition totals: 0 of 1 input term covered = 0.00%

                                         Input Term   Covered  Reason for no coverage   Hint
                                        -----------  --------  -----------------------  --------------
  (this.s_axil_rresp !== local_data__.s_axil_rresp)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                           Non-masking condition(s)      
 ---------  ---------  --------------------                                 -------------------------     
  Row   1:    ***0***  (this.s_axil_rresp !== local_data__.s_axil_rresp)_0  -                             
  Row   2:    ***0***  (this.s_axil_rresp !== local_data__.s_axil_rresp)_1  -                             

----------------Focused Condition View-------------------
Line       67 Item    4  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))
Condition totals: 0 of 1 input term covered = 0.00%

                                                                                                                              Input Term   Covered  Reason for no coverage   Hint
                                                                                                                             -----------  --------  -----------------------  --------------
  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                                                                                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                      -------------------------     
  Row   1:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_0  -                             
  Row   2:    ***0***  (__m_uvm_status_container.comparer.result && (__m_uvm_status_container.comparer.show_max <= __m_uvm_status_container.comparer.result))_1  -                             


----------------Focused Condition View-------------------
Line       2 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       2 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       2 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       2 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       2 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       2 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       50 Item    1  (size(this.Read_queue) > 0)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (size(this.Read_queue) > 0)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (size(this.Read_queue) > 0)_0  -                             
  Row   2:          1  (size(this.Read_queue) > 0)_1  -                             

----------------Focused Condition View-------------------
Line       60 Item    1  (size(this.Write_queue) > 0)
Condition totals: 1 of 1 input term covered = 100.00%

                    Input Term   Covered  Reason for no coverage   Hint
                   -----------  --------  -----------------------  --------------
  (size(this.Write_queue) > 0)         Y

     Rows:       Hits  FEC Target                      Non-masking condition(s)      
 ---------  ---------  --------------------            -------------------------     
  Row   1:          1  (size(this.Write_queue) > 0)_0  -                             
  Row   2:          1  (size(this.Write_queue) > 0)_1  -                             

----------------Focused Condition View-------------------
Line       69 Item    1  (item.s_axil_bresp == 0)
Condition totals: 0 of 1 input term covered = 0.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (item.s_axil_bresp == 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:    ***0***  (item.s_axil_bresp == 0)_0  -                             
  Row   2:          1  (item.s_axil_bresp == 0)_1  -                             

----------------Focused Condition View-------------------
Line       93 Item    1  (item.s_axil_rresp == 0)
Condition totals: 0 of 1 input term covered = 0.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (item.s_axil_rresp == 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:    ***0***  (item.s_axil_rresp == 0)_0  -                             
  Row   2:          1  (item.s_axil_rresp == 0)_1  -                             

----------------Focused Condition View-------------------
Line       94 Item    1  (item.s_axil_rdata == golden)
Condition totals: 0 of 1 input term covered = 0.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (item.s_axil_rdata == golden)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:    ***0***  (item.s_axil_rdata == golden)_0  -                             
  Row   2:          1  (item.s_axil_rdata == golden)_1  -                             




----------------Focused Condition View-------------------
Line       60 Item    1  (this.vif.s_axil_bvalid && this.vif.s_axil_bready)
Condition totals: 1 of 2 input terms covered = 50.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.vif.s_axil_bvalid         Y
  this.vif.s_axil_bready         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.vif.s_axil_bvalid_0  -                             
  Row   2:          1  this.vif.s_axil_bvalid_1  this.vif.s_axil_bready        
  Row   3:    ***0***  this.vif.s_axil_bready_0  this.vif.s_axil_bvalid        
  Row   4:          1  this.vif.s_axil_bready_1  this.vif.s_axil_bvalid        



----------------Focused Condition View-------------------
Line       38 Item    1  (this.vif.s_axil_awvalid && this.vif.s_axil_awready)
Condition totals: 2 of 2 input terms covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  this.vif.s_axil_awvalid         Y
  this.vif.s_axil_awready         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  this.vif.s_axil_awvalid_0  -                             
  Row   2:          1  this.vif.s_axil_awvalid_1  this.vif.s_axil_awready       
  Row   3:          1  this.vif.s_axil_awready_0  this.vif.s_axil_awvalid       
  Row   4:          1  this.vif.s_axil_awready_1  this.vif.s_axil_awvalid       

----------------Focused Condition View-------------------
Line       57 Item    1  (this.vif.s_axil_wvalid && this.vif.s_axil_wready)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.vif.s_axil_wvalid         Y
  this.vif.s_axil_wready         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.vif.s_axil_wvalid_0  -                             
  Row   2:          1  this.vif.s_axil_wvalid_1  this.vif.s_axil_wready        
  Row   3:          1  this.vif.s_axil_wready_0  this.vif.s_axil_wvalid        
  Row   4:          1  this.vif.s_axil_wready_1  this.vif.s_axil_wvalid        

----------------Focused Condition View-------------------
Line       77 Item    1  (this.vif.s_axil_bvalid && this.vif.s_axil_bready)
Condition totals: 1 of 2 input terms covered = 50.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.vif.s_axil_bvalid         Y
  this.vif.s_axil_bready         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.vif.s_axil_bvalid_0  -                             
  Row   2:          1  this.vif.s_axil_bvalid_1  this.vif.s_axil_bready        
  Row   3:    ***0***  this.vif.s_axil_bready_0  this.vif.s_axil_bvalid        
  Row   4:          1  this.vif.s_axil_bready_1  this.vif.s_axil_bvalid        

----------------Focused Condition View-------------------
Line       80 Item    1  ((size(this.addr_queue) > 0) && (size(this.data_queue) > 0))
Condition totals: 0 of 2 input terms covered = 0.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (size(this.addr_queue) > 0)         N  '_0' not hit             Hit '_0'
  (size(this.data_queue) > 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:    ***0***  (size(this.addr_queue) > 0)_0  -                             
  Row   2:          1  (size(this.addr_queue) > 0)_1  (size(this.data_queue) > 0)   
  Row   3:    ***0***  (size(this.data_queue) > 0)_0  (size(this.addr_queue) > 0)   
  Row   4:          1  (size(this.data_queue) > 0)_1  (size(this.addr_queue) > 0)   


----------------Focused Condition View-------------------
Line       39 Item    1  (this.vif.s_axil_arvalid && this.vif.s_axil_arready)
Condition totals: 2 of 2 input terms covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  this.vif.s_axil_arvalid         Y
  this.vif.s_axil_arready         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  this.vif.s_axil_arvalid_0  -                             
  Row   2:          1  this.vif.s_axil_arvalid_1  this.vif.s_axil_arready       
  Row   3:          1  this.vif.s_axil_arready_0  this.vif.s_axil_arvalid       
  Row   4:          1  this.vif.s_axil_arready_1  this.vif.s_axil_arvalid       

----------------Focused Condition View-------------------
Line       57 Item    1  (this.vif.s_axil_rvalid && this.vif.s_axil_rready)
Condition totals: 1 of 2 input terms covered = 50.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.vif.s_axil_rvalid         Y
  this.vif.s_axil_rready         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.vif.s_axil_rvalid_0  -                             
  Row   2:          1  this.vif.s_axil_rvalid_1  this.vif.s_axil_rready        
  Row   3:    ***0***  this.vif.s_axil_rready_0  this.vif.s_axil_rvalid        
  Row   4:          1  this.vif.s_axil_rready_1  this.vif.s_axil_rvalid        

----------------Focused Condition View-------------------
Line       58 Item    1  (size(this.addr_queue) > 0)
Condition totals: 0 of 1 input term covered = 0.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (size(this.addr_queue) > 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:    ***0***  (size(this.addr_queue) > 0)_0  -                             
  Row   2:          1  (size(this.addr_queue) > 0)_1  -                             







----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       3 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       3 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


----------------Focused Condition View-------------------
Line       3 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       3 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             







Covergroup Coverage:
    Covergroups                      2        na        na   100.00%
        Coverpoints/Crosses          5        na        na        na
            Covergroup Bins        149       149         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /AXI4_pkg/AXI4_read_cov/AXI4_read_CovGrp        100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rdata_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin MAXPOS                                        148          1          -    Covered              
        bin ZERO                                        10176          1          -    Covered              
        bin special1_b                                    128          1          -    Covered              
        bin special2_b                                    151          1          -    Covered              
        bin rest[0]                                      1661          1          -    Covered              
        bin rest[1]                                      1066          1          -    Covered              
        bin rest[2]                                      1034          1          -    Covered              
        bin rest[3]                                       914          1          -    Covered              
    Coverpoint raddr_cp                               100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:1023]                                  412          1          -    Covered              
        bin auto[1024:2047]                               480          1          -    Covered              
        bin auto[2048:3071]                               500          1          -    Covered              
        bin auto[3072:4095]                               414          1          -    Covered              
        bin auto[4096:5119]                               498          1          -    Covered              
        bin auto[5120:6143]                               472          1          -    Covered              
        bin auto[6144:7167]                               482          1          -    Covered              
        bin auto[7168:8191]                               510          1          -    Covered              
        bin auto[8192:9215]                               424          1          -    Covered              
        bin auto[9216:10239]                              460          1          -    Covered              
        bin auto[10240:11263]                             462          1          -    Covered              
        bin auto[11264:12287]                             394          1          -    Covered              
        bin auto[12288:13311]                             448          1          -    Covered              
        bin auto[13312:14335]                             490          1          -    Covered              
        bin auto[14336:15359]                             444          1          -    Covered              
        bin auto[15360:16383]                             458          1          -    Covered              
        bin auto[16384:17407]                             452          1          -    Covered              
        bin auto[17408:18431]                             496          1          -    Covered              
        bin auto[18432:19455]                             426          1          -    Covered              
        bin auto[19456:20479]                             476          1          -    Covered              
        bin auto[20480:21503]                             490          1          -    Covered              
        bin auto[21504:22527]                             430          1          -    Covered              
        bin auto[22528:23551]                             450          1          -    Covered              
        bin auto[23552:24575]                             486          1          -    Covered              
        bin auto[24576:25599]                             506          1          -    Covered              
        bin auto[25600:26623]                             456          1          -    Covered              
        bin auto[26624:27647]                             486          1          -    Covered              
        bin auto[27648:28671]                             444          1          -    Covered              
        bin auto[28672:29695]                             536          1          -    Covered              
        bin auto[29696:30719]                             452          1          -    Covered              
        bin auto[30720:31743]                             446          1          -    Covered              
        bin auto[31744:32767]                             456          1          -    Covered              
        bin auto[32768:33791]                             502          1          -    Covered              
        bin auto[33792:34815]                             492          1          -    Covered              
        bin auto[34816:35839]                             478          1          -    Covered              
        bin auto[35840:36863]                             490          1          -    Covered              
        bin auto[36864:37887]                             512          1          -    Covered              
        bin auto[37888:38911]                             490          1          -    Covered              
        bin auto[38912:39935]                             426          1          -    Covered              
        bin auto[39936:40959]                             400          1          -    Covered              
        bin auto[40960:41983]                             472          1          -    Covered              
        bin auto[41984:43007]                             492          1          -    Covered              
        bin auto[43008:44031]                             442          1          -    Covered              
        bin auto[44032:45055]                             466          1          -    Covered              
        bin auto[45056:46079]                             464          1          -    Covered              
        bin auto[46080:47103]                             452          1          -    Covered              
        bin auto[47104:48127]                             452          1          -    Covered              
        bin auto[48128:49151]                             476          1          -    Covered              
        bin auto[49152:50175]                             518          1          -    Covered              
        bin auto[50176:51199]                             520          1          -    Covered              
        bin auto[51200:52223]                             466          1          -    Covered              
        bin auto[52224:53247]                             452          1          -    Covered              
        bin auto[53248:54271]                             494          1          -    Covered              
        bin auto[54272:55295]                             496          1          -    Covered              
        bin auto[55296:56319]                             506          1          -    Covered              
        bin auto[56320:57343]                             500          1          -    Covered              
        bin auto[57344:58367]                             448          1          -    Covered              
        bin auto[58368:59391]                             476          1          -    Covered              
        bin auto[59392:60415]                             494          1          -    Covered              
        bin auto[60416:61439]                             482          1          -    Covered              
        bin auto[61440:62463]                             380          1          -    Covered              
        bin auto[62464:63487]                             488          1          -    Covered              
        bin auto[63488:64511]                             448          1          -    Covered              
        bin auto[64512:65535]                             488          1          -    Covered              
 TYPE /AXI4_pkg/AXI4_write_cov/AXI4_write_CovGrp      100.00%        100          -    Covered              
    covered/total bins:                                    77         77          -                      
    missing/total bins:                                     0         77          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wdata_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin MAXPOS                                        852          1          -    Covered              
        bin ZERO                                          884          1          -    Covered              
        bin special1_b                                    814          1          -    Covered              
        bin special2_b                                    894          1          -    Covered              
        bin rest[0]                                      2938          1          -    Covered              
        bin rest[1]                                      3695          1          -    Covered              
        bin rest[2]                                      3792          1          -    Covered              
        bin rest[3]                                      2838          1          -    Covered              
    Coverpoint wstrb_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        bin ALL_ONES                                     7537          1          -    Covered              
        bin ALL_ZEROS                                     499          1          -    Covered              
        bin one_zero                                     2080          1          -    Covered              
        bin two_zeros                                    2925          1          -    Covered              
        bin three_zeros                                  1958          1          -    Covered              
    Coverpoint waddr_cp                               100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:1023]                                  270          1          -    Covered              
        bin auto[1024:2047]                               233          1          -    Covered              
        bin auto[2048:3071]                               219          1          -    Covered              
        bin auto[3072:4095]                               229          1          -    Covered              
        bin auto[4096:5119]                               239          1          -    Covered              
        bin auto[5120:6143]                               267          1          -    Covered              
        bin auto[6144:7167]                               213          1          -    Covered              
        bin auto[7168:8191]                               229          1          -    Covered              
        bin auto[8192:9215]                               249          1          -    Covered              
        bin auto[9216:10239]                              235          1          -    Covered              
        bin auto[10240:11263]                             262          1          -    Covered              
        bin auto[11264:12287]                             249          1          -    Covered              
        bin auto[12288:13311]                             235          1          -    Covered              
        bin auto[13312:14335]                             237          1          -    Covered              
        bin auto[14336:15359]                             261          1          -    Covered              
        bin auto[15360:16383]                             218          1          -    Covered              
        bin auto[16384:17407]                             230          1          -    Covered              
        bin auto[17408:18431]                             218          1          -    Covered              
        bin auto[18432:19455]                             216          1          -    Covered              
        bin auto[19456:20479]                             247          1          -    Covered              
        bin auto[20480:21503]                             260          1          -    Covered              
        bin auto[21504:22527]                             236          1          -    Covered              
        bin auto[22528:23551]                             214          1          -    Covered              
        bin auto[23552:24575]                             267          1          -    Covered              
        bin auto[24576:25599]                             231          1          -    Covered              
        bin auto[25600:26623]                             218          1          -    Covered              
        bin auto[26624:27647]                             210          1          -    Covered              
        bin auto[27648:28671]                             232          1          -    Covered              
        bin auto[28672:29695]                             225          1          -    Covered              
        bin auto[29696:30719]                             281          1          -    Covered              
        bin auto[30720:31743]                             229          1          -    Covered              
        bin auto[31744:32767]                             229          1          -    Covered              
        bin auto[32768:33791]                             248          1          -    Covered              
        bin auto[33792:34815]                             230          1          -    Covered              
        bin auto[34816:35839]                             240          1          -    Covered              
        bin auto[35840:36863]                             206          1          -    Covered              
        bin auto[36864:37887]                             231          1          -    Covered              
        bin auto[37888:38911]                             238          1          -    Covered              
        bin auto[38912:39935]                             221          1          -    Covered              
        bin auto[39936:40959]                             222          1          -    Covered              
        bin auto[40960:41983]                             243          1          -    Covered              
        bin auto[41984:43007]                             232          1          -    Covered              
        bin auto[43008:44031]                             216          1          -    Covered              
        bin auto[44032:45055]                             232          1          -    Covered              
        bin auto[45056:46079]                             223          1          -    Covered              
        bin auto[46080:47103]                             246          1          -    Covered              
        bin auto[47104:48127]                             235          1          -    Covered              
        bin auto[48128:49151]                             224          1          -    Covered              
        bin auto[49152:50175]                             235          1          -    Covered              
        bin auto[50176:51199]                             227          1          -    Covered              
        bin auto[51200:52223]                             199          1          -    Covered              
        bin auto[52224:53247]                             217          1          -    Covered              
        bin auto[53248:54271]                             246          1          -    Covered              
        bin auto[54272:55295]                             242          1          -    Covered              
        bin auto[55296:56319]                             219          1          -    Covered              
        bin auto[56320:57343]                             241          1          -    Covered              
        bin auto[57344:58367]                             234          1          -    Covered              
        bin auto[58368:59391]                             247          1          -    Covered              
        bin auto[59392:60415]                             233          1          -    Covered              
        bin auto[60416:61439]                             233          1          -    Covered              
        bin auto[61440:62463]                             244          1          -    Covered              
        bin auto[62464:63487]                             223          1          -    Covered              
        bin auto[63488:64511]                             261          1          -    Covered              
        bin auto[64512:65535]                             223          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                     702       288       414    41.02%

================================Statement Details================================

Statement Coverage for instance /AXI4_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../tb/Env/AXI4_seq_item.sv
    1                                                class AXI4_seq_item extends uvm_sequence_item;
    2                                                 
    3                                                 //---------------------------------------
    4                                                 //data and control fields
    5                                                 //---------------------------------------
    6                                                    // Width of data bus in bits
    7                                                    parameter DATA_WIDTH = 32;
    8                                                    // Width of address bus in bits
    9                                                    parameter ADDR_WIDTH = 16;
    10                                                   // Width of strb bus in bits
    11                                                   parameter STRB_WIDTH = (DATA_WIDTH/8);
    12                                               
    13                                                   rand logic                   rst;
    14                                                   rand bit                     valid_write_address; // Indicates if the address is valid
    15                                                   rand logic [ADDR_WIDTH-1:0]  s_axil_awaddr;
    16                                                   rand logic [2:0]             s_axil_awprot;
    17                                               
    18                                                   rand bit                     valid_write_data; // Indicates if the data is valid
    19                                                   rand logic [DATA_WIDTH-1:0]  s_axil_wdata;
    20                                                   rand logic [STRB_WIDTH-1:0]  s_axil_wstrb;
    21                                               
    22                                                   logic [1:0]                  s_axil_bresp;
    23                                                   rand logic                   s_axil_bready;
    24                                               
    25                                                   rand bit                     valid_read_address; // Indicates if the address is valid
    26                                                   rand logic [ADDR_WIDTH-1:0]  s_axil_araddr;
    27                                                   rand logic [2:0]             s_axil_arprot;
    28                                                  
    29                                                   rand bit                     s_axil_rready; // Indicates if the read response is ready
    30                                                   logic [DATA_WIDTH-1:0]  s_axil_rdata;
    31                                                   logic [1:0]             s_axil_rresp;
    32                                               
    33                                                   rand int r_addr_delay;
    34                                                   rand int w_addr_delay,
    35                                                             w_data_delay;
    36                                               //---------------------------------------
    37                                                 //Constructor
    38                                               //---------------------------------------
    39                                                 function new(string name = "AXI4_seq_item");
    40              1                     119999         super.new(name);
    41                                                 endfunction
    42                                                 
    43                                               //---------------------------------------
    44                                                 //Utility and Field macros
    45                                               //---------------------------------------
    46              1                    ***0***       `uvm_object_utils_begin(AXI4_seq_item)
    46              2                    ***0***     
    46              3                    ***0***     
    46              4                    ***0***     
    46              5                    ***0***     
    46              6                      45000     
    46              7                    ***0***     
    46              8                    ***0***     
    46              9                    ***0***     
    46             10                    ***0***     
    47                                               
    48              1                    ***0***       `uvm_field_int(rst, UVM_DEFAULT)
    48              2                    ***0***     
    48              3                    ***0***     
    48              4                    ***0***     
    48              5                    ***0***     
    48              6                    ***0***     
    48              7                    ***0***     
    48              8                    ***0***     
    48              9                    ***0***     
    48             10                    ***0***     
    48             11                    ***0***     
    48             12                    ***0***     
    48             13                    ***0***     
    48             14                    ***0***     
    48             15                    ***0***     
    48             16                    ***0***     
    49                                               
    50              1                    ***0***       `uvm_field_int(valid_write_address, UVM_DEFAULT)
    50              2                    ***0***     
    50              3                    ***0***     
    50              4                    ***0***     
    50              5                    ***0***     
    50              6                    ***0***     
    50              7                    ***0***     
    50              8                    ***0***     
    50              9                    ***0***     
    50             10                    ***0***     
    50             11                    ***0***     
    50             12                    ***0***     
    50             13                    ***0***     
    50             14                    ***0***     
    50             15                    ***0***     
    50             16                    ***0***     
    51              1                    ***0***       `uvm_field_int(s_axil_awaddr, UVM_DEFAULT)  
    51              2                    ***0***     
    51              3                    ***0***     
    51              4                    ***0***     
    51              5                    ***0***     
    51              6                    ***0***     
    51              7                    ***0***     
    51              8                    ***0***     
    51              9                    ***0***     
    51             10                    ***0***     
    51             11                    ***0***     
    51             12                    ***0***     
    51             13                    ***0***     
    51             14                    ***0***     
    51             15                    ***0***     
    51             16                    ***0***     
    52              1                    ***0***       `uvm_field_int(s_axil_awprot, UVM_DEFAULT)
    52              2                    ***0***     
    52              3                    ***0***     
    52              4                    ***0***     
    52              5                    ***0***     
    52              6                    ***0***     
    52              7                    ***0***     
    52              8                    ***0***     
    52              9                    ***0***     
    52             10                    ***0***     
    52             11                    ***0***     
    52             12                    ***0***     
    52             13                    ***0***     
    52             14                    ***0***     
    52             15                    ***0***     
    52             16                    ***0***     
    53                                               
    54              1                    ***0***       `uvm_field_int(valid_write_data, UVM_DEFAULT)
    54              2                    ***0***     
    54              3                    ***0***     
    54              4                    ***0***     
    54              5                    ***0***     
    54              6                    ***0***     
    54              7                    ***0***     
    54              8                    ***0***     
    54              9                    ***0***     
    54             10                    ***0***     
    54             11                    ***0***     
    54             12                    ***0***     
    54             13                    ***0***     
    54             14                    ***0***     
    54             15                    ***0***     
    54             16                    ***0***     
    55              1                    ***0***       `uvm_field_int(s_axil_wdata, UVM_DEFAULT)
    55              2                    ***0***     
    55              3                    ***0***     
    55              4                    ***0***     
    55              5                    ***0***     
    55              6                    ***0***     
    55              7                    ***0***     
    55              8                    ***0***     
    55              9                    ***0***     
    55             10                    ***0***     
    55             11                    ***0***     
    55             12                    ***0***     
    55             13                    ***0***     
    55             14                    ***0***     
    55             15                    ***0***     
    55             16                    ***0***     
    56              1                    ***0***       `uvm_field_int(s_axil_wstrb, UVM_DEFAULT)
    56              2                    ***0***     
    56              3                    ***0***     
    56              4                    ***0***     
    56              5                    ***0***     
    56              6                    ***0***     
    56              7                    ***0***     
    56              8                    ***0***     
    56              9                    ***0***     
    56             10                    ***0***     
    56             11                    ***0***     
    56             12                    ***0***     
    56             13                    ***0***     
    56             14                    ***0***     
    56             15                    ***0***     
    56             16                    ***0***     
    57                                               
    58              1                    ***0***       `uvm_field_int(s_axil_bresp, UVM_DEFAULT)
    58              2                    ***0***     
    58              3                    ***0***     
    58              4                    ***0***     
    58              5                    ***0***     
    58              6                    ***0***     
    58              7                    ***0***     
    58              8                    ***0***     
    58              9                    ***0***     
    58             10                    ***0***     
    58             11                    ***0***     
    58             12                    ***0***     
    58             13                    ***0***     
    58             14                    ***0***     
    58             15                    ***0***     
    58             16                    ***0***     
    59              1                    ***0***       `uvm_field_int(s_axil_bready, UVM_DEFAULT)
    59              2                    ***0***     
    59              3                    ***0***     
    59              4                    ***0***     
    59              5                    ***0***     
    59              6                    ***0***     
    59              7                    ***0***     
    59              8                    ***0***     
    59              9                    ***0***     
    59             10                    ***0***     
    59             11                    ***0***     
    59             12                    ***0***     
    59             13                    ***0***     
    59             14                    ***0***     
    59             15                    ***0***     
    59             16                    ***0***     
    60                                               
    61              1                    ***0***       `uvm_field_int(valid_read_address, UVM_DEFAULT)
    61              2                    ***0***     
    61              3                    ***0***     
    61              4                    ***0***     
    61              5                    ***0***     
    61              6                    ***0***     
    61              7                    ***0***     
    61              8                    ***0***     
    61              9                    ***0***     
    61             10                    ***0***     
    61             11                    ***0***     
    61             12                    ***0***     
    61             13                    ***0***     
    61             14                    ***0***     
    61             15                    ***0***     
    61             16                    ***0***     
    62              1                    ***0***       `uvm_field_int(s_axil_araddr, UVM_DEFAULT)
    62              2                    ***0***     
    62              3                    ***0***     
    62              4                    ***0***     
    62              5                    ***0***     
    62              6                    ***0***     
    62              7                    ***0***     
    62              8                    ***0***     
    62              9                    ***0***     
    62             10                    ***0***     
    62             11                    ***0***     
    62             12                    ***0***     
    62             13                    ***0***     
    62             14                    ***0***     
    62             15                    ***0***     
    62             16                    ***0***     
    63              1                    ***0***       `uvm_field_int(s_axil_arprot, UVM_DEFAULT)
    63              2                    ***0***     
    63              3                    ***0***     
    63              4                    ***0***     
    63              5                    ***0***     
    63              6                    ***0***     
    63              7                    ***0***     
    63              8                    ***0***     
    63              9                    ***0***     
    63             10                    ***0***     
    63             11                    ***0***     
    63             12                    ***0***     
    63             13                    ***0***     
    63             14                    ***0***     
    63             15                    ***0***     
    63             16                    ***0***     
    64                                               
    65              1                    ***0***       `uvm_field_int(s_axil_rready, UVM_DEFAULT)
    65              2                    ***0***     
    65              3                    ***0***     
    65              4                    ***0***     
    65              5                    ***0***     
    65              6                    ***0***     
    65              7                    ***0***     
    65              8                    ***0***     
    65              9                    ***0***     
    65             10                    ***0***     
    65             11                    ***0***     
    65             12                    ***0***     
    65             13                    ***0***     
    65             14                    ***0***     
    65             15                    ***0***     
    65             16                    ***0***     
    66              1                    ***0***       `uvm_field_int(s_axil_rdata, UVM_DEFAULT)
    66              2                    ***0***     
    66              3                    ***0***     
    66              4                    ***0***     
    66              5                    ***0***     
    66              6                    ***0***     
    66              7                    ***0***     
    66              8                    ***0***     
    66              9                    ***0***     
    66             10                    ***0***     
    66             11                    ***0***     
    66             12                    ***0***     
    66             13                    ***0***     
    66             14                    ***0***     
    66             15                    ***0***     
    66             16                    ***0***     
    67              1                    ***0***       `uvm_field_int(s_axil_rresp, UVM_DEFAULT)
    67              2                    ***0***     
    67              3                    ***0***     
    67              4                    ***0***     
    67              5                    ***0***     
    67              6                    ***0***     
    67              7                    ***0***     
    67              8                    ***0***     
    67              9                    ***0***     
    67             10                    ***0***     
    67             11                    ***0***     
    67             12                    ***0***     
    67             13                    ***0***     
    67             14                    ***0***     
    67             15                    ***0***     
    67             16                    ***0***     

  File ../tb/Env/AXI4_cfg.sv
    1                                                class AXI4_cfg  extends uvm_object;
    2               1                    ***0***        `uvm_object_utils(AXI4_cfg)
    2               2                    ***0***     
    2               3                    ***0***     
    2               4                    ***0***     
    2               5                    ***0***     
    2               6                    ***0***     
    2               7                    ***0***     
    2               8                    ***0***     
    2               9                    ***0***     
    2              10                    ***0***     
    3                                                
    4               1                          4        bit is_active = 1; // Default to active
    5                                                   
    6               1                          4        int trans_num=50000;
    7                                                
    8                                                   function new(string name="AXI4_cfg");
    9               1                          4     	super.new(name);

  File ../tb/Env/../Tests/AXI4_seq.sv
    1                                                class AXI4_seq extends uvm_sequence #(AXI4_seq_item);
    2               1                    ***0***         `uvm_object_utils(AXI4_seq)    
    2               2                    ***0***     
    2               3                    ***0***     
    2               4                    ***0***     
    2               5                    ***0***     
    2               6                    ***0***     
    2               7                    ***0***     
    2               8                    ***0***     
    2               9                    ***0***     
    2              10                    ***0***     
    3                                                    AXI4_seq_item item;
    4                                                   
    5                                                   
    6                                                    int i,trans_num;
    7                                                    AXI4_cfg cfg;
    8                                                
    9                                                    function new(string name="AXI4_seq");
    10              1                          2             super.new(name);
    11                                                   endfunction
    12                                               
    13                                                   virtual task pre_body();
    14              1                    ***0***             `uvm_info("Seq", "Starting pre body ", UVM_MEDIUM)
    15              1                          2             cfg=AXI4_cfg::type_id::create("cfg");
    16                                               
    17                                                       if(!uvm_config_db#(AXI4_cfg)::get(m_sequencer, "", "AXI4_cfg", cfg))
    18              1                    ***0***                 `uvm_fatal("NOCFG", "No configuration object found");
    19                                                       
    20              1                          2             trans_num = cfg.trans_num;
    21              1                    ***0***             `uvm_info("Seq", "Finished pre body ", UVM_MEDIUM)
    22                                               
    23                                                   endtask
    24                                               
    25                                                   virtual task body();
    26              1                    ***0***             `uvm_info("Seq", "Starting sequence", UVM_MEDIUM)
    27              1                    ***0***             item = AXI4_seq_item::type_id::create("item");
    28                                               
    29              1                    ***0***             repeat(trans_num)begin
    30              1                    ***0***                 start_item(item);
    31                                                           assert(item.randomize with {
    32                                                 
    33                                               
    34                                                           }); 
    35              1                    ***0***                 finish_item(item);
    36                                                       end
    37              1                    ***0***             `uvm_info("Seq", "Finishing sequence", UVM_MEDIUM)

  File ../tb/Env/../Tests/AXI4_ideal_seq.sv
    1                                                class AXI4_ideal_seq extends AXI4_seq;
    2               1                          1         `uvm_object_utils(AXI4_ideal_seq)    
    2               2                    ***0***     
    2               3                    ***0***     
    2               4                    ***0***     
    2               5                    ***0***     
    2               6                          2     
    2               7                    ***0***     
    2               8                    ***0***     
    2               9                    ***0***     
    2              10                    ***0***     
    3                                                    
    4                                                    function new(string name="AXI4_ideal_seq");
    5               1                          2             super.new(name);
    6                                                    endfunction
    7                                                
    8                                                    virtual task body();
    9               1                    ***0***             `uvm_info("Seq", "Starting sequence", UVM_MEDIUM)
    10              1                          2             item = AXI4_seq_item::type_id::create("item");
    11                                               
    12              1                      45000             repeat(trans_num)begin
    13              1                      45000                 start_item(item);
    14                                                           assert(item.randomize with {
    15                                                               valid_read_address ==1;
    16                                                               valid_write_address ==1;
    17                                                               valid_write_data ==1;
    18                                                               r_addr_delay==0;
    19                                                               w_addr_delay==0;
    20                                                               w_data_delay==0;
    21                                                               s_axil_arprot == 3'b000; // Set default protection
    22                                                               s_axil_awprot == 3'b000; // Set default protection
    23                                                               s_axil_araddr[1:0] == 2'b00; // Set default address alignment
    24                                                               s_axil_awaddr[1:0] == 2'b00; // Set default address alignment
    25                                               
    26                                               
    27                                                           }); 
    28              1                      45000                 finish_item(item);
    29                                                       end
    30              1                    ***0***             `uvm_info("Seq", "Finishing sequence", UVM_MEDIUM)

  File ../tb/Env/AXI4_scoreboard.sv
    1                                                `uvm_analysis_imp_decl(_w)
    2                                                `uvm_analysis_imp_decl(_r)
    3                                                class AXI4_scoreboard extends uvm_scoreboard;
    4               1                    ***0***         `uvm_component_utils(AXI4_scoreboard)
    4               2                    ***0***     
    4               3                    ***0***     
    5                                                
    6                                                    int read_trans,write_trans,correct,incorrect;
    7                                                    AXI4_seq_item Read_item,Read_queue[$],Write_item,Write_queue[$];
    8                                                    uvm_analysis_imp_w#(AXI4_seq_item,AXI4_scoreboard) write_ap;
    9                                                    uvm_analysis_imp_r#(AXI4_seq_item,AXI4_scoreboard) read_ap;
    10                                                   bit [31:0] ram[int];
    11                                                   bit [31:0] golden; // golden value for the read transaction
    12                                               
    13                                                   function new(string name="scoreboard", uvm_component parent=null);
    14              1                          1             super.new(name, parent);
    15              1                          1             write_ap=new("write_ap",this);
    16              1                          1     	    read_ap=new("read_ap",this);
    17                                               
    18                                                   endfunction
    19                                               
    20                                                   function  void build_phase(uvm_phase phase);
    21              1                          1         super.build_phase(phase);
    22                                                   endfunction
    23                                               
    24                                               	// caputring the expected from the refrence model
    25                                                   function void  write_w(AXI4_seq_item item);
    26                                                       if(item.rst) begin
    27              1                          2                 `uvm_info("AXI4_Scoreboard", "Resetting scoreboard", UVM_LOW)
    28              1                          2                 ram.delete(); // clearing the ram
    29                                                       end
    30                                                       else begin
    31              1                      14999                 write_trans++;
    32              1                      14999                 Write_queue.push_back(item); // pushing the write item to the queue
    33              1                    ***0***                 `uvm_info("AXI4_Scoreboard", $sformatf("Write transaction at address %0h with data %0h", item.s_axil_awaddr>>2, item.s_axil_wdata), UVM_HIGH)
    34                                                       end
    35                                                       
    36                                                   endfunction
    37                                               	// caputring the actual from the monitor
    38                                                   function void  write_r(AXI4_seq_item item);
    39              1                      29998             Read_queue.push_back(item); // pushing the read item to the queue
    40              1                    ***0***             `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h with data %0h", item.s_axil_araddr>>2, item.s_axil_rdata), UVM_HIGH)
    41                                                   endfunction
    42                                               
    43                                                   // Run phase
    44                                                   task  run_phase(uvm_phase phase);
    45              1                          1             `uvm_info("AXI4_Scoreboard", "axil_ram Scoreboard is running", UVM_LOW)
    46              1                          1             forever begin
    47                                                           // Wait for the write and read transactions to be captured
    48              1                      44998                 wait(Read_queue.size() > 0 || Write_queue.size() > 0);
    49                                               
    50                                                           if(Read_queue.size() > 0) begin
    51              1                      29998                     Read_item = Read_queue.pop_front(); // Get the read item from the queue
    52                                                               if(!Read_item.s_axil_rready)
    53              1                      14999                         reference_model(Read_item,golden); // Call the golden function to get the expected value
    54                                                               else begin
    55              1                      14999                         compare(Read_item,golden); // Call the compare function to process the read item
    56              1                      14999                         read_trans++;
    57                                                               end
    58                                                           end
    59                                                           
    60                                                           if(Write_queue.size() > 0) begin
    61              1                      14999                     Write_item = Write_queue.pop_front(); // Get the write item from the queue
    62              1                      14999                     Write_to_ram(Write_item); // Call the write function to process the write item
    63                                                           end
    64                                                           end
    65                                                               
    66                                                   endtask
    67                                               
    68                                                   task Write_to_ram(AXI4_seq_item item);
    69                                                       if(item.s_axil_bresp==2'b00) begin // checking if the write response is OK
    70              1                      74995                 foreach(item.s_axil_wstrb[i]) begin
    71                                                               if(item.s_axil_wstrb[i]) begin // checking if the write strobe is valid
    72              1                      44196                         ram[item.s_axil_awaddr>>2][(i*8)+:8] = item.s_axil_wdata[(i*8)+:8]; // writing the data to the ram
    73                                                               end
    74                                                           end
    75              1                    ***0***                 `uvm_info("AXI4_Scoreboard", $sformatf("Write transaction at address %0h with data %0h", item.s_axil_awaddr>>2, item.s_axil_wdata), UVM_HIGH)
    76                                                       end
    77                                                       else begin
    78              1                    ***0***                 `uvm_info("AXI4_Scoreboard", "Write transaction because response wasn't okay", UVM_LOW)
    79                                                       end
    80                                                   endtask
    81                                               
    82                                                   task reference_model(AXI4_seq_item item, output logic [31:0] golden);      
    83                                                           if(ram.exists(item.s_axil_araddr>>2)) begin // checking if the address exists in the ram
    84              1                       5097                     golden = ram[item.s_axil_araddr>>2]; // getting the data from the ram
    85                                                           end
    86                                                           else begin
    87              1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h but address doesn't exist in ram", item.s_axil_araddr>>2), UVM_HIGH)
    88              1                       9902                     golden = 32'b0; // if the address doesn't exist in the ram, set the golden value to 0
    89                                                           end
    90                                                   endtask
    91                                               
    92                                                   task compare(AXI4_seq_item item, logic [31:0] golden);
    93                                                       if(item.s_axil_rresp==2'b00) begin // checking if the read response is OK
    94                                                           if(item.s_axil_rdata == golden) begin // getting the data from the ram
    95              1                    ***0***                     `uvm_info("AXI4_Scoreboard", "Read transaction is correct", UVM_MEDIUM)
    96              1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Read transaction at address %0h with data %0h", item.s_axil_araddr>>2, golden), UVM_HIGH)
    97              1                      14999                     correct++;
    98                                                           end
    99                                                           else begin
    100             1                    ***0***                     `uvm_error("AXI4_Scoreboard", "Read transaction is incorrect")
    101             1                    ***0***                     `uvm_info("AXI4_Scoreboard", $sformatf("Expected: %0h, Actual: %0h at address: %0h", golden, item.s_axil_rdata, item.s_axil_araddr>>2), UVM_LOW)
    102             1                    ***0***                     incorrect++;
    103                                                          end
    104                                                          end
    105                                                      else begin
    106             1                    ***0***                 `uvm_info("AXI4_Scoreboard", "Read transaction because response wasn't okay", UVM_LOW)
    107                                                      end
    108                                                  endtask
    109                                                  function void report_phase(uvm_phase  phase);
    110             1                          1             super.report_phase(phase);
    111             1                          1             `uvm_info("report_phase","*************AXI4_Scoreboard**************************",UVM_LOW)
    112             1                          1             `uvm_info("report_phase", $sformatf("total number of transactions: %0d",read_trans+write_trans),UVM_LOW)
    113             1                          1             `uvm_info("report_phase", $sformatf("total number of read transactions: %0d",read_trans),UVM_LOW)
    114             1                          1             `uvm_info("report_phase", $sformatf("total number of write transactions: %0d",write_trans),UVM_LOW)
    115                                              
    116             1                          1             `uvm_info("report_phase", $sformatf("total succesful transactions: %0d",correct),UVM_LOW)
    117             1                          1             `uvm_info("report_phase", $sformatf("total failled transactions: %0d",incorrect),UVM_LOW) 
    118             1                          1             `uvm_info("report_phase","******************************************************",UVM_LOW) 

  File ../tb/Env/AXI4_read_cov.sv
    1                                                class AXI4_read_cov extends uvm_subscriber#(AXI4_seq_item);
    2               1                    ***0***        `uvm_component_utils(AXI4_read_cov)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                   AXI4_seq_item tr;
    4                                                   localparam max_pos ={32{1'b1}};
    5                                                   localparam special1 = {16{{1'b0},{1'b1}}}; // pattern of zeros and ones
    6                                                   localparam special2 = {16{{1'b1},{1'b0}}}; // pattern of ones and zeros
    7                                                   covergroup AXI4_read_CovGrp;
    8                                                	//Cover that the data read from the register from port a [rs1] has used all these values
    9                                                        rdata_cp : coverpoint tr.s_axil_rdata {
    10                                                           bins MAXPOS = {max_pos};
    11                                                           bins ZERO = {31'b0};
    12                                                           bins special1_b = {special1}; // pattern of zeros and ones
    13                                                           bins special2_b = {special2}; // pattern of ones and zeros
    14                                                           bins rest[4] = {[1:(max_pos-1)]};
    15                                                       }	
    16                                               	// Cover that all the addresses were written in the write operation
    17                                                       raddr_cp : coverpoint tr.s_axil_araddr;
    18                                                   
    19                                                   // Because the current design doesnt support the protection bits, we will not cover them
    20                                                       // raddr_prot_cp : coverpoint tr.s_axil_arprot[0] {
    21                                                       //     bins Unpriv = {1'b0}; // Unprivileged access
    22                                                       //     bins Priv = {1'b1}; // Privileged access
    23                                                       // }
    24                                                       // raddr_prot_cp : coverpoint tr.s_axil_arprot[1] {
    25                                                       //     bins Secure = {1'b0}; 
    26                                                       //     bins Non_Secure = {1'b1}; 
    27                                                       // }
    28                                                       // raddr_prot_cp : coverpoint tr.s_axil_arprot[2] {
    29                                                       //     bins Data = {1'b0}; 
    30                                                       //     bins Inst = {1'b1}; 
    31                                                       // }
    32                                               
    33                                               
    34                                               
    35                                               
    36                                                      endgroup
    37                                               
    38                                                   function new(string name="AXI4_read_cov", uvm_component parent=null);
    39              1                          1             super.new(name, parent);
    40              1                          1             AXI4_read_CovGrp=new();
    41                                                   endfunction
    42                                                   virtual function void build_phase(uvm_phase phase);
    43              1                          1             super.build_phase(phase);
    44                                                   endfunction
    45                                                   function void write(T t);
    46              1                      29998             $cast(tr, t);
    47              1                      29998             AXI4_read_CovGrp.sample();

  File ../tb/Env/AXI4_write_cov.sv
    1                                                class AXI4_write_cov extends uvm_subscriber#(AXI4_seq_item);
    2               1                    ***0***        `uvm_component_utils(AXI4_write_cov)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                   AXI4_seq_item tr;
    4                                                   localparam max_pos ={32{1'b1}};
    5                                                   localparam special1 = {16{{1'b0},{1'b1}}}; // pattern of zeros and ones
    6                                                   localparam special2 = {16{{1'b1},{1'b0}}}; // pattern of ones and zeros
    7                                                   covergroup AXI4_write_CovGrp;
    8                                                	//Cover that the data read from the register from port a [rs1] has used all these values
    9                                                        wdata_cp : coverpoint tr.s_axil_wdata {
    10                                                           bins MAXPOS = {max_pos};
    11                                                           bins ZERO = {31'b0};
    12                                                           bins special1_b = {special1}; // pattern of zeros and ones
    13                                                           bins special2_b = {special2}; // pattern of ones and zeros
    14                                                           bins rest[4] = {[1:(max_pos-1)]};
    15                                                       }	
    16                                                   // Cover that the write strobes have used all these values
    17                                                       wstrb_cp : coverpoint tr.s_axil_wstrb{
    18                                                           bins ALL_ONES = {4'b1111};
    19                                                           bins ALL_ZEROS = {4'b0000};
    20                                                           bins one_zero = {4'b0111, 4'b1011, 4'b1101, 4'b1110}; // patterns with one bit set to zero
    21                                                           bins two_zeros = {4'b1100, 4'b1010, 4'b1001, 4'b0110, 4'b0101, 4'b0011}; // patterns with two bits set to zero
    22                                                           bins three_zeros = {4'b1000, 4'b0100, 4'b0010, 4'b0001}; // patterns with three bits set to zero
    23                                                       }
    24                                               	// Cover that all the addresses were written in the write operation
    25                                                       waddr_cp : coverpoint tr.s_axil_awaddr;
    26                                                       
    27                                                   // Because the current design doesnt support the protection bits, we will not cover them
    28                                                       // waddr_prot_cp : coverpoint tr.s_axil_awprot[0] {
    29                                                       //     bins Unpriv = {1'b0}; // Unprivileged access
    30                                                       //     bins Priv = {1'b1}; // Privileged access
    31                                                       // }
    32                                                       // waddr_prot_cp : coverpoint tr.s_axil_awprot[1] {
    33                                                       //         bins Secure = {1'b0}; 
    34                                                       //         bins Non_Secure = {1'b1}; 
    35                                                       // }
    36                                                       // waddr_prot_cp : coverpoint tr.s_axil_awprot[2] {
    37                                                       //         bins Data = {1'b0}; 
    38                                                       //         bins Inst = {1'b1}; 
    39                                                       // }
    40                                               
    41                                                   endgroup
    42                                                   function new(string name="AXI4_write_cov", uvm_component parent=null);
    43              1                          1             super.new(name, parent);
    44              1                          1             AXI4_write_CovGrp=new();
    45                                                   endfunction
    46                                                   virtual function void build_phase(uvm_phase phase);
    47              1                          1             super.build_phase(phase);
    48                                                   endfunction
    49                                                   function void write(T t);
    50              1                      15001             $cast(tr, t);
    51              1                      15001             AXI4_write_CovGrp.sample();

  File ../tb/Env/AXI4_write_driver.sv
    1                                                class AXI4_write_driver extends uvm_driver#(AXI4_seq_item);
    2               1                    ***0***         `uvm_component_utils(AXI4_write_driver)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                    virtual AXI4_if vif;
    4                                                    AXI4_seq_item address_item,data_item; // Item to hold the sequence item
    5                                                    semaphore  rw_sem; // Semaphores for write address and data operations
    6                                                    // Flags to indicate if write address and data operations are done
    7                                                    bit write_address_done, write_data_done;
    8                                                    int address_written;
    9                                                    function new(string name="AXI4_write_driver", uvm_component parent=null);
    10              1                          1             super.new(name, parent);
    11              1                          1             rw_sem = new(1); // Semaphore for read/write operation
    12                                                   endfunction
    13                                               
    14                                                   virtual function void build_phase(uvm_phase phase);
    15              1                          1             super.build_phase(phase);
    16              1                    ***0***             `uvm_info("AXI4 Write Driver", "Building driver", UVM_MEDIUM)
    17                                                       if(!(uvm_config_db#(virtual AXI4_if)::get(null, "", "vif", vif)))
    18              1                    ***0***                 `uvm_fatal("NOVIF", "No virtual interface found");
    19              1                    ***0***             `uvm_info("AXI4 Write Driver", "Finished building driver", UVM_MEDIUM)
    20                                               
    21                                                   endfunction
    22                                               
    23                                                   virtual task run_phase(uvm_phase phase);
    24              1                          1             super.run_phase(phase);
    25              1                    ***0***             `uvm_info("AXI4 Write Driver", "Running driver", UVM_MEDIUM)
    26              1                          1             reset();
    27              1                          1             write_operation();
    28                                               
    29                                                   endtask
    30                                               
    31                                                   task reset();
    32              1                    ***0***             `uvm_info("Driver", "Resetting driver", UVM_MEDIUM)
    33              1                          1             vif.s_axil_awvalid <= 1'b0;
    34              1                          1             vif.s_axil_wvalid <= 1'b0;
    35              1                          1             vif.s_axil_bready <= 1'b0;
    36              1                          1             vif.s_axil_awaddr <= '0;
    37              1                          1             vif.s_axil_awprot <= '0;
    38              1                          1             vif.s_axil_wdata <= '0;
    39              1                          1             vif.s_axil_wstrb <= '0;
    40              1                          1             @(posedge vif.clk);
    41              1                          1             @(posedge vif.clk);
    42                                               
    43              1                    ***0***             `uvm_info("Driver", "Finished resetting driver", UVM_MEDIUM)
    44                                                   endtask
    45                                               
    46                                               
    47                                               task write_operation();
    48                                               
    49                                                 fork
    50              1                          1             write_address(); // Write address
    51                                                       
    52              1                          1             write_data(); // Write data
    53              1                          1            forever begin
    54                                                          `ifdef IDEAL
    55              1                      44999                     vif.s_axil_bready <= 1'b1; // Set ready for write response in ideal mode
    56                                                           `else
    57                                                               vif.s_axil_bready <=  $urandom_range(0, 1); // Set ready for write response
    58                                                           `endif
    59              1                      44999                @(posedge vif.clk); // Wait for clock edge
    60                                                          if(vif.s_axil_bvalid && vif.s_axil_bready) begin
    61              1                      14999                    write_address_done = 0; // Reset write address done flag
    62              1                      14999                    write_data_done = 0; // Reset write data done flag
    63                                                          end
    64                                                      end
    65                                               
    66                                                 join_none
    67                                               
    68                                               endtask : write_operation
    69                                               
    70                                               task write_address();
    71              1                          1         forever begin
    72              1                      15000             @(posedge vif.clk); // Wait for clock edge
    73                                                       if(!write_address_done) begin // Waits till response is received before the next write operation
    74              1                      15000                 address_item = AXI4_seq_item::type_id::create("address_item", this);
    75                                               
    76              1                      15000                 rw_sem.get(); // Acquire semaphore for getting a sequence item
    77              1                      15000                 seq_item_port.get_next_item(address_item);
    78              1                      15000                 seq_item_port.item_done(); // Indicate that the item is done
    79              1                      15000                 rw_sem.put(); // Release semaphore 
    80                                                           
    81              1                    ***0***                 repeat(address_item.w_addr_delay) @(posedge vif.clk); // Random delay for address write
    81              2                    ***0***     
    82              1                    ***0***                 `uvm_info("AXI4 Write Driver", "Writing address ", UVM_MEDIUM)
    83              1                      15000                 vif.s_axil_awaddr <= address_item.s_axil_awaddr;
    84              1                      15000                 vif.s_axil_awprot <= address_item.s_axil_awprot;
    85                                                           if(address_item.valid_write_address) begin // If the address is valid for write operation
    86              1                      15000                     write_address_done = 1; // Indicate that write address is done
    87              1                      15000                     vif.s_axil_awvalid <= 1'b1;
    88              1                      15000                     @(posedge vif.clk);
    89              1                      29998                     while(!vif.s_axil_awready) // Wait for ready signal to complete the handshake
    90              1                      14999                         @(posedge vif.clk);
    91              1                      14999                     vif.s_axil_awvalid <= 1'b0;
    92              1                      14999                     address_written++;
    93              1                    ***0***                     `uvm_info("AXI4 Write Driver", "Finished writing address", UVM_MEDIUM)
    94                                                           end
    95                                                       end
    96                                                   end
    97                                               
    98                                               endtask : write_address
    99                                               
    100                                              task write_data();
    101             1                          1         forever begin
    102             1                      15000             @(posedge vif.clk); // Wait for clock edge
    103                                                      if(!write_data_done) begin // Waits till response is received before the next write operation
    104             1                      15000                 data_item = AXI4_seq_item::type_id::create("data_item", this);
    105                                              
    106             1                      15000                 rw_sem.get(); // Acquire semaphore for getting a sequence item
    107             1                      15000                 seq_item_port.get_next_item(data_item);
    108             1                      15000                 seq_item_port.item_done(); // Indicate that the item is done
    109             1                      15000                 rw_sem.put(); // Release semaphore 
    110                                              
    111             1                    ***0***                 `uvm_info("AXI4 Write Driver", "Writing data", UVM_MEDIUM)
    112             1                      15000                 vif.s_axil_wdata <= data_item.s_axil_wdata;
    113             1                      15000                 vif.s_axil_wstrb <= data_item.s_axil_wstrb;
    114             1                    ***0***                 repeat(data_item.w_data_delay) @(posedge vif.clk); // Random delay for data write
    114             2                    ***0***     
    115                                                          if(data_item.valid_write_data) begin    // If the data is valid for write operation
    116             1                      15000                     write_data_done = 1; // Indicate that write data is done
    117             1                      15000                     vif.s_axil_wvalid <= 1'b1;
    118             1                      15000                     @(posedge vif.clk);
    119             1                      29998                     while(!vif.s_axil_wready) // Wait for ready signal to complete the handshake
    120             1                      14999                         @(posedge vif.clk);
    121             1                      14999                     vif.s_axil_wvalid <= 1'b0;
    122             1                    ***0***                     `uvm_info("AXI4 Write Driver", "Finished writing data", UVM_MEDIUM)
    123                                                          end
    124                                                      end
    125                                                  end
    126                                                 
    127                                              endtask : write_data
    128                                              
    129                                               function void report_phase(uvm_phase  phase);
    130             1                          1             super.report_phase(phase);
    131             1                          1             `uvm_info("report_phase","*************AXI4_Write_Driver**************************",UVM_LOW)
    132             1                          1             `uvm_info("report_phase", $sformatf("total number of Write transactions count : %0d", address_written),UVM_LOW)
    133             1                          1             `uvm_info("report_phase","******************************************************",UVM_LOW) 

  File ../tb/Env/AXI4_read_driver.sv
    1                                                class AXI4_read_driver extends uvm_driver#(AXI4_seq_item);
    2               1                    ***0***         `uvm_component_utils(AXI4_read_driver)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                    virtual AXI4_if vif;
    4                                                    AXI4_seq_item read_item;
    5                                                    semaphore read_sem,read_address_sem, resp_sem;
    6                                                    bit  read_address_done;
    7                                                    int address_count;
    8                                                    function new(string name="AXI4_read_driver", uvm_component parent=null);
    9               1                          1             super.new(name, parent);
    10              1                          1             read_sem = new(1); // Semaphore for read operation
    11              1                          1             read_address_sem = new(1); // Semaphore for read address operation
    12              1                          1             resp_sem = new(1); // Semaphore for read response operation
    13                                                   endfunction
    14                                               
    15                                                   virtual function void build_phase(uvm_phase phase);
    16              1                          1             super.build_phase(phase);
    17              1                    ***0***             `uvm_info("AXI4 Read Driver", "Building driver", UVM_MEDIUM)
    18                                                       if(!(uvm_config_db#(virtual AXI4_if)::get(null, "", "vif", vif)))
    19              1                    ***0***                 `uvm_fatal("NOVIF", "No virtual interface found");
    20              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished building driver", UVM_MEDIUM)
    21                                                   endfunction
    22                                               
    23                                                   virtual task run_phase(uvm_phase phase);
    24              1                          1             super.run_phase(phase);
    25              1                    ***0***             `uvm_info("AXI4 Read Driver", "Running driver", UVM_MEDIUM)
    26              1                          1             reset();
    27              1                          1             forever begin
    28                                                           // Read operation
    29                                                           fork
    30              1                      44999                     read_operation();
    31                                                               begin
    32              1                      44999                         resp_sem.get(); // Acquire semaphore for read response operation
    33              1                      44999                         @(posedge vif.clk); // Wait for clock edge
    34                                                                   `ifdef IDEAL
    35              1                      44998                             vif.s_axil_rready <= 1'b1; // Set ready for read response in ideal mode
    36                                                                   `else
    37                                                                       vif.s_axil_rready <=  $urandom_range(0, 1); // Set ready for read response
    38                                                                   `endif
    39                                                                   if(vif.s_axil_rvalid ) begin
    40                                                                       if(vif.s_axil_rready) begin
    41              1                      14999                                 read_address_done = 0; // Reset read address done flag
    42                                                                       end
    43                                                                   end
    44              1                      44998                         resp_sem.put(); // Release semaphore for read response operation
    45                                                               end
    46                                                           join_any
    47                                                           
    48                                                       end
    49                                                   endtask
    50                                               
    51                                                   task reset();
    52              1                    ***0***             `uvm_info("AXI4 Read Driver", "Resetting driver", UVM_MEDIUM)
    53              1                          1             vif.s_axil_arvalid <= 1'b0; 
    54              1                          1             vif.s_axil_rready <= 1'b0;
    55              1                          1             vif.s_axil_araddr <= '0;
    56              1                          1             vif.s_axil_arprot <= '0;
    57              1                          1             vif.rst <= 1'b1; // Assert reset
    58              1                          1             @(posedge vif.clk);
    59              1                          1             vif.rst <= 1'b0; // Deassert reset
    60              1                          1             @(posedge vif.clk);
    61                                               
    62              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished resetting driver", UVM_MEDIUM)
    63                                                   endtask
    64                                               
    65                                                  
    66                                               
    67                                               //////////////////// Read Operation //////////////////////
    68                                               task read_operation();
    69              1                      44999         @(posedge vif.clk);
    70              1                      44998         read_sem.get(); // Acquire semaphore for read operation
    71                                                       if(!read_address_done) begin
    72              1                      15000                 read_item = AXI4_seq_item::type_id::create("read_item", this);
    73              1                      15000                 seq_item_port.get_next_item(read_item); // Get the next item from the sequencer
    74              1                      15000                 seq_item_port.item_done(); // Indicate that the item is done
    75              1                    ***0***                 `uvm_info("AXI4 Read Driver", $sformatf("Read item: %s", read_item.convert2string()), UVM_MEDIUM)
    76              1                      15000                 read_address(read_item); // Read address
    77                                                       end
    78              1                      14999         read_sem.put(); // Release semaphore for read operation
    79                                               endtask : read_operation
    80                                               
    81                                               task read_address(AXI4_seq_item read_item);
    82              1                      15000         read_address_sem.get(); // Acquire semaphore for read address operation
    83              1                    ***0***         repeat(read_item.r_addr_delay) @(posedge vif.clk); // Random delay for address read
    83              2                    ***0***     
    84              1                    ***0***         `uvm_info("AXI4 Read Driver", "Reading address", UVM_MEDIUM)
    85              1                      15000         vif.s_axil_araddr <= read_item.s_axil_araddr;
    86              1                      15000         vif.s_axil_arprot <= read_item.s_axil_arprot;
    87                                                   if(read_item.valid_read_address) begin
    88              1                      15000             read_address_done = 1; // Indicate that read address is done
    89              1                      15000             vif.s_axil_arvalid <= 1'b1;
    90              1                      15000             @(posedge vif.clk);
    91              1                      29998             while(!vif.s_axil_arready) 
    92              1                      14999                 @(posedge vif.clk);
    93              1                      14999             vif.s_axil_arvalid <= 1'b0;
    94              1                    ***0***             `uvm_info("AXI4 Read Driver", "Finished reading address", UVM_MEDIUM)
    95              1                      14999             address_count++;
    96                                                   end
    97              1                      14999         @(posedge vif.clk);
    98              1                      14999         read_address_sem.put(); // Release semaphore for read address operation
    99                                               endtask : read_address
    100                                              
    101                                              function void report_phase(uvm_phase phase);
    102             1                          1         super.report_phase(phase);
    103             1                          1         `uvm_info("AXI4 Read Driver", "*************AXI4_Read_Driver**************************", UVM_LOW)
    104             1                          1         `uvm_info("AXI4 Read Driver", $sformatf("Total read addresses processed: %0d", address_count), UVM_LOW)
    105             1                          1         `uvm_info("AXI4 Read Driver", "******************************************************", UVM_LOW)

  File ../tb/Env/AXI4_write_monitor.sv
    1                                                class AXI4_write_monitor extends uvm_monitor;
    2               1                    ***0***       `uvm_component_utils(AXI4_write_monitor)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                
    4                                                  virtual AXI4_if vif;  // Connect this via uvm_config_db
    5                                                  uvm_analysis_port #(AXI4_seq_item) mon_ap;
    6                                                
    7                                                   AXI4_seq_item write_item, data_item, addr_item, addr_queue[$], data_queue[$];
    8                                                  function new(string name, uvm_component parent);
    9               1                          1         super.new(name, parent);
    10              1                          1         mon_ap = new("mon_ap", this);
    11                                                 endfunction
    12                                               
    13                                                 function void build_phase(uvm_phase phase);
    14              1                          1         super.build_phase(phase);
    15                                                   if (!uvm_config_db#(virtual AXI4_if)::get(this, "", "vif", vif))
    16              1                    ***0***           `uvm_fatal("NOVIF", "Virtual interface not set for AXI4_monitor");
    17                                                 endfunction
    18                                               
    19                                                 task run_phase(uvm_phase phase);
    20                                               
    21                                                   fork
    22              1                          1           address_phase;
    23              1                          1           data_phase;
    24              1                          1           response_phase;
    25                                                   join_none
    26                                                   
    27                                                 endtask
    28                                                 
    29                                                //////////////////// Write opertion ////////////////
    30                                                 // Address phase
    31                                                 task address_phase;
    32              1                          1         forever begin
    33              1                      45002           @(posedge vif.clk or posedge vif.rst);
    34                                                     if (vif.rst) begin
    35              1                          2             addr_queue.delete();  // Clear the address queue on reset
    36                                                     end
    37                                                     else begin
    38                                                       if(vif.s_axil_awvalid && vif.s_axil_awready)
    39                                                       begin
    40              1                      14999               addr_item = AXI4_seq_item::type_id::create("addr_item");
    41              1                      14999               addr_item.s_axil_awaddr = vif.s_axil_awaddr;
    42              1                      14999               addr_item.s_axil_awprot = vif.s_axil_awprot;
    43              1                      14999               addr_queue.push_back(addr_item);
    44                                                       end
    45                                                     end
    46                                                   end
    47                                                 endtask : address_phase
    48                                                 // Data phase
    49                                                 task data_phase;
    50              1                          1         forever begin
    51              1                      45002           @(posedge vif.clk or posedge vif.rst);
    52                                                     if (vif.rst) begin
    53              1                          2             data_queue.delete();  // Clear the data queue on reset
    54                                                     end
    55                                                     else  
    56                                                     begin
    57                                                       if(vif.s_axil_wvalid && vif.s_axil_wready )
    58                                                       begin
    59              1                      14999               data_item = AXI4_seq_item::type_id::create("data_item");
    60              1                      14999               data_item.s_axil_wdata = vif.s_axil_wdata;
    61              1                      14999               data_item.s_axil_wstrb = vif.s_axil_wstrb;
    62              1                      14999               data_queue.push_back(data_item);
    63                                                       end
    64                                                     end
    65                                                   end
    66                                                 endtask : data_phase
    67                                                 //Write response
    68                                                 task response_phase;
    69              1                          1         forever begin
    70              1                      45002           @(posedge vif.clk or posedge vif.rst);
    71                                                     if (vif.rst) begin
    72              1                          2             write_item = AXI4_seq_item::type_id::create("write_item");
    73              1                          2             write_item.rst=vif.rst;
    74              1                          2             mon_ap.write(write_item);  // Send reset item to scoreboard or coverage collector
    75                                                     end
    76                                                     else begin
    77                                                       if(vif.s_axil_bvalid && vif.s_axil_bready)
    78                                                       begin
    79              1                      14999                 #1; // Small delay to ensure that the address and data queues are updated because the current design that is being verified raises the bvalid signal with the address and data ready signals. And this is a violation of the AXI4 protocol.
    80                                                           if(addr_queue.size() > 0 && data_queue.size() > 0)
    81                                                           begin
    82              1                      14999                   write_item = AXI4_seq_item::type_id::create("write_item");
    83              1                      14999                   write_item.s_axil_awaddr = addr_queue[0].s_axil_awaddr;
    84              1                      14999                   write_item.s_axil_awprot = addr_queue[0].s_axil_awprot;
    85              1                      14999                   write_item.s_axil_wdata = data_queue[0].s_axil_wdata;
    86              1                      14999                   write_item.s_axil_wstrb = data_queue[0].s_axil_wstrb;
    87              1                      14999                   write_item.s_axil_bresp = vif.s_axil_bresp;
    88              1                      14999                   addr_queue.delete(0);  // Remove the first item from the address queue
    89              1                      14999                   data_queue.delete(0);  // Remove the first item from the data queue
    90              1                      14999                   mon_ap.write(write_item);  // Send to scoreboard or coverage collector
    91                                                           end
    92                                                           else
    93                                                           begin
    94              1                    ***0***                   `uvm_error("AXI4_write_monitor", "Write response received without corresponding address and data");

  File ../tb/Env/AXI4_read_monitor.sv
    1                                                class AXI4_read_monitor extends uvm_monitor;
    2               1                    ***0***       `uvm_component_utils(AXI4_read_monitor)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                  virtual AXI4_if vif;  // Connect this via uvm_config_db
    4                                                  uvm_analysis_port #(AXI4_seq_item) mon_ap;
    5                                                
    6                                                   AXI4_seq_item read_item, addr_item, addr_queue[$];
    7                                                  function new(string name, uvm_component parent);
    8               1                          1         super.new(name, parent);
    9               1                          1         mon_ap = new("mon_ap", this);
    10                                                 endfunction
    11                                               
    12                                                 function void build_phase(uvm_phase phase);
    13              1                          1         super.build_phase(phase);
    14                                                   if (!(uvm_config_db#(virtual AXI4_if)::get(this, "", "vif", vif)))
    15              1                    ***0***           `uvm_fatal("NOVIF", "Virtual interface not set for AXI4_monitor");
    16                                                 endfunction
    17                                               
    18                                                 task run_phase(uvm_phase phase);
    19                                               
    20              1                          1         forever begin
    21              1                      45002           @(posedge vif.clk or posedge vif.rst);
    22                                                     if (vif.rst) begin
    23              1                          2             addr_queue.delete();  // Clear the address queue on reset
    24                                                      
    25                                                     end
    26                                                     else begin
    27              1                      44999             address_phase();
    28              1                      44999             response_phase();
    29                                                     end
    30                                                   end
    31                                                   
    32                                                 endtask
    33                                                 
    34                                                //////////////////// read opertion ////////////////
    35                                                 // Address phase
    36                                                 task address_phase;
    37                                                     // Check if reset is not asserted
    38                                                     if(vif.rst == 1'b0) begin
    39                                                       if(vif.s_axil_arvalid && vif.s_axil_arready)
    40                                                       begin
    41              1                      14999                 addr_item = AXI4_seq_item::type_id::create("addr_item");
    42              1                      14999                 addr_item.s_axil_araddr = vif.s_axil_araddr;
    43              1                      14999                 addr_item.s_axil_arprot = vif.s_axil_arprot;
    44              1                      14999                 addr_item.s_axil_rready = 0;
    45              1                      14999                 mon_ap.write(addr_item);  // the read address is sent first to prepare the data that will be compared in the scoreboard before the data is received
    46              1                      14999                 addr_queue.push_back(addr_item);
    47                                                       end
    48                                                     end
    49              1                    ***0***           else addr_queue.delete();
    50                                                    
    51                                                   
    52                                                 endtask : address_phase
    53                                                 // Data phase
    54                                                 task response_phase;
    55                                                   
    56                                                     if(vif.rst == 1'b0) begin
    57                                                       if(vif.s_axil_rvalid && vif.s_axil_rready)
    58                                                           if(addr_queue.size() > 0) begin
    59              1                      14999                     read_item = AXI4_seq_item::type_id::create("read_item");
    60              1                      14999                     read_item.s_axil_araddr = addr_queue[0].s_axil_araddr;
    61              1                      14999                     read_item.s_axil_arprot = addr_queue[0].s_axil_arprot;
    62              1                      14999                     read_item.s_axil_rdata = vif.s_axil_rdata;
    63              1                      14999                     read_item.s_axil_rresp = vif.s_axil_rresp;
    64              1                      14999                     read_item.s_axil_rready = vif.s_axil_rready;
    65              1                      14999                     addr_queue.delete(0); // Remove the address item after processing
    66              1                      14999                     mon_ap.write(read_item);  // Send to scoreboard or coverage collector
    67                                                           end
    68                                                           else begin
    69              1                    ***0***                     `uvm_error("AXI4_read_monitor", "read response received without corresponding address ");

  File ../tb/Env/AXI4_sequencer.sv
    1                                                class AXI4_sequencer extends uvm_sequencer#(AXI4_seq_item);
    2               1                    ***0***       `uvm_component_utils(AXI4_sequencer)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                
    4                                                  function new(string name, uvm_component parent);
    5               1                          2         super.new(name, parent);

  File ../tb/Env/AXI4_read_agent.sv
    1                                                class AXI4_read_agent extends uvm_agent;
    2               1                    ***0***       `uvm_component_utils(AXI4_read_agent)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                  // Declaring agent components
    4                                                  AXI4_read_driver    driver;
    5                                                  AXI4_sequencer sequencer;
    6                                                  AXI4_read_monitor    read_monitor;
    7                                                  AXI4_read_cov read_cov; // Coverage collector
    8                                                  AXI4_cfg  cfg;  // Config object
    9                                                  // Analysis ports to forward transactions from monitors
    10                                                 uvm_analysis_port #(AXI4_seq_item) read_port;
    11                                               
    12                                                 function new(string name, uvm_component parent);
    13              1                          1         super.new(name, parent);
    14                                                   // Creating analysis ports
    15              1                          1         read_port = new("read_port", this);
    16                                                 endfunction
    17                                               
    18                                                 function void build_phase(uvm_phase phase);
    19              1                          1         super.build_phase(phase);
    20                                               
    21                                                  // Retrieve Configuration
    22                                                   if (!uvm_config_db#(AXI4_cfg)::get(this, "", "AXI4_cfg", cfg))
    23              1                    ***0***           `uvm_fatal("CONFIG", "Agent configuration not set!")
    24                                               
    25              1                          1         read_monitor    = AXI4_read_monitor::type_id::create("read_monitor", this);
    26              1                          1         read_cov        = AXI4_read_cov::type_id::create("read_cov", this);
    27                                                   if (cfg.is_active) begin
    28              1                          1           driver    = AXI4_read_driver::type_id::create("driver", this);
    29              1                          1           sequencer = AXI4_sequencer::type_id::create("sequencer", this);
    30                                                   end
    31                                               
    32                                                 endfunction : build_phase
    33                                               
    34                                               
    35                                                 function void connect_phase(uvm_phase phase);
    36              1                          1         read_monitor.mon_ap.connect(read_port);
    37              1                          1         read_monitor.mon_ap.connect(read_cov.analysis_export);
    38                                                   if (cfg.is_active) begin
    39              1                          1         driver.seq_item_port.connect(sequencer.seq_item_export);

  File ../tb/Env/AXI4_write_agent.sv
    1                                                class AXI4_write_agent extends uvm_agent;
    2               1                    ***0***       `uvm_component_utils(AXI4_write_agent)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                  // Declaring agent components
    4                                                  AXI4_write_driver    driver;
    5                                                  AXI4_sequencer sequencer;
    6                                                  AXI4_write_monitor    write_monitor;
    7                                                  AXI4_write_cov write_cov; // Coverage collector
    8                                                  AXI4_cfg  cfg;  // Config object
    9                                                  // Analysis ports to forward transactions from monitors
    10                                                 uvm_analysis_port #(AXI4_seq_item) write_port;
    11                                               
    12                                                 function new(string name, uvm_component parent);
    13              1                          1         super.new(name, parent);
    14                                                   // Creating analysis ports
    15              1                          1         write_port = new("write_port", this);
    16                                                 endfunction
    17                                               
    18                                                 function void build_phase(uvm_phase phase);
    19              1                          1         super.build_phase(phase);
    20                                               
    21                                                  // Retrieve Configuration
    22                                                   if (!uvm_config_db#(AXI4_cfg)::get(this, "", "AXI4_cfg", cfg))
    23              1                    ***0***           `uvm_fatal("CONFIG", "Agent configuration not set!")
    24                                               
    25              1                          1         write_monitor    = AXI4_write_monitor::type_id::create("write_monitor", this);
    26              1                          1         write_cov        = AXI4_write_cov::type_id::create("write_cov", this);
    27                                                   if (cfg.is_active) begin
    28              1                          1           driver    = AXI4_write_driver::type_id::create("driver", this);
    29              1                          1           sequencer = AXI4_sequencer::type_id::create("sequencer", this);
    30                                                   end
    31                                               
    32                                                 endfunction : build_phase
    33                                               
    34                                               
    35                                                 function void connect_phase(uvm_phase phase);
    36              1                          1         write_monitor.mon_ap.connect(write_port);
    37              1                          1         write_monitor.mon_ap.connect(write_cov.analysis_export);
    38                                                   if (cfg.is_active) begin
    39              1                          1         driver.seq_item_port.connect(sequencer.seq_item_export);

  File ../tb/Env/AXI4_agent.sv
    1                                                class AXI4_agent extends uvm_agent;
    2               1                    ***0***       `uvm_component_utils(AXI4_agent)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                  // Declaring agent components
    4                                                  AXI4_read_agent read_agent;
    5                                                  AXI4_write_agent write_agent;
    6                                                  // Analysis ports to forward transactions from monitors
    7                                                  uvm_analysis_port #(AXI4_seq_item) write_port, read_port;
    8                                                
    9                                                  function new(string name, uvm_component parent);
    10              1                          1         super.new(name, parent);
    11                                                   // Creating analysis ports
    12              1                          1         write_port = new("write_port", this);
    13              1                          1         read_port = new("read_port", this);
    14                                                 endfunction
    15                                               
    16                                                 function void build_phase(uvm_phase phase);
    17              1                          1         super.build_phase(phase);
    18                                                   // Creating the read and write agents
    19              1                          1         read_agent = AXI4_read_agent::type_id::create("read_agent", this);
    20              1                          1         write_agent = AXI4_write_agent::type_id::create("write_agent", this);
    21                                                 endfunction : build_phase
    22                                               
    23                                               
    24                                                 function void connect_phase(uvm_phase phase);
    25                                                   // Connecting each agent with its corresponding port
    26              1                          1         write_agent.write_port.connect(write_port);
    27              1                          1         read_agent.read_port.connect(read_port);

  File ../tb/Env/../Tests/virtual_seqr.sv
    1                                                // Virtual p_sequencer
    2                                                class AXI4_virtual_sequencer extends uvm_sequencer;
    3               1                    ***0***       `uvm_component_utils(AXI4_virtual_sequencer)
    3               2                    ***0***     
    3               3                    ***0***     
    4                                                  AXI4_sequencer write_seqr,
    5                                                              read_seqr;
    6                                                
    7                                                  function new(string name = "AXI4_virtual_sequencer", uvm_component parent = null);
    8               1                          1         super.new(name, parent);

  File ../tb/Env/../Tests/Virtual_seq.sv
    1                                                // Virtual sequence
    2                                                class virtual_seq extends uvm_sequence #(AXI4_seq_item);
    3                                                  AXI4_seq read_seq,
    4                                                          write_seq;
    5                                                  AXI4_sequencer write_seqr,
    6                                                                  read_seqr;
    7               1                    ***0***       `uvm_object_utils(virtual_seq)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8               1                          1       `uvm_declare_p_sequencer(AXI4_virtual_sequencer)
    8               2                    ***0***     
    9                                                  
    10                                                 function new (string name = "virtual_seq");
    11              1                          1         super.new(name);
    12                                                 endfunction
    13                                                 
    14                                                 task body();
    15              1                          1         `uvm_info(get_type_name(), "virtual_seq: Inside Body", UVM_LOW);
    16              1                          1         write_seq = AXI4_seq::type_id::create("write_seq");
    17              1                          1         read_seq = AXI4_seq::type_id::create("read_seq");

  File ../tb/Env/../Tests/Write_Read_Seq.sv
    1                                                // Virtual sequence
    2                                                class AXI4_write_read_seq extends virtual_seq;
    3               1                    ***0***       `uvm_object_utils(AXI4_write_read_seq)
    3               2                    ***0***     
    3               3                    ***0***     
    3               4                    ***0***     
    3               5                    ***0***     
    3               6                    ***0***     
    3               7                    ***0***     
    3               8                    ***0***     
    3               9                    ***0***     
    3              10                    ***0***     
    4                                                  
    5                                                  function new (string name = "AXI4_write_read_seq");
    6               1                    ***0***         super.new(name);
    7                                                  endfunction
    8                                                  
    9                                                  task body();
    10              1                    ***0***        super.body();
    11              1                    ***0***         write_seq.start(p_sequencer.write_seqr);
    12              1                    ***0***         read_seq.start(p_sequencer.read_seqr);

  File ../tb/Env/../Tests/Concurrent_Seq.sv
    1                                                // Virtual sequence
    2                                                class AXI4_concurrent_seq extends virtual_seq;
    3               1                          1       `uvm_object_utils(AXI4_concurrent_seq)
    3               2                    ***0***     
    3               3                    ***0***     
    3               4                    ***0***     
    3               5                    ***0***     
    3               6                          3     
    3               7                    ***0***     
    3               8                    ***0***     
    3               9                    ***0***     
    3              10                    ***0***     
    4                                                
    5                                                  function new (string name = "AXI4_concurrent_seq");
    6               1                          1         super.new(name);
    7                                                  endfunction
    8                                                  
    9                                                  task body();
    10              1                          1        super.body();
    11                                                  fork
    12              1                          1         write_seq.start(p_sequencer.write_seqr);
    13              1                          1         read_seq.start(p_sequencer.read_seqr);

  File ../tb/Env/AXI4_enviroment.sv
    1                                                class AXI4_enviroment extends uvm_env;
    2               1                    ***0***       `uvm_component_utils(AXI4_enviroment)
    2               2                    ***0***     
    2               3                    ***0***     
    3                                                
    4                                                   AXI4_agent         agent;
    5                                                   AXI4_virtual_sequencer  virt_seqr;
    6                                                   AXI4_scoreboard   scb;
    7                                                
    8                                                
    9                                                  function new(string name, uvm_component parent);
    10              1                          1         super.new(name,parent);
    11                                                 endfunction:new
    12                                               
    13                                                 //////////////////BUILD PHASE////////////////////
    14                                                 function void build_phase(uvm_phase phase);
    15              1                          1         super.build_phase(phase);
    16                                               
    17              1                          1         agent = AXI4_agent::type_id::create("agent",this);
    18              1                          1         virt_seqr    = AXI4_virtual_sequencer::type_id::create("virt_seqr",this);
    19              1                          1         scb          = AXI4_scoreboard::type_id::create("scb",this);
    20                                               
    21                                                 endfunction: build_phase
    22                                               
    23                                                 //////////////CONNECT PHASE///////////////////////
    24                                                 function void connect_phase(uvm_phase phase);
    25                                                 
    26              1                          1         agent.write_port.connect(scb.write_ap);  // Connect agent's write port to scoreboard's write analysis port
    27              1                          1         agent.read_port.connect(scb.read_ap);    // Connect agent's read port to scoreboard's read analysis port
    28              1                          1         virt_seqr.read_seqr = agent.read_agent.sequencer; // Connect the virtual sequencer to the agent's sequencer
    29              1                          1         virt_seqr.write_seqr = agent.write_agent.sequencer; // Connect the virtual sequencer to the agent's sequencer

  File ../tb/Env/../Tests/AXI4_test.sv
    1                                                import AXI4_pkg::*;
    2                                                class AXI4_test extends uvm_test;
    3               1                    ***0***     	`uvm_component_utils(AXI4_test)
    3               2                    ***0***     
    3               3                    ***0***     
    4               1                          1     	int write_num=20000,
    5               1                          1     		read_num=10000;
    6                                                
    7                                                	AXI4_enviroment env;
    8                                                	virtual_seq vseq;
    9                                                
    10                                               	AXI4_cfg	write_cfg,read_cfg;
    11                                               
    12                                               	function new(string name = "AXI4_test", uvm_component parent);
    13              1                          1     		super.new(name, parent);
    14                                               	endfunction: new
    15                                               
    16                                               	function void build_phase(uvm_phase phase);
    17                                               		`ifdef IDEAL
    18              1                          1     			AXI4_seq::type_id::set_type_override(AXI4_ideal_seq::get_type()); // Override the base sequence type with the ideal sequence type, If you want non ideal just comment this line
    19                                               		`endif
    20                                               
    21              1                          1     		super.build_phase(phase);
    22              1                          1     		write_cfg = AXI4_cfg::type_id::create("write_cfg", this);
    23              1                          1     		read_cfg = AXI4_cfg::type_id::create("read_cfg", this);
    24              1                          1     		vseq = virtual_seq::type_id::create("vseq", this);
    25              1                          1     		env  = AXI4_enviroment::type_id::create("env", this);
    26                                               
    27                                               		/////////////////////////////////////
    28                                               
    29              1                          1     		write_cfg.trans_num=write_num;
    30              1                          1     		read_cfg.trans_num=read_num;
    31              1                          1     		uvm_config_db#(AXI4_cfg)::set(this, "*.write_agent*", "AXI4_cfg", write_cfg);
    32              1                          1     		uvm_config_db#(AXI4_cfg)::set(this, "*.read_agent*", "AXI4_cfg", read_cfg);
    33                                               		/////////////////////////////////////
    34                                               	endfunction: build_phase
    35                                               
    36                                               
    37                                               	  task run_phase (uvm_phase phase);
    38              1                          1     		super.run_phase(phase);
    39                                               		
    40                                               		
    41              1                          1     		phase.raise_objection(this);
    42              1                          1     			vseq.start(env.virt_seqr);
    43              1                          1     		phase.drop_objection(this);

  File ../tb/Env/../Tests/Write_Read_Test.sv
    1                                                class AXI4_write_read_test extends AXI4_test;
    2                                                
    3               1                    ***0***     	`uvm_component_utils(AXI4_write_read_test)
    3               2                    ***0***     
    3               3                    ***0***     
    4                                                
    5                                                	function new(string name = "AXI4_write_read_test", uvm_component parent);
    6               1                    ***0***     		super.new(name, parent);
    7                                                	endfunction: new
    8                                                
    9                                                	function void build_phase(uvm_phase phase);
    10                                               
    11              1                    ***0***     		virtual_seq::type_id::set_type_override(AXI4_write_read_seq::get_type());
    12                                               
    13              1                    ***0***     		super.build_phase(phase);

  File ../tb/Env/../Tests/Concurrent_Test.sv
    1                                                class AXI4_concurrent_test extends AXI4_test;
    2                                                
    3               1                    ***0***     	`uvm_component_utils(AXI4_concurrent_test)
    3               2                    ***0***     
    3               3                          1     
    4                                                
    5                                                	function new(string name = "AXI4_concurrent_test", uvm_component parent);
    6               1                          1     		super.new(name, parent);
    7                                                	endfunction: new
    8                                                
    9                                                	function void build_phase(uvm_phase phase);
    10                                               
    11              1                          1     		virtual_seq::type_id::set_type_override(AXI4_concurrent_seq::get_type());
    12              1                          1             write_num = 30000;
    13              1                          1             read_num = 15000;
    14                                               
    15              1                          1     		super.build_phase(phase);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /AXI4_pkg/AXI4_read_cov/AXI4_read_CovGrp        100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rdata_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin MAXPOS                                        148          1          -    Covered              
        bin ZERO                                        10176          1          -    Covered              
        bin special1_b                                    128          1          -    Covered              
        bin special2_b                                    151          1          -    Covered              
        bin rest[0]                                      1661          1          -    Covered              
        bin rest[1]                                      1066          1          -    Covered              
        bin rest[2]                                      1034          1          -    Covered              
        bin rest[3]                                       914          1          -    Covered              
    Coverpoint raddr_cp                               100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:1023]                                  412          1          -    Covered              
        bin auto[1024:2047]                               480          1          -    Covered              
        bin auto[2048:3071]                               500          1          -    Covered              
        bin auto[3072:4095]                               414          1          -    Covered              
        bin auto[4096:5119]                               498          1          -    Covered              
        bin auto[5120:6143]                               472          1          -    Covered              
        bin auto[6144:7167]                               482          1          -    Covered              
        bin auto[7168:8191]                               510          1          -    Covered              
        bin auto[8192:9215]                               424          1          -    Covered              
        bin auto[9216:10239]                              460          1          -    Covered              
        bin auto[10240:11263]                             462          1          -    Covered              
        bin auto[11264:12287]                             394          1          -    Covered              
        bin auto[12288:13311]                             448          1          -    Covered              
        bin auto[13312:14335]                             490          1          -    Covered              
        bin auto[14336:15359]                             444          1          -    Covered              
        bin auto[15360:16383]                             458          1          -    Covered              
        bin auto[16384:17407]                             452          1          -    Covered              
        bin auto[17408:18431]                             496          1          -    Covered              
        bin auto[18432:19455]                             426          1          -    Covered              
        bin auto[19456:20479]                             476          1          -    Covered              
        bin auto[20480:21503]                             490          1          -    Covered              
        bin auto[21504:22527]                             430          1          -    Covered              
        bin auto[22528:23551]                             450          1          -    Covered              
        bin auto[23552:24575]                             486          1          -    Covered              
        bin auto[24576:25599]                             506          1          -    Covered              
        bin auto[25600:26623]                             456          1          -    Covered              
        bin auto[26624:27647]                             486          1          -    Covered              
        bin auto[27648:28671]                             444          1          -    Covered              
        bin auto[28672:29695]                             536          1          -    Covered              
        bin auto[29696:30719]                             452          1          -    Covered              
        bin auto[30720:31743]                             446          1          -    Covered              
        bin auto[31744:32767]                             456          1          -    Covered              
        bin auto[32768:33791]                             502          1          -    Covered              
        bin auto[33792:34815]                             492          1          -    Covered              
        bin auto[34816:35839]                             478          1          -    Covered              
        bin auto[35840:36863]                             490          1          -    Covered              
        bin auto[36864:37887]                             512          1          -    Covered              
        bin auto[37888:38911]                             490          1          -    Covered              
        bin auto[38912:39935]                             426          1          -    Covered              
        bin auto[39936:40959]                             400          1          -    Covered              
        bin auto[40960:41983]                             472          1          -    Covered              
        bin auto[41984:43007]                             492          1          -    Covered              
        bin auto[43008:44031]                             442          1          -    Covered              
        bin auto[44032:45055]                             466          1          -    Covered              
        bin auto[45056:46079]                             464          1          -    Covered              
        bin auto[46080:47103]                             452          1          -    Covered              
        bin auto[47104:48127]                             452          1          -    Covered              
        bin auto[48128:49151]                             476          1          -    Covered              
        bin auto[49152:50175]                             518          1          -    Covered              
        bin auto[50176:51199]                             520          1          -    Covered              
        bin auto[51200:52223]                             466          1          -    Covered              
        bin auto[52224:53247]                             452          1          -    Covered              
        bin auto[53248:54271]                             494          1          -    Covered              
        bin auto[54272:55295]                             496          1          -    Covered              
        bin auto[55296:56319]                             506          1          -    Covered              
        bin auto[56320:57343]                             500          1          -    Covered              
        bin auto[57344:58367]                             448          1          -    Covered              
        bin auto[58368:59391]                             476          1          -    Covered              
        bin auto[59392:60415]                             494          1          -    Covered              
        bin auto[60416:61439]                             482          1          -    Covered              
        bin auto[61440:62463]                             380          1          -    Covered              
        bin auto[62464:63487]                             488          1          -    Covered              
        bin auto[63488:64511]                             448          1          -    Covered              
        bin auto[64512:65535]                             488          1          -    Covered              
 TYPE /AXI4_pkg/AXI4_write_cov/AXI4_write_CovGrp      100.00%        100          -    Covered              
    covered/total bins:                                    77         77          -                      
    missing/total bins:                                     0         77          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wdata_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin MAXPOS                                        852          1          -    Covered              
        bin ZERO                                          884          1          -    Covered              
        bin special1_b                                    814          1          -    Covered              
        bin special2_b                                    894          1          -    Covered              
        bin rest[0]                                      2938          1          -    Covered              
        bin rest[1]                                      3695          1          -    Covered              
        bin rest[2]                                      3792          1          -    Covered              
        bin rest[3]                                      2838          1          -    Covered              
    Coverpoint wstrb_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        bin ALL_ONES                                     7537          1          -    Covered              
        bin ALL_ZEROS                                     499          1          -    Covered              
        bin one_zero                                     2080          1          -    Covered              
        bin two_zeros                                    2925          1          -    Covered              
        bin three_zeros                                  1958          1          -    Covered              
    Coverpoint waddr_cp                               100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0:1023]                                  270          1          -    Covered              
        bin auto[1024:2047]                               233          1          -    Covered              
        bin auto[2048:3071]                               219          1          -    Covered              
        bin auto[3072:4095]                               229          1          -    Covered              
        bin auto[4096:5119]                               239          1          -    Covered              
        bin auto[5120:6143]                               267          1          -    Covered              
        bin auto[6144:7167]                               213          1          -    Covered              
        bin auto[7168:8191]                               229          1          -    Covered              
        bin auto[8192:9215]                               249          1          -    Covered              
        bin auto[9216:10239]                              235          1          -    Covered              
        bin auto[10240:11263]                             262          1          -    Covered              
        bin auto[11264:12287]                             249          1          -    Covered              
        bin auto[12288:13311]                             235          1          -    Covered              
        bin auto[13312:14335]                             237          1          -    Covered              
        bin auto[14336:15359]                             261          1          -    Covered              
        bin auto[15360:16383]                             218          1          -    Covered              
        bin auto[16384:17407]                             230          1          -    Covered              
        bin auto[17408:18431]                             218          1          -    Covered              
        bin auto[18432:19455]                             216          1          -    Covered              
        bin auto[19456:20479]                             247          1          -    Covered              
        bin auto[20480:21503]                             260          1          -    Covered              
        bin auto[21504:22527]                             236          1          -    Covered              
        bin auto[22528:23551]                             214          1          -    Covered              
        bin auto[23552:24575]                             267          1          -    Covered              
        bin auto[24576:25599]                             231          1          -    Covered              
        bin auto[25600:26623]                             218          1          -    Covered              
        bin auto[26624:27647]                             210          1          -    Covered              
        bin auto[27648:28671]                             232          1          -    Covered              
        bin auto[28672:29695]                             225          1          -    Covered              
        bin auto[29696:30719]                             281          1          -    Covered              
        bin auto[30720:31743]                             229          1          -    Covered              
        bin auto[31744:32767]                             229          1          -    Covered              
        bin auto[32768:33791]                             248          1          -    Covered              
        bin auto[33792:34815]                             230          1          -    Covered              
        bin auto[34816:35839]                             240          1          -    Covered              
        bin auto[35840:36863]                             206          1          -    Covered              
        bin auto[36864:37887]                             231          1          -    Covered              
        bin auto[37888:38911]                             238          1          -    Covered              
        bin auto[38912:39935]                             221          1          -    Covered              
        bin auto[39936:40959]                             222          1          -    Covered              
        bin auto[40960:41983]                             243          1          -    Covered              
        bin auto[41984:43007]                             232          1          -    Covered              
        bin auto[43008:44031]                             216          1          -    Covered              
        bin auto[44032:45055]                             232          1          -    Covered              
        bin auto[45056:46079]                             223          1          -    Covered              
        bin auto[46080:47103]                             246          1          -    Covered              
        bin auto[47104:48127]                             235          1          -    Covered              
        bin auto[48128:49151]                             224          1          -    Covered              
        bin auto[49152:50175]                             235          1          -    Covered              
        bin auto[50176:51199]                             227          1          -    Covered              
        bin auto[51200:52223]                             199          1          -    Covered              
        bin auto[52224:53247]                             217          1          -    Covered              
        bin auto[53248:54271]                             246          1          -    Covered              
        bin auto[54272:55295]                             242          1          -    Covered              
        bin auto[55296:56319]                             219          1          -    Covered              
        bin auto[56320:57343]                             241          1          -    Covered              
        bin auto[57344:58367]                             234          1          -    Covered              
        bin auto[58368:59391]                             247          1          -    Covered              
        bin auto[59392:60415]                             233          1          -    Covered              
        bin auto[60416:61439]                             233          1          -    Covered              
        bin auto[61440:62463]                             244          1          -    Covered              
        bin auto[62464:63487]                             223          1          -    Covered              
        bin auto[63488:64511]                             261          1          -    Covered              
        bin auto[64512:65535]                             223          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/tb/DUT/assertions_inst/stable_awaddr_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(31)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/awvalid_cover    AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(38)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/stable_wdata_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(45)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/wvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(52)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/bvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(59)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/stable_araddr_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(66)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/arvalid_cover    AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(73)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/stable_rdata_cover 
                                         AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(80)
                                                                              14998 Covered   
/tb/DUT/assertions_inst/rvalid_cover     AXI4_Assertions Verilog  SVA  ../tb/Env/AXI4_Assertions.sv(87)
                                                                              14998 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 9

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/tb/DUT/assertions_inst/stable_awaddr_assertion
                     ../tb/Env/AXI4_Assertions.sv(30)
                                                        0          1
/tb/DUT/assertions_inst/awvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(37)
                                                        0          1
/tb/DUT/assertions_inst/stable_wdata_assertion
                     ../tb/Env/AXI4_Assertions.sv(44)
                                                        0          1
/tb/DUT/assertions_inst/wvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(51)
                                                        0          1
/tb/DUT/assertions_inst/bvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(58)
                                                        0          1
/tb/DUT/assertions_inst/stable_araddr_assertion
                     ../tb/Env/AXI4_Assertions.sv(65)
                                                        0          1
/tb/DUT/assertions_inst/arvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(72)
                                                        0          1
/tb/DUT/assertions_inst/stable_rdata_assertion
                     ../tb/Env/AXI4_Assertions.sv(79)
                                                        0          1
/tb/DUT/assertions_inst/rvalid_assertion
                     ../tb/Env/AXI4_Assertions.sv(86)
                                                        0          1
/AXI4_pkg/AXI4_ideal_seq/body/#ublk#214590327#12/immed__14
                     ../tb/Env/../Tests/AXI4_ideal_seq.sv(14)
                                                        0          1

Total Coverage By Instance (filtered view): 56.91%

